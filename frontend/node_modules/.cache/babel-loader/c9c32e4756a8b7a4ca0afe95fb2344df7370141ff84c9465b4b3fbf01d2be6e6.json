{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router\";\nexport default {\n  props: [\"showNotification\"],\n  name: \"UserRegister\",\n  data() {\n    return {\n      form: {\n        email: \"\",\n        password: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        bio: \"\",\n        birthday: \"\",\n        nickname: \"\"\n      },\n      avatarFile: null,\n      fields: {\n        // username: { label: \"Username\", type: \"text\", placeholder: \"username\" },\n        email: {\n          label: \"Email\",\n          type: \"email\",\n          placeholder: \"test@example.com\"\n        },\n        password: {\n          label: \"Password\",\n          type: \"password\",\n          placeholder: \"********\"\n        },\n        firstname: {\n          label: \"First Name\",\n          type: \"text\",\n          placeholder: \"First Name\"\n        },\n        lastname: {\n          label: \"Last Name\",\n          type: \"text\",\n          placeholder: \"Last Name\"\n        },\n        nickname: {\n          label: \"Nickname\",\n          type: \"text\",\n          placeholder: \"Nickname (optional)\",\n          required: false\n        },\n        bio: {\n          label: \"Bio\",\n          type: \"text\",\n          placeholder: \"Tell us about yourself\",\n          required: false\n        },\n        birthday: {\n          label: \"Birthday\",\n          type: \"date\",\n          placeholder: \"\"\n        }\n      }\n    };\n  },\n  methods: {\n    onAvatarChange(event) {\n      this.avatarFile = event.target.files[0];\n    },\n    validateForm() {\n      const errors = [];\n      if (!/^[a-zA-Z0-9_]{3,20}$/.test(this.form.username)) {\n        errors.push(\"Username must be 3-20 alphanumeric characters.\");\n      }\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.form.email)) {\n        errors.push(\"Invalid email format.\");\n      }\n\n      // if (!/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(this.form.password)) {\n      //   errors.push(\"Password must be at least 8 characters, including letters and numbers.\");\n      // }\n\n      if (!/^[a-zA-Z]{1,30}$/.test(this.form.firstname)) {\n        errors.push(\"First name must contain only letters.\");\n      }\n      if (!/^[a-zA-Z]{1,30}$/.test(this.form.lastname)) {\n        errors.push(\"Last name must contain only letters.\");\n      }\n\n      // Date of birth validation\n      if (!this.form.birthday) {\n        errors.push(\"Date of birth is required.\");\n      } else {\n        const birthDate = new Date(this.form.birthday);\n        const today = new Date();\n        const minAge = 13;\n        const maxAge = 100;\n\n        // Check if date is valid\n        if (isNaN(birthDate.getTime())) {\n          errors.push(\"Invalid date of birth format.\");\n        } else {\n          // Check if date is in the future\n          if (birthDate > today) {\n            errors.push(\"Date of birth cannot be in the future.\");\n          }\n\n          // Calculate age\n          const age = today.getFullYear() - birthDate.getFullYear();\n          const monthDiff = today.getMonth() - birthDate.getMonth();\n          const dayDiff = today.getDate() - birthDate.getDate();\n\n          // Adjust age if birthday hasn't occurred this year\n          const actualAge = monthDiff < 0 || monthDiff === 0 && dayDiff < 0 ? age - 1 : age;\n          if (actualAge < minAge) {\n            errors.push(`You must be at least ${minAge} years old to register.`);\n          }\n          if (actualAge > maxAge) {\n            errors.push(`Date of birth indicates an age over ${maxAge} years.`);\n          }\n        }\n      }\n      if (this.avatarFile) {\n        const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!allowedTypes.includes(this.avatarFile.type)) {\n          errors.push(\"Invalid avatar type (jpg/jpeg/png only).\");\n        }\n        if (this.avatarFile.size > 2 * 1024 * 1024) {\n          errors.push(\"Avatar must be under 2MB.\");\n        }\n      }\n      return errors;\n    },\n    handleRegister() {\n      this.errors = this.validateForm();\n      if (this.errors.length > 0) {\n        this.showNotification(\"Please fix the following errors: \" + this.errors.join(\", \"), \"error\");\n        return;\n      }\n      const formData = new FormData();\n      // Add avatar\n      if (this.avatarFile) {\n        formData.append(\"avatar\", this.avatarFile);\n      }\n      // Add JSON user data\n      const userJson = JSON.stringify(this.form);\n      formData.append(\"user\", userJson);\n      fetch(`${import.meta.env.VITE_API_URL}/api/auth/register`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData\n      }).then(res => {\n        if (!res.ok) throw new Error(\"Registration failed\");\n        return res.json();\n      }).then(data => {\n        this.showNotification(\"Registration successful!\", \"success\");\n        console.log(\"Success:\", data);\n        router.push(\"/\");\n      }).catch(err => {\n        this.showNotification(\"Registration failed. Please try again.\", \"error\");\n        console.error(\"Error:\", err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","props","name","data","form","email","password","firstname","lastname","bio","birthday","nickname","avatarFile","fields","label","type","placeholder","required","methods","onAvatarChange","event","target","files","validateForm","errors","test","username","push","birthDate","Date","today","minAge","maxAge","isNaN","getTime","age","getFullYear","monthDiff","getMonth","dayDiff","getDate","actualAge","allowedTypes","includes","size","handleRegister","length","showNotification","join","formData","FormData","append","userJson","JSON","stringify","fetch","import","meta","env","VITE_API_URL","method","credentials","body","then","res","ok","Error","json","console","log","catch","err","error"],"sources":["/Users/apple/Desktop/social-1/social-network/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-card\">\n      <div class=\"logo-container\">\n        <img\n          src=\"https://logosandtypes.com/wp-content/uploads/2023/03/astro-framework.svg\"\n          alt=\"Astro Logo\"\n          class=\"logo\"\n        />\n      </div>\n      <form @submit.prevent=\"handleRegister\">\n        <div class=\"form-group\" v-for=\"(field, key) in fields\" :key=\"key\">\n          <label :for=\"key\">{{ field.label }}</label>\n          <input\n            :type=\"field.type\"\n            :id=\"key\"\n            v-model=\"form[key]\"\n            :placeholder=\"field.placeholder\"\n            :required=\"field.required !== false\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"avatar\">Avatar</label>\n          <input\n            type=\"file\"\n            id=\"avatar\"\n            @change=\"onAvatarChange\"\n            accept=\"image/*\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn\">Register</button>\n        <p class=\"login-link\">\n          Already have an account?\n          <a href=\"/login\">Login</a>\n        </p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\n\nexport default {\n  props: [\"showNotification\"],\n  name: \"UserRegister\",\n  data() {\n    return {\n      form: {\n        email: \"\",\n        password: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        bio: \"\",\n        birthday: \"\",\n        nickname: \"\",\n      },\n      avatarFile: null,\n      fields: {\n        // username: { label: \"Username\", type: \"text\", placeholder: \"username\" },\n        email: {\n          label: \"Email\",\n          type: \"email\",\n          placeholder: \"test@example.com\",\n        },\n        password: {\n          label: \"Password\",\n          type: \"password\",\n          placeholder: \"********\",\n        },\n        firstname: { label: \"First Name\", type: \"text\", placeholder: \"First Name\" },\n        lastname: { label: \"Last Name\", type: \"text\", placeholder: \"Last Name\" },\n        nickname: {\n          label: \"Nickname\",\n          type: \"text\",\n          placeholder: \"Nickname (optional)\",\n          required: false,\n        },\n        bio: {\n          label: \"Bio\",\n          type: \"text\",\n          placeholder: \"Tell us about yourself\",\n          required: false,\n        },\n        birthday: { label: \"Birthday\", type: \"date\", placeholder: \"\" },\n      },\n    };\n  },\n  \n  methods: {\n    onAvatarChange(event) {\n      this.avatarFile = event.target.files[0];\n    },\n    validateForm() {\n      const errors = [];\n\n      if (!/^[a-zA-Z0-9_]{3,20}$/.test(this.form.username)) {\n        errors.push(\"Username must be 3-20 alphanumeric characters.\");\n      }\n\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.form.email)) {\n        errors.push(\"Invalid email format.\");\n      }\n\n      // if (!/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(this.form.password)) {\n      //   errors.push(\"Password must be at least 8 characters, including letters and numbers.\");\n      // }\n\n      if (!/^[a-zA-Z]{1,30}$/.test(this.form.firstname)) {\n        errors.push(\"First name must contain only letters.\");\n      }\n\n      if (!/^[a-zA-Z]{1,30}$/.test(this.form.lastname)) {\n        errors.push(\"Last name must contain only letters.\");\n      }\n\n      // Date of birth validation\n      if (!this.form.birthday) {\n        errors.push(\"Date of birth is required.\");\n      } else {\n        const birthDate = new Date(this.form.birthday);\n        const today = new Date();\n        const minAge = 13;\n        const maxAge = 100;\n        \n        // Check if date is valid\n        if (isNaN(birthDate.getTime())) {\n          errors.push(\"Invalid date of birth format.\");\n        } else {\n          // Check if date is in the future\n          if (birthDate > today) {\n            errors.push(\"Date of birth cannot be in the future.\");\n          }\n          \n          // Calculate age\n          const age = today.getFullYear() - birthDate.getFullYear();\n          const monthDiff = today.getMonth() - birthDate.getMonth();\n          const dayDiff = today.getDate() - birthDate.getDate();\n          \n          // Adjust age if birthday hasn't occurred this year\n          const actualAge = monthDiff < 0 || (monthDiff === 0 && dayDiff < 0) ? age - 1 : age;\n          \n          if (actualAge < minAge) {\n            errors.push(`You must be at least ${minAge} years old to register.`);\n          }\n          if (actualAge > maxAge) {\n            errors.push(`Date of birth indicates an age over ${maxAge} years.`);\n          }\n        }\n      }\n\n      if (this.avatarFile) {\n        const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!allowedTypes.includes(this.avatarFile.type)) {\n          errors.push(\"Invalid avatar type (jpg/jpeg/png only).\");\n        }\n\n        if (this.avatarFile.size > 2 * 1024 * 1024) {\n          errors.push(\"Avatar must be under 2MB.\");\n        }\n      }\n\n      return errors;\n    },\n    handleRegister() {\n      this.errors = this.validateForm();\n      if (this.errors.length > 0) {\n        this.showNotification(\n          \"Please fix the following errors: \" + this.errors.join(\", \"),\n          \"error\"\n        );\n        return;\n      }\n      const formData = new FormData();\n      // Add avatar\n      if (this.avatarFile) {\n        formData.append(\"avatar\", this.avatarFile);\n      }\n      // Add JSON user data\n      const userJson = JSON.stringify(this.form);\n      formData.append(\"user\", userJson);\n      fetch(`${import.meta.env.VITE_API_URL}/api/auth/register`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData,\n      })\n        .then((res) => {\n          if (!res.ok) throw new Error(\"Registration failed\");\n          return res.json();\n        })\n        .then((data) => {\n          this.showNotification(\"Registration successful!\", \"success\");\n          console.log(\"Success:\", data);\n          router.push(\"/\");\n        })\n        .catch((err) => {\n          this.showNotification(\n            \"Registration failed. Please try again.\",\n            \"error\"\n          );\n          console.error(\"Error:\", err);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* General styles for the register page */\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n  background-image: url(\"https://learn.zone01oujda.ma/assets/img/01-trame.svg\");\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  font-family: \"Arial\", sans-serif;\n  position: relative;\n}\n\n.register-container::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n}\n\n.register-card {\n  background-color: rgba(17, 17, 17, 0.95);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  padding: 40px;\n  border-radius: 12px;\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n  position: relative;\n  z-index: 2;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.form-group {\n  margin-bottom: 20px;\n  text-align: left;\n}\n\nlabel {\n  display: block;\n  font-size: 14px;\n  color: #e0e0e0;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  background-color: rgba(255, 255, 255, 0.05);\n  color: #ffffff;\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #6c63ff;\n  background-color: rgba(255, 255, 255, 0.1);\n  box-shadow: 0 0 0 2px rgba(108, 99, 255, 0.2);\n}\n\ninput::placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n\nbutton {\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  background-color: #6c63ff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-weight: 500;\n}\n\nbutton:hover {\n  background-color: #5a52e1;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(108, 99, 255, 0.3);\n}\n\n.login-link {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #e0e0e0;\n}\n\n.login-link a {\n  color: #6c63ff;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.login-link a:hover {\n  color: #5a52e1;\n  text-decoration: none;\n}\n\n.logo-container {\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: center;\n}\n\n.logo {\n  width: 120px;\n  height: auto;\n  transition: transform 0.3s ease;\n  filter: brightness(0) invert(1);\n}\n\n.logo:hover {\n  transform: scale(1.05);\n}\n\n/* Responsive Design */\n@media (max-width: 600px) {\n  .register-card {\n    padding: 30px;\n    max-width: 90%;\n  }\n\n  button {\n    font-size: 14px;\n    padding: 10px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}