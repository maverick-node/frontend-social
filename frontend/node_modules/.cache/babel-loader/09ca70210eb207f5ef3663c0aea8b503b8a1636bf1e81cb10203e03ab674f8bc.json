{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"forum-layout\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar-icons\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"notif-badge\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  ref: \"notifPopup\",\n  class: \"notif-popup\"\n};\nconst _hoisted_6 = {\n  class: \"notif-list\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"notif-item empty\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  class: \"notif-text\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  class: \"notif-time\"\n};\nconst _hoisted_13 = {\n  class: \"main-area\"\n};\nconst _hoisted_14 = {\n  class: \"avatar-bar\"\n};\nconst _hoisted_15 = {\n  class: \"avatar-list\"\n};\nconst _hoisted_16 = [\"src\", \"alt\", \"onClick\"];\nconst _hoisted_17 = {\n  class: \"avatar-name\"\n};\nconst _hoisted_18 = {\n  class: \"create-post-card\"\n};\nconst _hoisted_19 = [\"src\"];\nconst _hoisted_20 = {\n  class: \"file-upload-label\"\n};\nconst _hoisted_21 = [\"src\"];\nconst _hoisted_22 = {\n  class: \"create-post-row\"\n};\nconst _hoisted_23 = {\n  class: \"status-select\"\n};\nconst _hoisted_24 = {\n  key: 1,\n  class: \"allowed-users-select\"\n};\nconst _hoisted_25 = {\n  key: 0\n};\nconst _hoisted_26 = [\"value\"];\nconst _hoisted_27 = {\n  class: \"custom-checkbox\"\n};\nconst _hoisted_28 = {\n  key: 0,\n  width: \"18\",\n  height: \"18\",\n  viewBox: \"0 0 18 18\",\n  fill: \"none\"\n};\nconst _hoisted_29 = {\n  key: 1,\n  width: \"18\",\n  height: \"18\",\n  viewBox: \"0 0 18 18\",\n  fill: \"none\"\n};\nconst _hoisted_30 = [\"src\", \"alt\"];\nconst _hoisted_31 = {\n  class: \"allowed-user-name\"\n};\nconst _hoisted_32 = {\n  key: 2,\n  class: \"message\"\n};\nconst _hoisted_33 = {\n  class: \"posts-grid\"\n};\nconst _hoisted_34 = {\n  key: 0,\n  class: \"no-posts\"\n};\nconst _hoisted_35 = {\n  key: 0,\n  class: \"post-image\"\n};\nconst _hoisted_36 = [\"src\", \"onClick\"];\nconst _hoisted_37 = {\n  class: \"post-header\"\n};\nconst _hoisted_38 = [\"src\"];\nconst _hoisted_39 = {\n  class: \"post-timestamp\"\n};\nconst _hoisted_40 = {\n  class: \"post-title\"\n};\nconst _hoisted_41 = {\n  class: \"post-content\"\n};\nconst _hoisted_42 = [\"src\"];\nconst _hoisted_43 = {\n  class: \"post-actions\"\n};\nconst _hoisted_44 = [\"onClick\"];\nconst _hoisted_45 = {\n  key: 2,\n  class: \"comments-section\"\n};\nconst _hoisted_46 = {\n  key: 0,\n  class: \"no-comments\"\n};\nconst _hoisted_47 = {\n  class: \"comment-header\"\n};\nconst _hoisted_48 = [\"src\"];\nconst _hoisted_49 = {\n  class: \"comment-timestamp\"\n};\nconst _hoisted_50 = {\n  class: \"comment-content\"\n};\nconst _hoisted_51 = [\"src\", \"onClick\"];\nconst _hoisted_52 = [\"onSubmit\"];\nconst _hoisted_53 = {\n  class: \"comment-input-row\"\n};\nconst _hoisted_54 = [\"onUpdate:modelValue\"];\nconst _hoisted_55 = {\n  class: \"file-upload-label\"\n};\nconst _hoisted_56 = [\"onChange\"];\nconst _hoisted_57 = {\n  key: 0,\n  class: \"file-name-display\"\n};\nconst _hoisted_58 = [\"src\", \"onClick\"];\nconst _hoisted_59 = {\n  key: 2,\n  class: \"comment-error\"\n};\nconst _hoisted_60 = {\n  class: \"rightbar\"\n};\nconst _hoisted_61 = {\n  class: \"groups-section\"\n};\nconst _hoisted_62 = {\n  class: \"groups-header\"\n};\nconst _hoisted_63 = {\n  class: \"groups-list\"\n};\nconst _hoisted_64 = [\"onClick\"];\nconst _hoisted_65 = {\n  class: \"group-info\"\n};\nconst _hoisted_66 = {\n  class: \"group-details\"\n};\nconst _hoisted_67 = {\n  class: \"group-title\"\n};\nconst _hoisted_68 = {\n  class: \"group-desc\"\n};\nconst _hoisted_69 = {\n  key: 0,\n  class: \"owner-badge\"\n};\nconst _hoisted_70 = [\"onClick\"];\nconst _hoisted_71 = [\"onClick\"];\nconst _hoisted_72 = [\"onClick\"];\nconst _hoisted_73 = [\"onClick\"];\nconst _hoisted_74 = {\n  class: \"users-section\"\n};\nconst _hoisted_75 = {\n  class: \"users-list\"\n};\nconst _hoisted_76 = [\"src\", \"onClick\"];\nconst _hoisted_77 = [\"onClick\"];\nconst _hoisted_78 = {\n  key: 0,\n  class: \"modal-overlay\"\n};\nconst _hoisted_79 = {\n  class: \"modal-content create-group-modal\"\n};\nconst _hoisted_80 = {\n  class: \"form-group\"\n};\nconst _hoisted_81 = {\n  class: \"form-group\"\n};\nconst _hoisted_82 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_83 = {\n  class: \"chat-modal\"\n};\nconst _hoisted_84 = {\n  class: \"chat-modal-header\"\n};\nconst _hoisted_85 = {\n  class: \"chat-users-list\"\n};\nconst _hoisted_86 = [\"onClick\"];\nconst _hoisted_87 = [\"src\", \"alt\"];\nconst _hoisted_88 = {\n  key: 0,\n  class: \"chat-messages-area\"\n};\nconst _hoisted_89 = {\n  class: \"chat-messages-title\"\n};\nconst _hoisted_90 = {\n  class: \"chat-messages-list\"\n};\nconst _hoisted_91 = {\n  class: \"chat-msg-time\"\n};\nconst _hoisted_92 = {\n  key: 1,\n  class: \"chat-no-user\"\n};\nconst _hoisted_93 = [\"src\"];\nconst _hoisted_94 = {\n  class: \"zoom-controls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Left Sidebar \"), _createElementVNode(\"aside\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Home Icon \"), _cache[33] || (_cache[33] = _createElementVNode(\"div\", {\n    class: \"sidebar-icon active\",\n    title: \"Home\"\n  }, [_createElementVNode(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M3 12L12 3l9 9\"\n  }), _createElementVNode(\"path\", {\n    d: \"M9 21V9h6v12\"\n  })])], -1 /* HOISTED */)), _createCommentVNode(\" Profile Icon \"), _createElementVNode(\"div\", {\n    class: \"sidebar-icon\",\n    title: \"Profile\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToProfile && $options.goToProfile(...args))\n  }, _cache[27] || (_cache[27] = [_createElementVNode(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"circle\", {\n    cx: \"12\",\n    cy: \"8\",\n    r: \"4\"\n  }), _createElementVNode(\"path\", {\n    d: \"M4 21v-2a4 4 0 014-4h8a4 4 0 014 4v2\"\n  })], -1 /* HOISTED */)])), _createCommentVNode(\" Groups Icon \"), _createElementVNode(\"div\", {\n    class: \"sidebar-icon\",\n    title: \"Groups\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToMyGroups && $options.goToMyGroups(...args))\n  }, _cache[28] || (_cache[28] = [_createStaticVNode(\"<svg width=\\\"24\\\" height=\\\"24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" viewBox=\\\"0 0 24 24\\\" data-v-7e16bb50><path d=\\\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\\\" data-v-7e16bb50></path><circle cx=\\\"9\\\" cy=\\\"7\\\" r=\\\"4\\\" data-v-7e16bb50></circle><path d=\\\"M23 21v-2a4 4 0 00-3-3.87\\\" data-v-7e16bb50></path><path d=\\\"M16 3.13a4 4 0 010 7.75\\\" data-v-7e16bb50></path></svg>\", 1)])), _createCommentVNode(\" Settings Icon \"), _createElementVNode(\"div\", {\n    class: \"sidebar-icon\",\n    title: \"Settings\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$router.push('/settings'))\n  }, _cache[29] || (_cache[29] = [_createElementVNode(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"3\"\n  }), _createElementVNode(\"path\", {\n    d: \"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 01-2.83 2.83l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-4 0v-.09a1.65 1.65 0 00-1-1.51 1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 010-4h.09a1.65 1.65 0 001.51-1 1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 012.83-2.83l.06.06a1.65 1.65 0 001.82.33h.09A1.65 1.65 0 0011 3.09V3a2 2 0 014 0v.09a1.65 1.65 0 001 1.51h.09a1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 2.83l-.06.06a1.65 1.65 0 00-.33 1.82v.09A1.65 1.65 0 0020.91 11H21a2 2 0 010 4h-.09a1.65 1.65 0 00-1.51 1z\"\n  })], -1 /* HOISTED */)])), _createElementVNode(\"div\", {\n    class: \"sidebar-icon\",\n    ref: \"notifBtn\",\n    title: \"Notifications\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.handleNotifClick && $options.handleNotifClick(...args))\n  }, [_cache[30] || (_cache[30] = _createElementVNode(\"svg\", {\n    width: \"22\",\n    height: \"22\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M18 8a6 6 0 10-12 0c0 7-3 9-3 9h18s-3-2-3-9\"\n  }), _createElementVNode(\"path\", {\n    d: \"M13.73 21a2 2 0 01-3.46 0\"\n  })], -1 /* HOISTED */)), $data.unreadNotificationCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($data.unreadNotificationCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createCommentVNode(\" Notification Popup \"), $data.showNotifications ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[31] || (_cache[31] = _createElementVNode(\"div\", {\n    class: \"notif-popup-header\"\n  }, \"Notifications\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_6, [!$data.notifications || $data.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"li\", _hoisted_7, \"No notifications yet.\")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notifications || [], notif => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: notif.time + notif.sender,\n      class: _normalizeClass([\"notif-item\", {\n        'unread': !notif.is_read\n      }]),\n      onClick: $event => $options.markNotificationAsRead(notif.id)\n    }, [_createElementVNode(\"span\", _hoisted_9, [_createElementVNode(\"b\", null, _toDisplayString(notif.sender), 1 /* TEXT */), notif.type === 'message' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"sent you a message: \" + _toDisplayString(notif.text && notif.text.length > 40 ? notif.text.slice(0, 40) + '…' : notif.text), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(notif.text), 1 /* TEXT */))]), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($options.formatTimestamp(notif.time)), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n    class: \"sidebar-icon\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.logout && $options.logout(...args))\n  }, _cache[32] || (_cache[32] = [_createElementVNode(\"svg\", {\n    width: \"20\",\n    height: \"20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M17 16l4-4m0 0l-4-4m4 4H7\"\n  }), _createElementVNode(\"path\", {\n    d: \"M9 21H5a2 2 0 01-2-2V5a2 2 0 012-2h4\"\n  })], -1 /* HOISTED */)]))])]), _createCommentVNode(\" Main Content Area \"), _createElementVNode(\"div\", _hoisted_13, [_createCommentVNode(\" Top Avatar Bar \"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.otherUsers, other => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: other.name,\n      class: \"avatar-item\"\n    }, [_createElementVNode(\"img\", {\n      src: other.avatar,\n      alt: other.name,\n      onClick: $event => $options.gotoxprofile(other.username)\n    }, null, 8 /* PROPS */, _hoisted_16), _createElementVNode(\"span\", _hoisted_17, _toDisplayString(other.name.split(' ')[0]), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Create Post \"), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"img\", {\n    class: \"profile-pic\",\n    src: $data.user.avatar,\n    alt: \"Profile\"\n  }, null, 8 /* PROPS */, _hoisted_19), _createElementVNode(\"form\", {\n    class: \"create-post-form\",\n    onSubmit: _cache[10] || (_cache[10] = _withModifiers((...args) => $options.submitPost && $options.submitPost(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newPost.title = $event),\n    placeholder: \"What's on your mind?\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.title]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.newPost.content = $event),\n    placeholder: \"Share your thoughts...\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.content]]), _createElementVNode(\"label\", _hoisted_20, [_cache[34] || (_cache[34] = _createElementVNode(\"svg\", {\n    width: \"20\",\n    height: \"20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\"\n  }), _createElementVNode(\"polyline\", {\n    points: \"17 8 12 3 7 8\"\n  }), _createElementVNode(\"line\", {\n    x1: \"12\",\n    y1: \"3\",\n    x2: \"12\",\n    y2: \"15\"\n  })], -1 /* HOISTED */)), _cache[35] || (_cache[35] = _createTextVNode(\" Upload Image \")), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[7] || (_cache[7] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), $data.imagePreview ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.imagePreview,\n    class: \"image-preview\",\n    alt: \"Preview\"\n  }, null, 8 /* PROPS */, _hoisted_21)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.newPost.status = $event),\n    required: \"\"\n  }, _cache[36] || (_cache[36] = [_createElementVNode(\"option\", {\n    value: \"public\"\n  }, \"Public\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"private\"\n  }, \"Private\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"semi-private\"\n  }, \"Semi-Private\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.newPost.status]])])]), $data.newPost.status === 'semi-private' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [$data.allowedUsers.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, \"No User is following you!\")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.allowedUsers, user => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      key: user.username,\n      class: \"allowed-user-pill\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.selectedAllowedUsers = $event),\n      value: user.username\n    }, null, 8 /* PROPS */, _hoisted_26), [[_vModelCheckbox, $data.selectedAllowedUsers]]), _createElementVNode(\"span\", _hoisted_27, [$data.selectedAllowedUsers.includes(user.username) ? (_openBlock(), _createElementBlock(\"svg\", _hoisted_28, [...(_cache[37] || (_cache[37] = [_createElementVNode(\"circle\", {\n      cx: \"9\",\n      cy: \"9\",\n      r: \"9\",\n      fill: \"#4f46e5\"\n    }, null, -1 /* HOISTED */), _createElementVNode(\"path\", {\n      d: \"M5 9l3 3 5-5\",\n      stroke: \"#fff\",\n      \"stroke-width\": \"2\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\"\n    }, null, -1 /* HOISTED */)]))])) : (_openBlock(), _createElementBlock(\"svg\", _hoisted_29, [...(_cache[38] || (_cache[38] = [_createElementVNode(\"circle\", {\n      cx: \"9\",\n      cy: \"9\",\n      r: \"9\",\n      fill: \"#e5e7eb\"\n    }, null, -1 /* HOISTED */)]))]))]), _createElementVNode(\"img\", {\n      src: user.avatar,\n      alt: user.username,\n      class: \"allowed-user-avatar\"\n    }, null, 8 /* PROPS */, _hoisted_30), _createElementVNode(\"span\", _hoisted_31, _toDisplayString(user.username), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _cache[39] || (_cache[39] = _createElementVNode(\"button\", {\n    class: \"post-btn\",\n    type: \"submit\"\n  }, \"Post\", -1 /* HOISTED */)), $data.message ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" Posts Grid \"), _createElementVNode(\"div\", _hoisted_33, [$data.posts.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, \"No posts available. Be the first to post!\")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"post-card\",\n      key: post.ID\n    }, [post.imageUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_createElementVNode(\"img\", {\n      src: post.imageUrl,\n      alt: \"Post image\",\n      onClick: $event => $options.showFullImage(post.imageUrl)\n    }, null, 8 /* PROPS */, _hoisted_36)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"img\", {\n      class: \"post-author-pic\",\n      src: post.authorAvatar,\n      alt: \"Author\"\n    }, null, 8 /* PROPS */, _hoisted_38), _createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, _toDisplayString(post.Author), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_39, _toDisplayString($options.formatTimestamp(post.Creation_date)), 1 /* TEXT */)])]), _createElementVNode(\"h3\", _hoisted_40, _toDisplayString(post.Title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_41, _toDisplayString(post.Content), 1 /* TEXT */), post.Image ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 1,\n      class: \"post-image\",\n      src: post.Image,\n      alt: \"Post Image\"\n    }, null, 8 /* PROPS */, _hoisted_42)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"span\", {\n      class: \"icon-btn\",\n      onClick: $event => $options.toggleComments(post)\n    }, [...(_cache[40] || (_cache[40] = [_createElementVNode(\"svg\", {\n      width: \"22\",\n      height: \"22\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      \"stroke-width\": \"2\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      viewBox: \"0 0 24 24\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\"\n    })], -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_44)]), _createCommentVNode(\" Comments Section \"), post.showComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, [post.comments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_46, \"No comments yet. Be the first to comment!\")) : (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 1\n    }, _renderList(post.comments, comment => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"comment\",\n        key: comment.id\n      }, [_createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"img\", {\n        class: \"comment-author-pic\",\n        src: comment.avatar,\n        alt: \"Comment Author\"\n      }, null, 8 /* PROPS */, _hoisted_48), _createElementVNode(\"div\", null, [_createElementVNode(\"h5\", null, _toDisplayString(comment.Author), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_49, _toDisplayString($options.formatTimestamp(comment.creation_date)), 1 /* TEXT */)])]), _createElementVNode(\"p\", _hoisted_50, _toDisplayString(comment.comment), 1 /* TEXT */), comment.image ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        class: \"comment-image\",\n        src: comment.image,\n        alt: \"Comment Image\",\n        onClick: $event => $options.showFullImage(comment.image)\n      }, null, 8 /* PROPS */, _hoisted_51)) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"form\", {\n      onSubmit: _withModifiers($event => $options.addComment(post), [\"prevent\"]),\n      class: \"comment-form\"\n    }, [_createElementVNode(\"div\", _hoisted_53, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => post.newComment = $event,\n      placeholder: \"Add a comment...\",\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_54), [[_vModelText, post.newComment]]), _createElementVNode(\"label\", _hoisted_55, [_cache[41] || (_cache[41] = _createElementVNode(\"svg\", {\n      width: \"18\",\n      height: \"18\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      \"stroke-width\": \"2\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      viewBox: \"0 0 24 24\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\"\n    }), _createElementVNode(\"polyline\", {\n      points: \"17 8 12 3 7 8\"\n    }), _createElementVNode(\"line\", {\n      x1: \"12\",\n      y1: \"3\",\n      x2: \"12\",\n      y2: \"15\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"input\", {\n      type: \"file\",\n      onChange: $event => $options.handleImageUpload($event, post.Id),\n      accept: \"image/*\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_56)]), _cache[42] || (_cache[42] = _createElementVNode(\"button\", {\n      type: \"submit\",\n      class: \"comment-submit-btn\",\n      title: \"Add Comment\"\n    }, [_createElementVNode(\"svg\", {\n      width: \"22\",\n      height: \"22\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      \"stroke-width\": \"2\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      viewBox: \"0 0 24 24\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\"\n    })])], -1 /* HOISTED */))]), $data.commentImages[post.Id] && $data.commentImages[post.Id].fileName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_57, \" Selected file: \" + _toDisplayString($data.commentImages[post.Id].fileName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.commentImages[post.Id] && $data.commentImages[post.Id].preview ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 1,\n      src: $data.commentImages[post.Id].preview,\n      class: \"image-preview\",\n      alt: \"Preview\",\n      onClick: $event => $options.showFullImage($data.commentImages[post.Id].preview)\n    }, null, 8 /* PROPS */, _hoisted_58)) : _createCommentVNode(\"v-if\", true), post.commentError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_59, _toDisplayString(post.commentError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_52)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Right Sidebar \"), _createElementVNode(\"aside\", _hoisted_60, [_createElementVNode(\"div\", _hoisted_61, [_createElementVNode(\"div\", _hoisted_62, [_cache[44] || (_cache[44] = _createElementVNode(\"span\", null, \"Groups\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"create-group-btn\",\n    onClick: _cache[11] || (_cache[11] = $event => $data.showCreateGroup = true),\n    title: \"Create Group\"\n  }, _cache[43] || (_cache[43] = [_createElementVNode(\"svg\", {\n    width: \"20\",\n    height: \"20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), _createElementVNode(\"path\", {\n    d: \"M12 8v8M8 12h8\"\n  })], -1 /* HOISTED */)])), _createCommentVNode(\" <button class=\\\"invite-group-btn\\\" @click=\\\"inviteToGroup\\\" title=\\\"Invite to Group\\\">\\n            <svg width=\\\"20\\\" height=\\\"20\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M21 10v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6\\\"/><path d=\\\"M3 6l9 6 9-6\\\"/></svg>\\n          </button> \")]), _createElementVNode(\"ul\", _hoisted_63, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.groups, group => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: group.id,\n      class: \"group-list-item group-clickable\",\n      onClick: $event => $options.goToGroup(group.id)\n    }, [_createElementVNode(\"div\", _hoisted_65, [_cache[45] || (_cache[45] = _createStaticVNode(\"<span class=\\\"group-avatar\\\" data-v-7e16bb50><svg width=\\\"20\\\" height=\\\"20\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" viewBox=\\\"0 0 24 24\\\" data-v-7e16bb50><path d=\\\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\\\" data-v-7e16bb50></path><circle cx=\\\"9\\\" cy=\\\"7\\\" r=\\\"4\\\" data-v-7e16bb50></circle><path d=\\\"M23 21v-2a4 4 0 00-3-3.87\\\" data-v-7e16bb50></path><path d=\\\"M16 3.13a4 4 0 010 7.75\\\" data-v-7e16bb50></path></svg></span>\", 1)), _createElementVNode(\"div\", _hoisted_66, [_createElementVNode(\"span\", _hoisted_67, _toDisplayString(group.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_68, _toDisplayString(group.description), 1 /* TEXT */), group.is_owner ? (_openBlock(), _createElementBlock(\"span\", _hoisted_69, \"Owner\")) : _createCommentVNode(\"v-if\", true)])]), group.member_status == 'accepted' && !group.is_owner ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"followed-btn\",\n      onClick: _withModifiers($event => $options.toggleJoin(group), [\"stop\"])\n    }, \" Leave \", 8 /* PROPS */, _hoisted_70)) : group.member_status == 'pending' && !group.is_owner ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"pending-btn\",\n      onClick: _withModifiers($event => $options.toggleJoin(group), [\"stop\"])\n    }, \" Cancel Request \", 8 /* PROPS */, _hoisted_71)) : group.member_status == 'invited' && !group.is_owner ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      class: \"pending-btn\",\n      onClick: _withModifiers($event => $options.toggleJoin(group), [\"stop\"])\n    }, \" Accept Invitation \", 8 /* PROPS */, _hoisted_72)) : !group.is_owner ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 3,\n      class: \"follow-btn\",\n      onClick: _withModifiers($event => $options.toggleJoin(group), [\"stop\"])\n    }, \" Join \", 8 /* PROPS */, _hoisted_73)) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_64);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_74, [_cache[46] || (_cache[46] = _createElementVNode(\"div\", {\n    class: \"users-header\"\n  }, [_createElementVNode(\"span\", null, \"Followed Users: \")], -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_75, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.followedUsers, followed => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: followed.name,\n      class: \"user-list-item\"\n    }, [_createElementVNode(\"img\", {\n      class: \"mini-profile-pic\",\n      src: followed.avatar,\n      alt: \"User\",\n      onClick: $event => $options.gotoxprofile(followed.username)\n    }, null, 8 /* PROPS */, _hoisted_76), _createElementVNode(\"span\", {\n      class: \"user-name\",\n      onClick: $event => $options.gotoxprofile(followed.username)\n    }, _toDisplayString(followed.name), 9 /* TEXT, PROPS */, _hoisted_77)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createCommentVNode(\" Create Group Modal \"), $data.showCreateGroup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_78, [_createElementVNode(\"div\", _hoisted_79, [_cache[50] || (_cache[50] = _createElementVNode(\"h3\", null, \"Create New Group\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[15] || (_cache[15] = _withModifiers((...args) => $options.createGroup && $options.createGroup(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_80, [_cache[47] || (_cache[47] = _createElementVNode(\"label\", {\n    for: \"groupTitle\"\n  }, \"Group Title\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"groupTitle\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.newGroup.title = $event),\n    type: \"text\",\n    required: \"\",\n    placeholder: \"Enter group title\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newGroup.title]])]), _createElementVNode(\"div\", _hoisted_81, [_cache[48] || (_cache[48] = _createElementVNode(\"label\", {\n    for: \"groupDescription\"\n  }, \"Description\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"groupDescription\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.newGroup.description = $event),\n    required: \"\",\n    placeholder: \"Enter group description\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newGroup.description]])]), _createElementVNode(\"div\", _hoisted_82, [_cache[49] || (_cache[49] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-btn\"\n  }, \"Create Group\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"cancel-btn\",\n    onClick: _cache[14] || (_cache[14] = $event => $data.showCreateGroup = false)\n  }, \" Cancel \")])], 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Chat Floating Button \"), _createElementVNode(\"button\", {\n    class: \"chat-fab\",\n    onClick: _cache[16] || (_cache[16] = (...args) => $options.handleChatClick && $options.handleChatClick(...args)),\n    title: \"Open Chat\"\n  }, _cache[51] || (_cache[51] = [_createElementVNode(\"svg\", {\n    width: \"28\",\n    height: \"28\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2.2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\"\n  })], -1 /* HOISTED */)])), _createCommentVNode(\" Chat Modal \"), $data.isChatExpanded ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"chat-modal-overlay\",\n    onClick: _cache[20] || (_cache[20] = _withModifiers($event => $data.isChatExpanded = false, [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_83, [_createElementVNode(\"div\", _hoisted_84, [_cache[52] || (_cache[52] = _createElementVNode(\"span\", null, \"Chat\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"chat-modal-close\",\n    onClick: _cache[17] || (_cache[17] = $event => $data.isChatExpanded = false)\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_85, [_cache[53] || (_cache[53] = _createElementVNode(\"div\", {\n    class: \"chat-users-title\"\n  }, \"Chat Users\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatUsers, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.name,\n      onClick: $event => $options.selectChatUser(user),\n      class: _normalizeClass({\n        selected: $data.selectedChatUser && $data.selectedChatUser.name === user.name\n      })\n    }, [_createElementVNode(\"img\", {\n      src: user.avatar,\n      alt: user.name,\n      class: \"chat-user-avatar\"\n    }, null, 8 /* PROPS */, _hoisted_87), _createElementVNode(\"span\", null, _toDisplayString(user.fullname), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_86);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.selectedChatUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_88, [_createElementVNode(\"div\", _hoisted_89, \"Chat with \" + _toDisplayString($data.selectedChatUser.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_90, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedChatUser.messages, msg => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: msg.id,\n      class: _normalizeClass(['chat-msg', msg.sender === 'self' ? 'self' : 'other'])\n    }, [_createElementVNode(\"span\", null, _toDisplayString(msg.text), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_91, _toDisplayString($options.formatTimestamp(msg.timestamp)), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    class: \"chat-send-form\",\n    onSubmit: _cache[19] || (_cache[19] = _withModifiers((...args) => $options.sendMessage && $options.sendMessage(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.newMessage = $event),\n    placeholder: \"Type a message...\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMessage]]), _cache[54] || (_cache[54] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"chat-send-btn\",\n    title: \"Send\"\n  }, [_createElementVNode(\"svg\", {\n    width: \"22\",\n    height: \"22\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"line\", {\n    x1: \"22\",\n    y1: \"2\",\n    x2: \"11\",\n    y2: \"13\"\n  }), _createElementVNode(\"polygon\", {\n    points: \"22 2 15 22 11 13 2 9 22 2\"\n  })])], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_92, \"Select a user to start chatting\"))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Add this at the end of template, before closing </div> \"), $data.showImageModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: \"image-modal-overlay\",\n    onClick: _cache[26] || (_cache[26] = (...args) => $options.closeImageModal && $options.closeImageModal(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"image-modal-content\",\n    onClick: _cache[25] || (_cache[25] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"img\", {\n    src: $data.selectedImage,\n    alt: \"Full size image\",\n    style: _normalizeStyle({\n      transform: `scale(${$data.imageZoom})`\n    })\n  }, null, 12 /* STYLE, PROPS */, _hoisted_93), _createElementVNode(\"button\", {\n    class: \"close-modal-btn\",\n    onClick: _cache[21] || (_cache[21] = (...args) => $options.closeImageModal && $options.closeImageModal(...args))\n  }, \"×\"), _createElementVNode(\"div\", _hoisted_94, [_createElementVNode(\"button\", {\n    class: \"zoom-btn\",\n    onClick: _cache[22] || (_cache[22] = (...args) => $options.zoomOut && $options.zoomOut(...args)),\n    title: \"Zoom Out\"\n  }, \"-\"), _createElementVNode(\"button\", {\n    class: \"zoom-btn\",\n    onClick: _cache[23] || (_cache[23] = (...args) => $options.resetZoom && $options.resetZoom(...args)),\n    title: \"Reset Zoom\"\n  }, \"↺\"), _createElementVNode(\"button\", {\n    class: \"zoom-btn\",\n    onClick: _cache[24] || (_cache[24] = (...args) => $options.zoomIn && $options.zoomIn(...args)),\n    title: \"Zoom In\"\n  }, \"+\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","ref","width","height","viewBox","fill","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","title","stroke","d","onClick","_cache","args","$options","goToProfile","cx","cy","r","goToMyGroups","_createStaticVNode","$event","_ctx","$router","push","handleNotifClick","$data","unreadNotificationCount","_hoisted_4","_toDisplayString","showNotifications","_hoisted_5","_hoisted_6","notifications","length","_hoisted_7","_Fragment","_renderList","notif","time","sender","_normalizeClass","is_read","markNotificationAsRead","id","_hoisted_9","type","_hoisted_10","text","slice","_hoisted_11","_hoisted_12","formatTimestamp","_hoisted_8","logout","_hoisted_13","_hoisted_14","_hoisted_15","otherUsers","other","name","src","avatar","alt","gotoxprofile","username","_hoisted_16","_hoisted_17","split","_hoisted_18","user","_hoisted_19","onSubmit","_withModifiers","submitPost","newPost","placeholder","required","content","_hoisted_20","points","x1","y1","x2","y2","_createTextVNode","onChange","handleImageUpload","accept","imagePreview","_hoisted_21","_hoisted_22","_hoisted_23","status","value","_hoisted_24","allowedUsers","_hoisted_25","selectedAllowedUsers","_hoisted_26","_hoisted_27","includes","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","message","_hoisted_32","_hoisted_33","posts","_hoisted_34","post","ID","imageUrl","_hoisted_35","showFullImage","_hoisted_36","_hoisted_37","authorAvatar","_hoisted_38","Author","_hoisted_39","Creation_date","_hoisted_40","Title","_hoisted_41","Content","Image","_hoisted_42","_hoisted_43","toggleComments","_hoisted_44","showComments","_hoisted_45","comments","_hoisted_46","comment","_hoisted_47","_hoisted_48","_hoisted_49","creation_date","_hoisted_50","image","_hoisted_51","addComment","_hoisted_53","newComment","_hoisted_54","_hoisted_55","Id","_hoisted_56","commentImages","fileName","_hoisted_57","preview","_hoisted_58","commentError","_hoisted_59","_hoisted_52","_hoisted_60","_hoisted_61","_hoisted_62","showCreateGroup","_hoisted_63","groups","group","goToGroup","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","description","is_owner","_hoisted_69","member_status","toggleJoin","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_64","_hoisted_74","_hoisted_75","followedUsers","followed","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","createGroup","_hoisted_80","for","newGroup","_hoisted_81","_hoisted_82","handleChatClick","isChatExpanded","_hoisted_83","_hoisted_84","_hoisted_85","chatUsers","selectChatUser","selected","selectedChatUser","_hoisted_87","fullname","_hoisted_86","_hoisted_88","_hoisted_89","_hoisted_90","messages","msg","_hoisted_91","timestamp","sendMessage","newMessage","_hoisted_92","showImageModal","closeImageModal","selectedImage","style","_normalizeStyle","transform","imageZoom","_hoisted_93","_hoisted_94","zoomOut","resetZoom","zoomIn"],"sources":["/Users/apple/Desktop/social-1/social-network/frontend/src/components/ForumPage.vue"],"sourcesContent":["<template>\n  <div class=\"forum-layout\">\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\">\n      <div class=\"sidebar-icons\">\n        <!-- Home Icon -->\n        <div class=\"sidebar-icon active\" title=\"Home\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 12L12 3l9 9\" />\n            <path d=\"M9 21V9h6v12\" />\n          </svg>\n        </div>\n        <!-- Profile Icon -->\n        <div class=\"sidebar-icon\" title=\"Profile\" @click=\"goToProfile\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"8\" r=\"4\" />\n            <path d=\"M4 21v-2a4 4 0 014-4h8a4 4 0 014 4v2\" />\n          </svg>\n        </div>\n        <!-- Groups Icon -->\n        <div class=\"sidebar-icon\" title=\"Groups\" @click=\"goToMyGroups\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\" />\n            <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            <path d=\"M23 21v-2a4 4 0 00-3-3.87\" />\n            <path d=\"M16 3.13a4 4 0 010 7.75\" />\n          </svg>\n        </div>\n        <!-- Settings Icon -->\n        <div class=\"sidebar-icon\" title=\"Settings\" @click=\"$router.push('/settings')\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\n            <path\n              d=\"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 01-2.83 2.83l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-4 0v-.09a1.65 1.65 0 00-1-1.51 1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 010-4h.09a1.65 1.65 0 001.51-1 1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 012.83-2.83l.06.06a1.65 1.65 0 001.82.33h.09A1.65 1.65 0 0011 3.09V3a2 2 0 014 0v.09a1.65 1.65 0 001 1.51h.09a1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 2.83l-.06.06a1.65 1.65 0 00-.33 1.82v.09A1.65 1.65 0 0020.91 11H21a2 2 0 010 4h-.09a1.65 1.65 0 00-1.51 1z\" />\n          </svg>\n        </div>\n        <div class=\"sidebar-icon\" ref=\"notifBtn\" title=\"Notifications\" @click=\"handleNotifClick\">\n          <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M18 8a6 6 0 10-12 0c0 7-3 9-3 9h18s-3-2-3-9\" />\n            <path d=\"M13.73 21a2 2 0 01-3.46 0\" />\n          </svg>\n          <span v-if=\"unreadNotificationCount > 0\" class=\"notif-badge\">{{ unreadNotificationCount }}</span>\n        </div>\n        <!-- Notification Popup -->\n        <div v-if=\"showNotifications\" ref=\"notifPopup\" class=\"notif-popup\">\n          <div class=\"notif-popup-header\">Notifications</div>\n          <ul class=\"notif-list\">\n            <li v-if=\"!notifications || notifications.length === 0\" class=\"notif-item empty\">No notifications yet.</li>\n            <li v-for=\"notif in notifications || []\" :key=\"notif.time + notif.sender\" class=\"notif-item\"\n              :class=\"{ 'unread': !notif.is_read }\" @click=\"markNotificationAsRead(notif.id)\">\n              \n              <span class=\"notif-text\">\n                <b>{{ notif.sender }}</b>\n                <span v-if=\"notif.type === 'message'\">sent you a message: {{ notif.text && notif.text.length > 40 ?\n                  notif.text.slice(0, 40) + '…' : notif.text }}</span>\n                <span v-else>{{ notif.text }}</span>\n              </span>\n              <span class=\"notif-time\">{{ formatTimestamp(notif.time) }}</span>\n            </li>\n          </ul>\n        </div>\n        <div class=\"sidebar-icon\" @click=\"logout\">\n          <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 16l4-4m0 0l-4-4m4 4H7\" />\n            <path d=\"M9 21H5a2 2 0 01-2-2V5a2 2 0 012-2h4\" />\n          </svg>\n        </div>\n      </div>\n    </aside>\n\n    <!-- Main Content Area -->\n    <div class=\"main-area\">\n      <!-- Top Avatar Bar -->\n      <div class=\"avatar-bar\">\n        <div class=\"avatar-list\">\n          <div v-for=\"other in otherUsers\" :key=\"other.name\" class=\"avatar-item\">\n            <img :src=\"other.avatar\" :alt=\"other.name\" @click=\"gotoxprofile(other.username)\" />\n            <span class=\"avatar-name\">{{ other.name.split(' ')[0] }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Create Post -->\n      <div class=\"create-post-card\">\n        <img class=\"profile-pic\" :src=\"user.avatar\" alt=\"Profile\" />\n        <form class=\"create-post-form\" @submit.prevent=\"submitPost\">\n          <input type=\"text\" v-model=\"newPost.title\" placeholder=\"What's on your mind?\" required />\n          <textarea v-model=\"newPost.content\" placeholder=\"Share your thoughts...\" required></textarea>\n          <label class=\"file-upload-label\">\n            <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n              <path d=\"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\" />\n              <polyline points=\"17 8 12 3 7 8\" />\n              <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\" />\n            </svg>\n            Upload Image\n            <input type=\"file\" @change=\"handleImageUpload\" accept=\"image/*\" />\n          </label>\n          <img v-if=\"imagePreview\" :src=\"imagePreview\" class=\"image-preview\" alt=\"Preview\" />\n          <div class=\"create-post-row\">\n            <div class=\"status-select\">\n              <select v-model=\"newPost.status\" required>\n                <option value=\"public\">Public</option>\n                <option value=\"private\">Private</option>\n                <option value=\"semi-private\">Semi-Private</option>\n              </select>\n            </div>\n          </div>\n          <div v-if=\"newPost.status === 'semi-private'\" class=\"allowed-users-select\">\n            <div v-if=\"allowedUsers.length === 0\">No User is following you!</div>\n            <label v-else v-for=\"user in allowedUsers\" :key=\"user.username\" class=\"allowed-user-pill\">\n              <input type=\"checkbox\" v-model=\"selectedAllowedUsers\" :value=\"user.username\" />\n              <span class=\"custom-checkbox\">\n                <svg v-if=\"selectedAllowedUsers.includes(user.username)\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\"\n                  fill=\"none\">\n                  <circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#4f46e5\" />\n                  <path d=\"M5 9l3 3 5-5\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                </svg>\n                <svg v-else width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\n                  <circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#e5e7eb\" />\n                </svg>\n              </span>\n              <img :src=\"user.avatar\" :alt=\"user.username\" class=\"allowed-user-avatar\" />\n              <span class=\"allowed-user-name\">{{ user.username }}</span>\n            </label>\n          </div>\n          <button class=\"post-btn\" type=\"submit\">Post</button>\n          <div v-if=\"message\" class=\"message\">{{ message }}</div>\n        </form>\n      </div>\n\n      <!-- Posts Grid -->\n      <div class=\"posts-grid\">\n        <div v-if=\"posts.length === 0\" class=\"no-posts\">No posts available. Be the first to post!</div>\n        <div v-else class=\"post-card\" v-for=\"post in posts\" :key=\"post.ID\">\n          <div class=\"post-image\" v-if=\"post.imageUrl\">\n            <img :src=\"post.imageUrl\" alt=\"Post image\" @click=\"showFullImage(post.imageUrl)\" />\n          </div>\n          <div class=\"post-header\">\n            <img class=\"post-author-pic\" :src=\"post.authorAvatar\" alt=\"Author\" />\n            <div>\n              <h4>{{ post.Author }}</h4>\n              <p class=\"post-timestamp\">{{ formatTimestamp(post.Creation_date) }}</p>\n            </div>\n          </div>\n          <h3 class=\"post-title\">{{ post.Title }}</h3>\n          <p class=\"post-content\">{{ post.Content }}</p>\n          <img class=\"post-image\" v-if=\"post.Image\" :src=\"post.Image\" alt=\"Post Image\" />\n          <div class=\"post-actions\">\n            <span class=\"icon-btn\" @click=\"toggleComments(post)\">\n              <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                <path d=\"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\" />\n              </svg>\n            </span>\n          </div>\n          <!-- Comments Section -->\n          <div v-if=\"post.showComments\" class=\"comments-section\">\n            <div v-if=\"post.comments.length === 0\" class=\"no-comments\">No comments yet. Be the first to comment!</div>\n            <div v-else class=\"comment\" v-for=\"comment in post.comments\" :key=\"comment.id\">\n              <div class=\"comment-header\">\n                <img class=\"comment-author-pic\" :src=\"comment.avatar\" alt=\"Comment Author\" />\n                <div>\n                  <h5>{{ comment.Author }}</h5>\n                  <p class=\"comment-timestamp\">{{ formatTimestamp(comment.creation_date) }}</p>\n                </div>\n              </div>\n              <p class=\"comment-content\">{{ comment.comment }}</p>\n              <img class=\"comment-image\" v-if=\"comment.image\" :src=\"comment.image\" alt=\"Comment Image\" @click=\"showFullImage(comment.image)\" />\n            </div>\n            <form @submit.prevent=\"addComment(post)\" class=\"comment-form\">\n              <div class=\"comment-input-row\">\n                <textarea v-model=\"post.newComment\" placeholder=\"Add a comment...\" required></textarea>\n                <label class=\"file-upload-label\">\n                  <svg width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                    <path d=\"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\" />\n                    <polyline points=\"17 8 12 3 7 8\" />\n                    <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\" />\n                  </svg>\n                  <input type=\"file\" @change=\"handleImageUpload($event, post.Id)\" accept=\"image/*\" />\n                </label>\n                <button type=\"submit\" class=\"comment-submit-btn\" title=\"Add Comment\">\n                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                    <path d=\"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\" />\n                  </svg>\n                </button>\n              </div>\n              <div v-if=\"commentImages[post.Id] && commentImages[post.Id].fileName\" class=\"file-name-display\">\n                Selected file: {{ commentImages[post.Id].fileName }}\n              </div>\n              <img v-if=\"commentImages[post.Id] && commentImages[post.Id].preview\" :src=\"commentImages[post.Id].preview\" class=\"image-preview\" alt=\"Preview\" @click=\"showFullImage(commentImages[post.Id].preview)\" />\n              <div v-if=\"post.commentError\" class=\"comment-error\">{{ post.commentError }}</div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Right Sidebar -->\n    <aside class=\"rightbar\">\n      <div class=\"groups-section\">\n        <div class=\"groups-header\">\n          <span>Groups</span>\n          <button class=\"create-group-btn\" @click=\"showCreateGroup = true\" title=\"Create Group\">\n            <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\" />\n              <path d=\"M12 8v8M8 12h8\" />\n            </svg>\n          </button>\n          <!-- <button class=\"invite-group-btn\" @click=\"inviteToGroup\" title=\"Invite to Group\">\n            <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\"><path d=\"M21 10v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6\"/><path d=\"M3 6l9 6 9-6\"/></svg>\n          </button> -->\n        </div>\n        <ul class=\"groups-list\">\n          <li v-for=\"group in groups\" :key=\"group.id\" class=\"group-list-item group-clickable\"\n            @click=\"goToGroup(group.id)\">\n            <div class=\"group-info\">\n              <span class=\"group-avatar\">\n                <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                  <path d=\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\" />\n                  <circle cx=\"9\" cy=\"7\" r=\"4\" />\n                  <path d=\"M23 21v-2a4 4 0 00-3-3.87\" />\n                  <path d=\"M16 3.13a4 4 0 010 7.75\" />\n                </svg>\n              </span>\n              <div class=\"group-details\">\n                <span class=\"group-title\">{{ group.name }}</span>\n                <span class=\"group-desc\">{{ group.description }}</span>\n                <span v-if=\"group.is_owner\" class=\"owner-badge\">Owner</span>\n              </div>\n            </div>\n            <button v-if=\"group.member_status == 'accepted' && !group.is_owner\" class=\"followed-btn\"\n              @click.stop=\"toggleJoin(group)\">\n              Leave\n            </button>\n            <button v-else-if=\"group.member_status == 'pending' && !group.is_owner\" class=\"pending-btn\"\n              @click.stop=\"toggleJoin(group)\">\n              Cancel Request\n            </button>\n            <button v-else-if=\"group.member_status == 'invited' && !group.is_owner\" class=\"pending-btn\"\n              @click.stop=\"toggleJoin(group)\">\n              Accept Invitation\n            </button>\n            <button v-else-if=\"!group.is_owner\" class=\"follow-btn\" @click.stop=\"toggleJoin(group)\">\n              Join\n            </button>\n          </li>\n        </ul>\n      </div>\n      <div class=\"users-section\">\n        <div class=\"users-header\">\n          <span>Followed Users: </span>\n        </div>\n        <ul class=\"users-list\">\n          <li v-for=\"followed in followedUsers\" :key=\"followed.name\" class=\"user-list-item\">\n            <img class=\"mini-profile-pic\" :src=\"followed.avatar\" alt=\"User\" @click=\"gotoxprofile(followed.username)\" />\n            <span class=\"user-name\" @click=\"gotoxprofile(followed.username)\">{{ followed.name }}</span>\n          </li>\n        </ul>\n      </div>\n    </aside>\n\n    <!-- Create Group Modal -->\n    <div v-if=\"showCreateGroup\" class=\"modal-overlay\">\n      <div class=\"modal-content create-group-modal\">\n        <h3>Create New Group</h3>\n        <form @submit.prevent=\"createGroup\">\n          <div class=\"form-group\">\n            <label for=\"groupTitle\">Group Title</label>\n            <input id=\"groupTitle\" v-model=\"newGroup.title\" type=\"text\" required placeholder=\"Enter group title\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"groupDescription\">Description</label>\n            <textarea id=\"groupDescription\" v-model=\"newGroup.description\" required\n              placeholder=\"Enter group description\"></textarea>\n          </div>\n          <div class=\"modal-buttons\">\n            <button type=\"submit\" class=\"submit-btn\">Create Group</button>\n            <button type=\"button\" class=\"cancel-btn\" @click=\"showCreateGroup = false\">\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- Chat Floating Button -->\n    <button class=\"chat-fab\" @click=\"handleChatClick\" title=\"Open Chat\">\n      <svg width=\"28\" height=\"28\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2.2\" stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n        <path d=\"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\" />\n      </svg>\n    </button>\n\n    <!-- Chat Modal -->\n    <div v-if=\"isChatExpanded\" class=\"chat-modal-overlay\" @click.self=\"isChatExpanded = false\">\n      <div class=\"chat-modal\">\n        <div class=\"chat-modal-header\">\n          <span>Chat</span>\n          <button class=\"chat-modal-close\" @click=\"isChatExpanded = false\">&times;</button>\n        </div>\n        <div class=\"chat-users-list\">\n          <div class=\"chat-users-title\">Chat Users</div>\n          <ul>\n            <li v-for=\"user in chatUsers\" :key=\"user.name\" @click=\"selectChatUser(user)\"\n              :class=\"{ selected: selectedChatUser && selectedChatUser.name === user.name }\">\n              <img :src=\"user.avatar\" :alt=\"user.name\" class=\"chat-user-avatar\" />\n              <span>{{ user.fullname }}</span>\n            </li>\n          </ul>\n        </div>\n        <div class=\"chat-messages-area\" v-if=\"selectedChatUser\">\n          <div class=\"chat-messages-title\">Chat with {{ selectedChatUser.name }}</div>\n          <div class=\"chat-messages-list\">\n            <div v-for=\"msg in selectedChatUser.messages\" :key=\"msg.id\"\n              :class=\"['chat-msg', msg.sender === 'self' ? 'self' : 'other']\">\n              <span>{{ msg.text }}</span>\n              <span class=\"chat-msg-time\">{{ formatTimestamp(msg.timestamp) }}</span>\n            </div>\n          </div>\n          <form class=\"chat-send-form\" @submit.prevent=\"sendMessage\">\n            <input v-model=\"newMessage\" placeholder=\"Type a message...\" required />\n            <button type=\"submit\" class=\"chat-send-btn\" title=\"Send\">\n              <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\" />\n                <polygon points=\"22 2 15 22 11 13 2 9 22 2\" />\n              </svg>\n            </button>\n          </form>\n        </div>\n        <div v-else class=\"chat-no-user\">Select a user to start chatting</div>\n      </div>\n    </div>\n\n    <!-- Add this at the end of template, before closing </div> -->\n    <div v-if=\"showImageModal\" class=\"image-modal-overlay\" @click=\"closeImageModal\">\n      <div class=\"image-modal-content\" @click.stop>\n        <img :src=\"selectedImage\" alt=\"Full size image\" :style=\"{ transform: `scale(${imageZoom})` }\" />\n        <button class=\"close-modal-btn\" @click=\"closeImageModal\">&times;</button>\n        <div class=\"zoom-controls\">\n          <button class=\"zoom-btn\" @click=\"zoomOut\" title=\"Zoom Out\">-</button>\n          <button class=\"zoom-btn\" @click=\"resetZoom\" title=\"Reset Zoom\">↺</button>\n          <button class=\"zoom-btn\" @click=\"zoomIn\" title=\"Zoom In\">+</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fetchInfo } from '../api/getInfo.js';\nimport { notificationWebSocket } from '../services/notificationWebSocket.js';\n\nexport default {\n  props: [\"showNotification\"],\n  name: \"ForumPage\",\n  data() {\n    return {\n      user: {\n        avatar: \"\",\n        name: \"\",\n        email: \"\",\n        username: \"guest\",\n      },\n      socket: null,\n      newPost: {\n        author: \"\",\n        title: \"\",\n        content: \"\",\n        image: \"\",\n        status: \"public\", // Default status\n      },\n      image: null,\n      imagePreview: null,\n      imageFileName: \"\", // Add this line to track file name\n      posts: [],\n      message: \"\",\n      allowedUsers: [],\n      selectedAllowedUsers: [],\n      groups: [],\n      otherUsers: [],\n      followedUsers: [], // Track followed users\n      // Chatbox data\n      isChatExpanded: false,\n      newMessage: \"\",\n      selectedChatUser: null,\n      chatUsers: [],\n      currentMessage: {\n        type: \"\",\n        message: \"\",\n        receiver: \"\",\n        username: \"\",\n      },\n      showCreateGroup: false,\n      newGroup: {\n        title: \"\",\n        description: \"\",\n        creator_id: null,\n      },\n      groupMembership: {}, // Track membership status for each group\n      postsPrvMap: {}, // Added for postsprv data\n      showNotifications: false, // For notification popup\n      notifications: [], // Initialize as empty array\n      commentImages: {}, // Add this to track images for each comment\n      unreadNotificationCount: 0,\n      showImageModal: false,\n      selectedImage: null,\n      imageZoom: 1,\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    fetch(\"http://localhost:8080/api/info\", {\n      method: \"GET\",\n      credentials: \"include\",\n    })\n      .then(res => {\n        if (res.ok) {\n          next();\n        } else {\n          next('/login');\n        }\n      })\n      .catch(() => {\n        next('/login');\n      });\n  },\n  async created() {\n    this.$router.push('/home');\n    try {\n      const userRes = await fetch(\"http://localhost:8080/api/info\", {\n        method: \"GET\",\n        credentials: \"include\",\n      });\n      const userData = await userRes.json();\n      console.log(\"userData\", userData);\n\n      this.user.name = userData.Username;\n      this.user.email = userData.Email;\n      this.user.username = userData.Username.toLowerCase();\n\n      if (userData.Avatar) {\n        this.user.avatar = `http://localhost:8080/uploads/${userData.Avatar}`;\n      } else {\n        this.user.avatar = `https://api.dicebear.com/7.x/avataaars/svg?seed=${userData.Username}`;\n      }\n      // Initialize WebSocket\n      this.initializeWebSocket();\n      await this.fetchPostsPrv();\n      await this.fetchPosts();\n      await this.fetchAllUsers();\n      await this.fetchAllowedUsers();\n      await this.fetchGroups();\n      await this.fetchNotifications();\n    } catch (err) {\n      console.error(\"Initialization failed:\", err);\n      this.$router.push(\"/login\");\n    }\n  },\n  methods: {\n    async fetchAllowedUsers() {\n      try {\n        const res = await fetch(\"http://localhost:8080/api/postsprivacy\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n          if (!data.followers) {\n            return;\n          }\n          console.log(\"Allowed users data:\", data);\n\n          this.allowedUsers = data.followers.map((user) => ({\n            username: user,\n            avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${user}`,\n          }));\n        } else {\n          this.showNotification(\"Failed to fetch allowed users\", \"error\");\n          console.error(\"Failed to fetch allowed users\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch allowed users\", \"error\");\n        console.error(\"Error fetching allowed users:\", error);\n      }\n      console.log(\"Allowed users:\", this.allowedUsers);\n\n    },\n    async fetchAllUsers() {\n      try {\n        // Fetch all users for follow list\n        const allUsersRes = await fetch(\"http://localhost:8080/api/allusers\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (allUsersRes.ok) {\n          const allUsersData = await allUsersRes.json();\n          if ((!allUsersData) || allUsersData.length === 0) {\n            return;\n          }\n          console.log(\"All users data:\", allUsersData);\n          this.otherUsers = allUsersData.map((user) => ({\n            name: user.fullname,\n            username: user.username,\n            avatar: user.avatar\n              ? `http://localhost:8080/uploads/${user.avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            followed: user.followed || false, // Track if the user is followed\n          }));\n\n          // Initialize followedUsers based on allowedUsers\n          this.followedUsers = this.otherUsers.filter(\n            (user) => user.followed\n          );\n          console.log(\"Followed users:\", this.followedUsers);\n\n        }\n\n        // Fetch chat users from openchat endpoint\n        const chatUsersRes = await fetch(\"http://localhost:8080/api/openchat\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (chatUsersRes.ok) {\n          const chatUsersData = await chatUsersRes.json();\n          console.log(\"Chat users data:\", chatUsersData);\n          if (!chatUsersData || chatUsersData.length === 0) {\n            return;\n          } else {\n            this.chatUsers = chatUsersData.map((user) => ({\n              id: user.id,\n              fullname: user.full_name,\n              name: user.username,\n              messages: [],\n              avatar:   user.avatar \n                ? `http://localhost:8080/uploads/${user.avatar}`\n                : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            }));\n            \n            \n          }\n        } else {\n          this.showNotification(\"Failed to fetch chat users\", \"error\");\n          console.error(\"Failed to fetch chat users\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch chat users\", \"error\");\n        console.error(\"Error fetching users:\", error);\n      }\n    },\n    initializeWebSocket() {\n      this.socket = new WebSocket(\"ws://localhost:8080/ws\");\n\n      this.socket.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.type == \"message\" ){\n          this.showNotification(\"New message from \" + data.username, \"success\");\n        }\n        console.log(\"Received message:\", data);\n\n        // Find the user in chatUsers and add the message\n        const user = this.chatUsers.find((u) => u.name === data.username);\n        if (user) {\n          this.showNotification(\"New message from \" + data.username, \"success\");\n          user.messages.push({\n            id: Date.now(),\n            text: data.message,\n            sender: \"other\",\n            timestamp: new Date().toISOString() // Add proper timestamp\n          });\n          \n          // If this is the currently selected user, scroll to bottom\n          if (this.selectedChatUser && this.selectedChatUser.name === data.username) {\n            this.$nextTick(() => {\n              this.scrollToBottom();\n            });\n          }\n        }\n      };\n      this.socket.onopen = () => {\n        console.log(\"WebSocket connected\");\n      };\n\n      this.socket.onerror = (error) => {\n        console.error(\"WebSocket error:\", error);\n      };\n\n      this.socket.onclose = () => {\n        console.log(\"WebSocket disconnected\");\n      };\n    },\n    async fetchPosts() {\n      try {\n        const res = await fetch(\"http://localhost:8080/api/getposts\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n\n          console.log(\"data\", data);\n\n          // Initialize posts with comments-related fields\n          if (!data) {\n            return;\n          }\n          this.posts = data.map((post) => ({\n            ...post,\n            authorAvatar: post.Avatar\n              ? `http://localhost:8080/uploads/${post.Avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${post.Author}`,\n            Image: post.Image, // Already a full URL if backend does it as above\n            comments: [],\n            newComment: \"\",\n            showComments: false,\n            commentError: \"\",\n          }));\n        } else {\n          const errorText = await res.text();\n          this.showNotification(errorText || \"Failed to fetch posts\", \"error\");\n          console.error(\"Failed to fetch posts:\", errorText);\n        }\n      } catch (error) {\n        this.showNotification(error.message || \"Failed to fetch posts\", \"error\");\n        console.error(\"Error fetching posts:\", error);\n      }\n    },\n    async fetchComments(post) {\n      try {\n        const res = await fetch(\n          `http://localhost:8080/api/getcomments?post_id=${post.Id}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n        if (res.ok) {\n          const data = await res.json();\n          console.log(data);\n          if (!data) {\n            return;\n          }\n          post.comments = data.map((comment) => ({\n            ...comment,\n            avatar: comment.avatar\n              ? `http://localhost:8080/uploads/${comment.avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${comment.author}`,\n            image: comment.image ? `http://localhost:8080/uploads/${comment.image}` : null,\n          }));\n\n        } else {\n          this.showNotification(\"Failed to fetch comments\", \"error\");\n          console.error(\"Failed to fetch comments for post\", post.ID);\n          post.commentError = \"Failed to load comments.\";\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch comments\", \"error\");\n        console.error(\"Error fetching comments:\", error);\n      }\n    },\n    async addComment(post) {\n      if (!post.newComment.trim()) {\n        post.commentError = \"Comment cannot be empty.\";\n        return;\n      }\n\n      // Add length validation for comments\n      if (post.newComment.trim().length < 1) {\n        post.commentError = \"Comment must be at least 1 character long.\";\n        return;\n      }\n\n      if (post.newComment.trim().length > 500) {\n        post.commentError = \"Comment must not exceed 500 characters.\";\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"post_id\", post.Id.toString());\n      formData.append(\"comment\", post.newComment.trim());\n\n      // Use the specific image for this comment if it exists\n      if (this.commentImages[post.Id] && this.commentImages[post.Id].file) {\n        formData.append(\"image\", this.commentImages[post.Id].file);\n      }\n\n      try {\n        const res = await fetch(\"http://localhost:8080/api/addcomments\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData\n        });\n\n        if (res.ok) {\n          post.commentError = \"\";\n          // Clear all inputs\n          post.newComment = \"\";\n          // Clear only this comment's image\n          this.commentImages[post.Id] = null;\n          this.showNotification(\"Comment added successfully\", \"success\");\n          await this.fetchComments(post);\n        } else {\n          this.showNotification(\"Failed to add comment\", \"error\");\n          console.error(\"Failed to add comment\");\n          post.commentError = \"Failed to add comment.\";\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to add comment\", \"error\");\n        console.error(\"Error adding comment:\", error);\n        post.commentError = \"Error adding comment.\";\n      }\n    },\n    async submitPost() {\n      if (this.newPost.title.length < 1) {\n        this.message = \"Title must be at least 1 characters long.\";\n        this.showNotification(\"Title must be at least 1 characters long.\", \"error\");\n        return;\n      }\n\n      if (this.newPost.title.length > 50 ) {\n        this.message = \"Title must not exceed 50 characters.\";\n        this.showNotification(\"Title must not exceed 100 characters.\", \"error\");\n        return;\n      }\n\n      if (this.newPost.content.length < 1) {\n        this.message = \"Content must be at least 1 characters long.\";\n        this.showNotification(\"Content must be at least 10 characters long.\", \"error\");\n        return;\n      }\n\n      if (this.newPost.content.length > 1000) {\n        this.message = \"Content must not exceed 1000 characters.\";\n        this.showNotification(\"Content must not exceed 1000 characters.\", \"error\");\n        return;\n      }\n\n      try {\n        const formData = new FormData();\n        formData.append(\"title\", this.newPost.title);\n        formData.append(\"content\", this.newPost.content);\n        formData.append(\"status\", this.newPost.status);\n        formData.append(\"allowed_users\", this.selectedAllowedUsers.join(\",\"));\n        if (this.image) {\n          formData.append(\"image\", this.image);\n        }\n\n        const res = await fetch(\"http://localhost:8080/api/posts\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData\n        });\n        console.log(this.selectedAllowedUsers);\n\n        if (res.ok) {\n          this.message = \"Post created successfully!\";\n          // Clear all inputs\n          this.newPost = {\n            title: \"\",\n            content: \"\",\n            status: \"public\"\n          };\n          this.selectedAllowedUsers = [];\n          this.image = null;\n          this.imagePreview = null;\n          this.imageFileName = \"\";\n          this.showNotification(\"Post created successfully!\", \"success\");\n          await this.fetchPosts();\n        } else {\n          const errorText = await res.text();\n          this.showNotification(\"Failed to create post: \"+ errorText, \"error\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to create post\", \"error\");\n        console.error(\"Post creation failed:\", error);\n        this.message = \"Error submitting post.\";\n      }\n    },\n    logout() {\n      fetch(\"http://localhost:8080/api/auth/logout\", {\n        method: \"POST\",\n        credentials: \"include\",\n      })\n        .then((res) => {\n          if (res.ok) {\n            this.showNotification(\"Logged out successfully\", \"success\");\n            this.$router.push(\"/login\");\n          } else {\n            this.showNotification(\"Failed to logout\", \"error\");\n            this.$router.push(\"/login\");\n          }\n        })\n        .catch((err) => {\n          this.showNotification(\"wax nta hbit rak mamlogich\", \"error\");\n          console.error(\"Logout error:\", err);\n          this.$router.push(\"/login\");\n        });\n    },\n    gotoxprofile(username) {\n      this.$router.push(`/profile/${username}`);\n    },\n    async toggleJoin(group) {\n      try {\n        if (!group || !group.id) {\n          console.warn(\"toggleJoin called with invalid group\");\n          return;\n        }\n\n        // Get current user ID from the auth API\n        const userRes = await fetch(\"http://localhost:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        \n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n        \n        const userData = await userRes.json();\n\n        let endpoint;\n        let action;\n        let requestBody = {};\n\n        if (group.member_status === 'accepted') {\n          endpoint = \"http://localhost:8080/api/removememberfromgroup\";\n          action = \"leave\";\n          requestBody = {\n            group_id: group.id,\n            user_id: userData.id  // Include user ID for leave operation\n          };\n        } else if (group.member_status === 'pending') {\n          endpoint = \"http://localhost:8080/api/cancelgrouprequest\";\n          action = \"cancel request from\";\n          requestBody = {\n            group_id: group.id\n          };\n        } else if (group.member_status === 'invited') {\n          endpoint = \"http://localhost:8080/api/acceptgroupinvite\";\n          action = \"accept invitation to\";\n          requestBody = {\n            group_id: group.id,\n            action: 'accept'\n          };\n        } else {\n          endpoint = \"http://localhost:8080/api/requesttojoingroup\";\n          action = \"join\";\n          requestBody = {\n            group_id: group.id\n          };\n        }\n\n        const response = await fetch(endpoint, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requestBody),\n        });\n\n        // Update the local group status based on the action\n        if (response.ok) {\n          if (group.member_status === 'accepted') {\n            group.member_status = null;\n            this.showNotification(\"Left group successfully\", \"success\");\n          } else if (group.member_status === 'pending') {\n            group.member_status = null;\n            this.showNotification(\"Request cancelled successfully\", \"success\");\n          } else if (group.member_status === 'invited') {\n            group.member_status = 'accepted';\n            this.showNotification(\"Invitation accepted successfully\", \"success\");\n          } else {\n            group.member_status = 'pending';\n            this.showNotification(\"Join request sent successfully\", \"success\");\n          }\n\n          // Refresh groups list\n          await this.fetchGroups();\n        } else {\n          const errorText = await response.text();\n          console.error(`Failed to ${action} group: ${errorText}`);\n          this.showNotification(`Failed to ${action} group`, \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error updating group membership:\", error);\n        this.showNotification(\"Failed to update group membership\", \"error\");\n      }\n    },\n    goToProfile() {\n      this.$router.push(`/profile/${this.user.username}`);\n    },\n    goToMyGroups() {\n      this.$router.push('/mygroups');\n    },\n    goToGroup(groupId) {\n      this.$router.push(`/group/${groupId}`);\n    },\n    toggleChat() {\n      this.isChatExpanded = !this.isChatExpanded;\n    },\n    selectChatUser(user) {\n      console.log(\"user\", user.name);\n      this.selectedChatUser = user.name;\n      console.log(\"selectedChatUser\", this.selectedChatUser);\n      this.fetchMessages(this.selectedChatUser);\n    },\n    async fetchMessages(user) {\n      console.log(\"Fetching messages for use11:\", user);\n      \n      try {\n        const res = await fetch(\n          `http://localhost:8080/api/getmessages?sender=${this.user.username}&receiver=${user}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"Fetched messages:\", data);\n\n          // Find the chat user in chatUsers array\n          const chatUser = this.chatUsers.find(u => u.name === user);\n          if (!chatUser) {\n            console.error(\"Chat user not found\");\n            return;\n          }\n\n          // Initialize messages array\n          chatUser.messages = [];\n\n          // Transform and add messages if data exists\n          if (data && Array.isArray(data)) {\n            chatUser.messages = data.map(msg => ({\n              id: Date.now() + Math.random(), // Generate unique ID\n              text: msg.message,\n              sender: msg.username === this.user.username ? \"self\" : \"other\",\n              timestamp: msg.time\n            }));\n\n            // Sort messages by timestamp\n            chatUser.messages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n          }\n\n          // Update selectedChatUser with the found chat user\n          this.selectedChatUser = chatUser;\n          \n          // Scroll to bottom after messages are loaded\n          this.$nextTick(() => {\n            this.scrollToBottom();\n          });\n        } else {\n          console.error(\"Failed to fetch messages\");\n          this.showNotification(\"Failed to load messages\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n        this.showNotification(\"Error loading messages\", \"error\");\n      }\n    },\n    scrollToBottom() {\n      const messagesList = document.querySelector('.chat-messages-list');\n      if (messagesList) {\n        messagesList.scrollTop = messagesList.scrollHeight;\n      }\n    },\n    sendMessage() {\n      if (this.newMessage.trim() && this.selectedChatUser) {\n        // Prepare the message object\n        this.currentMessage.type = \"message\";\n        this.currentMessage.receiver = this.selectedChatUser.name;\n        this.currentMessage.username = this.user.username;\n        this.currentMessage.message = this.newMessage;\n\n        // Send the message through WebSocket\n        if (this.socket) {\n          this.socket.send(JSON.stringify(this.currentMessage));\n        }\n\n        // Add the message to the UI\n        this.selectedChatUser.messages.push({\n          text: this.newMessage,\n          sender: \"self\",\n          timestamp: Date.now()\n        });\n\n        this.newMessage = \"\";\n        \n        // Scroll to bottom after message is added\n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      }\n    },\n    formatTimestamp(timestamp) {\n      return new Date(timestamp).toLocaleString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    },\n    toggleComments(post) {\n      post.showComments = !post.showComments;\n      if (post.showComments && post.comments.length === 0) {\n        this.fetchComments(post);\n      }\n    },\n    getMessageClass(msg) {\n      return msg.sender === \"self\" ? \"self\" : \"other\";\n    },\n    async fetchGroups() {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/getgroups\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          if (!data) {\n            return;\n          }\n          console.log(\"Fetched groups data:\", data);\n          this.groups = data.map((group) => ({\n            id: group.id,\n            owner: group.creator_id,\n            is_owner: group.is_owner,\n            name: group.title,\n            description: group.description,\n            member_status: group.member_status\n          }));\n          console.log(\"Fetched groups:\", this.groups);\n\n          // Check membership status for each group\n          for (const group of this.groups) {\n            await this.checkGroupMembership(group.id);\n          }\n        } else {\n          this.showNotification(\"Failed to fetch groups\", \"error\");\n          console.error(\"Failed to fetch groups\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch groups\", \"error\");\n        console.error(\"Error fetching groups:\", error);\n      }\n    },\n    async checkGroupMembership(groupId) {\n      try {\n        if (!groupId) {\n          console.warn(\"checkGroupMembership called with invalid groupId\");\n          return;\n        }\n        const response = await fetch(\n          `http://localhost:8080/api/ismember?group_id=${groupId}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(`Failed to check group membership: ${errorText}`);\n          this.showNotification(\"Failed to check group membership\", \"error\");\n          return;\n        }\n\n        const data = await response.json();\n        if (data && typeof data.is_member !== 'undefined') {\n          this.groupMembership[groupId] = data.is_member;\n        } else {\n          console.warn(\"Received invalid data format from server\");\n          this.groupMembership[groupId] = false; // Default to not a member\n        }\n      } catch (error) {\n        console.error(\"Error checking group membership:\", error);\n        this.showNotification(\"Failed to check group membership\", \"error\");\n      }\n    },\n    async createGroup() {\n      try {\n        // Get current user ID from the auth API\n        const userRes = await fetch(\"http://localhost:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        \n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n        \n        const userData = await userRes.json();\n        this.newGroup.creator_id = userData.id; // Use the correct user ID\n\n        const response = await fetch(\"http://localhost:8080/api/creategroups\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(this.newGroup),\n        });\n\n        if (response.ok) {\n          this.showNotification(\"Group created successfully\", \"success\");\n          const data = await response.json();\n          // Add the new group to the list\n          this.groups.push({\n            id: data.id,\n            name: data.title,\n            owner: this.user.username,\n            is_owner: true,\n            member_status: 'accepted',\n            description: data.description,\n          });\n          this.showCreateGroup = false;\n          this.newGroup = {\n            title: \"\",\n            description: \"\",\n            creator_id: null,\n          };\n        } else {\n          this.showNotification(\"Failed to create group\", \"error\");\n          console.error(\"Failed to create group\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to create group\", \"error\");\n        console.error(\"Error creating group:\", error);\n      }\n    },\n    async fetchPostsPrv() {\n      try {\n        const res = await fetch(\"http://localhost:8080/api/postsprv\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n          if (!data || data.length === 0) {\n            console.warn(\"No posts privacy data found\");\n            return;\n          }\n          const map = {};\n          data.forEach(item => {\n            const postId = item.post_id.toString();\n            if (!map[postId]) {\n              map[postId] = [];\n            }\n            map[postId].push(item.username);\n          });\n          this.postsPrvMap = map;\n          console.log(\"postsPrvMap\", this.postsPrvMap);\n        }\n      } catch (error) {\n        console.error(\"Error fetching postsprv:\", error);\n      }\n    },\n    handleNotifClick() {\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        // Mark all unread notifications as read when opening the popup\n        this.notifications.forEach(notif => {\n          if (!notif.is_read) {\n            this.markNotificationAsRead(notif.id);\n          }\n        });\n      }\n    },\n    handleNotifClose(e) {\n      if (!this.showNotifications) return;\n      const popup = this.$refs.notifPopup;\n      const btn = this.$refs.notifBtn;\n      if (\n        (!popup || !btn) ||\n        (!popup.contains(e.target) && !btn.contains(e.target))\n      ) {\n        this.showNotifications = false;\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const res = await fetch(\"http://localhost:8080/api/notifications\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"sassasaassa\", data);\n\n          // Ensure data is an array and map it safely\n          this.notifications = Array.isArray(data)\n            ? data.map(notif => ({\n              id: notif.id,\n              sender: notif.sender_username || 'Unknown',\n              text: notif.content || '',\n              time: notif.time || new Date().toISOString(),\n              type: notif.type || 'notification',\n              is_read: notif.is_read || false\n            }))\n            : [];\n          \n          // Update unread count\n          this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n        } else {\n          this.notifications = [];\n          this.unreadNotificationCount = 0;\n        }\n      } catch (e) {\n        console.error('Error fetching notifications:', e);\n        this.notifications = [];\n        this.unreadNotificationCount = 0;\n      }\n    },\n    async markNotificationAsRead(notificationId) {\n      console.log(notificationId);\n      \n      try {\n        // Find the notification first\n        const notification = this.notifications.find(n => n.id === notificationId);\n        if (!notification) return;\n\n        // Set a timeout to mark as read after 3 seconds\n        setTimeout(async () => {\n          try {\n            const res = await fetch(`http://localhost:8080/api/markasread`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify({\n                notificationId,\n                is_read: 1\n              })\n\n            });\n            console.log(\"res\", res);\n            if (res.ok) {\n              notification.is_read = true;\n              // Update unread count\n              this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n            }\n          } catch (error) {\n            console.error('Error marking notification as read:', error);\n          }\n        }, 3000); // 3 seconds delay\n      } catch (error) {\n        console.error('Error marking notification as read:', error);\n      }\n    },\n    handleImageUpload(event, postId = null) {\n      const file = event.target.files[0];\n      if (file) {\n        // Validate file size (2MB limit)\n        const maxSize = 2 * 1024 * 1024; // 2 MB in bytes\n        if (file.size > maxSize) {\n          this.showNotification('Image file size must be less than 2MB', 'error');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n\n        if (postId) {\n          // Handle comment image\n          this.commentImages[postId] = {\n            file: file,\n            preview: URL.createObjectURL(file),\n            fileName: file.name\n          };\n        } else {\n          // Handle post image\n          this.image = file;\n          this.imageFileName = file.name;\n          this.imagePreview = URL.createObjectURL(file);\n        }\n      } else {\n        if (postId) {\n          // Clear comment image\n          this.commentImages[postId] = null;\n        } else {\n          // Clear post image\n          this.image = null;\n          this.imagePreview = null;\n          this.imageFileName = \"\";\n        }\n      }\n    },\n    formatTime(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diff = now - date;\n\n      // Less than 1 minute\n      if (diff < 60000) {\n        return 'just now';\n      }\n      // Less than 1 hour\n      if (diff < 3600000) {\n        const minutes = Math.floor(diff / 60000);\n        return `${minutes}m ago`;\n      }\n      // Less than 24 hours\n      if (diff < 86400000) {\n        const hours = Math.floor(diff / 3600000);\n        return `${hours}h ago`;\n      }\n      // Less than 7 days\n      if (diff < 604800000) {\n        const days = Math.floor(diff / 86400000);\n        return `${days}d ago`;\n      }\n      // Otherwise show the date\n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    },\n    async fetchChatUsers() {\n      try {\n        const chatUsersRes = await fetch(\"http://localhost:8080/api/openchat\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (chatUsersRes.ok) {\n          const chatUsersData = await chatUsersRes.json();\n          console.log(\"Chat users data:\", chatUsersData);\n          if (!chatUsersData || chatUsersData.length === 0) {\n            return;\n          } else {\n            this.chatUsers = chatUsersData.map((user) => ({\n              id: user.id,\n              fullname: user.full_name,\n              name: user.username,\n              messages: [],\n              avatar: user.avatar \n                ? `http://localhost:8080/uploads/${user.avatar}`\n                : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            }));\n          }\n        } else {\n          this.showNotification(\"Failed to fetch chat users\", \"error\");\n          console.error(\"Failed to fetch chat users\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching chat users:\", error);\n        this.showNotification(\"Error fetching chat users\", \"error\");\n      }\n    },\n\n    async handleChatClick() {\n      if (!this.isChatExpanded) {\n        await this.fetchChatUsers();\n        this.selectedChatUser = null; // Reset selected user when opening chat\n      }\n      this.isChatExpanded = !this.isChatExpanded;\n    },\n    setupNotificationWebSocket() {\n      // Register handler for real-time notifications\n      notificationWebSocket.onNotification('forum-page', (notification) => {\n        console.log('Received real-time notification:', notification);\n        \n        // Refresh notifications and count from server to ensure accuracy\n        this.fetchNotifications();\n      });\n    },\n    async fetchNotificationCount() {\n      try {\n        const res = await fetch('http://localhost:8080/api/notifications', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (res.ok) {\n          const data = await res.json();\n          // Only update the count, don't store notifications unless popup is open\n          this.unreadNotificationCount = (data || []).filter(n => !n.is_read).length;\n        }\n      } catch (err) {\n        console.error('Failed to fetch notification count:', err);\n      }\n    },\n    showFullImage(imageUrl) {\n      this.selectedImage = imageUrl;\n      this.showImageModal = true;\n    },\n    closeImageModal() {\n      this.showImageModal = false;\n      this.selectedImage = null;\n      this.imageZoom = 1; // Reset zoom when closing\n    },\n    zoomIn() {\n      this.imageZoom = Math.min(this.imageZoom + 0.25, 3);\n    },\n    zoomOut() {\n      this.imageZoom = Math.max(this.imageZoom - 0.25, 0.5);\n    },\n    resetZoom() {\n      this.imageZoom = 1;\n    }\n  },\n  mounted() {\n    // Set up notification WebSocket\n    this.setupNotificationWebSocket();\n    \n    this.fetchPosts();\n    this.fetchNotifications();\n    this.fetchPostsPrv();\n    document.addEventListener('click', this.handleNotifClose);\n  },\n  beforeUnmount() {\n    // Clean up notification WebSocket\n    notificationWebSocket.removeNotificationHandler('forum-page');\n    document.removeEventListener('click', this.handleNotifClose);\n  },\n  computed: {\n  },\n};\n</script>\n\n<style scoped>\n/* Layout */\n.forum-layout {\n  display: flex;\n  min-height: 100vh;\n  background: #eaf1fb;\n  font-family: 'Inter', sans-serif;\n}\n\n/* Sidebar */\n.sidebar {\n  width: 70px;\n  background: #23263a;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem 0 1rem 0;\n  border-radius: 1.5rem 0 0 1.5rem;\n  box-shadow: 2px 0 16px rgba(35, 38, 58, 0.08);\n  transition: all 0.3s ease;\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 100;\n}\n\n.sidebar-icons {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n  align-items: center;\n}\n\n.sidebar-icon {\n  width: 48px;\n  height: 48px;\n  display: flex;\n  \n  align-items: center;\n  justify-content: center;\n  border-radius: 1rem;\n  \n  color: #fff;\n  font-size: 1.5rem;\n  opacity: 0.7;\n  cursor: pointer;\n  transition: background 0.2s, opacity 0.2s;\n}\n\n.sidebar-icon.active,\n.sidebar-icon:hover {\n  background: #35395a;\n  opacity: 1;\n}\n\n/* Main Area */\n.main-area {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 2rem 2rem 2rem 1.5rem;\n  min-width: 0;\n  margin-left: 70px; /* Add margin to account for fixed sidebar */\n}\n\n/* Top Avatar Bar */\n.avatar-bar {\n  width: 100%;\n  margin-bottom: 1.5rem;\n  overflow-x: auto;\n  padding-bottom: 0.5rem;\n}\n\n.avatar-list {\n  display: flex;\n  gap: 1.5rem;\n  align-items: center;\n  padding: 0.5rem 0;\n  min-width: min-content;\n}\n\n.avatar-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  min-width: 56px;\n}\n\n.avatar-item img {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  border: 2px solid #fff;\n  box-shadow: 0 2px 8px rgba(35, 38, 58, 0.08);\n  margin-bottom: 0.25rem;\n  object-fit: cover;\n  transition: transform 0.2s;\n}\n\n.avatar-item img:hover {\n  transform: scale(1.08);\n}\n\n.avatar-name {\n  font-size: 0.8rem;\n  color: #23263a;\n  opacity: 0.7;\n  text-align: center;\n  max-width: 60px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.avatar-item.see-all .see-all-btn {\n  width: 48px;\n  height: 48px;\n  background: #f3f4f8;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #23263a;\n  font-size: 0.9rem;\n  font-weight: 600;\n  border: 1px solid #e5e7eb;\n  margin-bottom: 0.25rem;\n  cursor: pointer;\n}\n\n/* Custom scrollbar for avatar bar */\n.avatar-bar::-webkit-scrollbar {\n  height: 6px;\n}\n\n.avatar-bar::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.avatar-bar::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.avatar-bar::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n/* Create Post Card */\n.create-post-card {\n  display: flex;\n  align-items: flex-start;\n  background: #fff;\n  border-radius: 1.25rem;\n  box-shadow: 0 4px 24px rgba(35, 38, 58, 0.08);\n  padding: 1.5rem 2rem;\n  margin-bottom: 2rem;\n  gap: 1.5rem;\n}\n\n.create-post-card .profile-pic {\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-top: 0.5rem;\n}\n\n.create-post-form {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.create-post-form input,\n.create-post-form textarea {\n\n  border: none;\n  background: #f3f4f8;\n  border-radius: 0.75rem;\n  padding: 0.9rem 1.2rem;\n  font-size: 1rem;\n  margin-bottom: 0.2rem;\n  resize: none;\n}\n\n.create-post-form textarea {\n  min-height: 70px;\n  resize: vertical;\n}\n\n.create-post-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n}\n\n\n.status-select select {\n  background: #f3f4f8;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.3rem 1rem;\n  font-size: 0.95rem;\n  color: #23263a;\n}\n\n.allowed-users-select {\n  display: flex;\n  gap: 0.7rem;\n  flex-wrap: wrap;\n  margin-bottom: 0.5rem;\n}\n\n.allowed-user-pill {\n  display: flex;\n  align-items: center;\n  background: #f3f4f8;\n  border-radius: 2rem;\n  padding: 0.25rem 1rem 0.25rem 0.4rem;\n  font-size: 0.97rem;\n  color: #23263a;\n  cursor: pointer;\n  gap: 0.5rem;\n  box-shadow: 0 1px 4px rgba(35, 38, 58, 0.06);\n  border: 1.5px solid #e5e7eb;\n  transition: border 0.18s, box-shadow 0.18s, background 0.18s;\n  position: relative;\n}\n\n.allowed-user-pill:hover,\n.allowed-user-pill:focus-within {\n  border: 1.5px solid #4f46e5;\n  background: #e0e7ff;\n  box-shadow: 0 2px 8px rgba(79, 70, 229, 0.10);\n}\n\n.allowed-user-pill input[type=\"checkbox\"] {\n  display: none;\n}\n\n.custom-checkbox {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 22px;\n  height: 22px;\n  margin-right: 0.1rem;\n}\n\n.allowed-user-avatar {\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 1.5px solid #e5e7eb;\n  background: #fff;\n}\n\n.allowed-user-name {\n  font-weight: 500;\n  color: #23263a;\n  font-size: 0.97rem;\n  margin-left: 0.1rem;\n}\n\n.post-btn {\n  background: linear-gradient(90deg, #23263a 60%, #4f46e5 100%);\n  color: #fff;\n  border: none;\n  border-radius: 0.7rem;\n  padding: 0.7rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  align-self: flex-end;\n  transition: background 0.2s;\n}\n\n.post-btn:hover {\n  background: linear-gradient(90deg, #4f46e5 60%, #23263a 100%);\n}\n\n/* Posts Grid */\n.posts-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  margin-top: 1.5rem;\n  width: 100%;\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.post-card {\n  background: #fff;\n  border-radius: 1.25rem;\n  box-shadow: 0 4px 24px rgba(35, 38, 58, 0.08);\n  padding: 1.5rem 1.8rem 1.2rem 1.8rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  height: auto;\n}\n\n.post-image {\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n  border-radius: 0.8rem;\n  margin-bottom: 0.7rem;\n  cursor: pointer;\n  transition: opacity 0.2s;\n  background: #f3f4f8;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.post-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  object-position: center;\n}\n\n.post-header {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.post-author-pic {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.post-title {\n  font-size: 1.3rem;\n  color: #23263a;\n  font-weight: 600;\n  margin: 0.2rem 0;\n}\n\n.post-content {\n  color: #4b5563;\n  font-size: 1.1rem;\n  margin-bottom: 0.2rem;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  overflow-wrap: break-word;\n  max-width: 100%;\n  line-height: 1.6;\n  height: auto;\n}\n\n.category-tag {\n  background: #e0e7ff;\n  color: #4f46e5;\n  padding: 0.2rem 0.6rem;\n  border-radius: 0.4rem;\n  font-size: 0.8rem;\n  font-weight: 500;\n}\n\n.post-actions {\n  display: flex;\n  gap: 1.2rem;\n  margin-top: 0.2rem;\n}\n\n.icon-btn {\n  font-size: 1.2rem;\n  color: #b0b3c6;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.icon-btn:hover {\n  color: #4f46e5;\n}\n\n.no-posts {\n  color: #b0b3c6;\n  text-align: center;\n  font-size: 1.1rem;\n  grid-column: 1/-1;\n}\n\n/* Right Sidebar */\n.rightbar {\n  width: 400px;\n  background: #fff;\n  border-radius: 0 1.5rem 1.5rem 0;\n  box-shadow: -2px 0 16px rgba(35, 38, 58, 0.08);\n  padding: 2rem 1.5rem 2rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n\n.invite-group-btn {\n  background: #f3f4f8;\n  color: #23263a;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.3rem 0.6rem;\n  margin-right: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: background 0.2s, color 0.2s;\n  position: relative;\n}\n\n.sidebar-icon[title=\"Notifications\"] {\n  position: relative;\n}\n\n.notif-badge {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  background: #ef4444;\n  color: white;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  font-size: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  border: 2px solid #fff;\n  z-index: 1;\n}\n\n.notif-btn:hover,\n.invite-group-btn:hover {\n  background: #e0e7ff;\n  color: #4f46e5;\n}\n\n.logout-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: #f3f4f8;\n  color: #23263a;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 1rem;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.logout-btn:hover {\n  background: #e5e7eb;\n}\n\n.create-group-btn {\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.2rem 0.5rem;\n  margin-right: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: background 0.2s;\n}\n\n.create-group-btn:hover {\n  background: #23263a;\n}\n\n.groups-header {\n  display: flex;\n  align-items: center;\n  gap: 0.3rem;\n  justify-content: space-between;\n}\n\n.groups-header span {\n  flex: 1;\n}\n\n.groups-header .see-all-link {\n  flex: unset;\n}\n\n.groups-section {\n  margin-bottom: 2rem;\n  height: 300px;\n  overflow-y: auto;\n  padding-right: 10px;\n}\n\n.groups-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.group-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #f3f4f8;\n  border-radius: 0.7rem;\n  padding: 0.7rem 1rem;\n  gap: 0.7rem;\n}\n\n.group-info {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n}\n\n.group-avatar {\n  font-size: 1.5rem;\n  color: #4f46e5;\n  background: #e0e7ff;\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.group-details {\n  display: flex;\n  flex-direction: column;\n}\n\n.group-title {\n  font-size: 1rem;\n  font-weight: 600;\n  color: #23263a;\n}\n\n.group-desc {\n  font-size: 0.85rem;\n  color: #6b7280;\n  max-width: 120px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.pending-btn {\n  background: #ad8f0a;\n}\n\n.follow-btn,\n.pending-btn {\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 1.1rem;\n  font-size: 0.95rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.follow-btn {\n  background: #4f46e5;\n}\n\n.follow-btn:hover {\n  background: #23263a;\n}\n\n.followed-btn {\n  background: #e5e7eb;\n  color: #4f46e5;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 1.1rem;\n  font-size: 0.95rem;\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.users-section {\n  margin-top: 2rem;\n  height: 300px;\n  overflow-y: auto;\n  padding-right: 10px;\n}\n\n.users-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #23263a;\n}\n\n.users-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.user-list-item {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n  background: #f3f4f8;\n  border-radius: 0.7rem;\n  padding: 0.7rem 1rem;\n}\n\n.mini-profile-pic {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  object-fit: cover;\n  cursor: pointer;\n}\n\n.user-name {\n  font-size: 1rem;\n  color: #23263a;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(35, 38, 58, 0.45);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  transition: background 0.3s;\n}\n\n.create-group-modal {\n  background: #fff;\n  border-radius: 1.2rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  padding: 2.5rem 2.5rem 2rem 2.5rem;\n  min-width: 340px;\n  max-width: 95vw;\n  animation: modalPopIn 0.25s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n@keyframes modalPopIn {\n  0% {\n    transform: scale(0.95) translateY(30px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: scale(1) translateY(0);\n    opacity: 1;\n  }\n}\n\n.create-group-modal h3 {\n  color: #4f46e5;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.3rem;\n  font-weight: 700;\n}\n\n.create-group-modal .form-group label {\n  color: #23263a;\n  font-weight: 600;\n}\n\n.create-group-modal .form-group input,\n.create-group-modal .form-group textarea {\n  background: #f3f4f8;\n  border: none;\n  border-radius: 0.7rem;\n  padding: 0.8rem 1.1rem;\n  font-size: 1rem;\n  margin-bottom: 0.7rem;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.create-group-modal .form-group textarea {\n  min-height: 80px;\n  resize: vertical;\n}\n\n.create-group-modal .modal-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 1.2rem;\n}\n\n.create-group-modal .submit-btn {\n  background: #4f46e5;\n  color: #fff;\n  padding: 0.7rem 1.5rem;\n  border: none;\n  border-radius: 0.5rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.create-group-modal .submit-btn:hover {\n  background: #23263a;\n}\n\n.create-group-modal .cancel-btn {\n  background: #e5e7eb;\n  color: #23263a;\n  padding: 0.7rem 1.5rem;\n  border: none;\n  border-radius: 0.5rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.create-group-modal .cancel-btn:hover {\n  background: #cbd5e1;\n}\n\n/* Comments Section */\n.comments-section {\n  margin-top: 1.1rem;\n  padding: 1.1rem;\n  background: #f8fafc;\n  border-radius: 0.7rem;\n  border: 1px solid #e5e7eb;\n}\n\n.no-comments {\n  text-align: center;\n  color: #6b7280;\n  font-size: 0.95rem;\n  padding: 1rem 0;\n  background: #fff;\n  border-radius: 0.5rem;\n  border: 1px dashed #e5e7eb;\n}\n\n.comment {\n  background: #fff;\n  border-radius: 0.7rem;\n  padding: 1rem;\n  margin-bottom: 0.7rem;\n  border: 1px solid #e5e7eb;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.comment:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(35, 38, 58, 0.06);\n}\n\n.comment-header {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n  margin-bottom: 0.5rem;\n}\n\n.comment-author-pic {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #e5e7eb;\n}\n\n.comment-header h5 {\n  color: #23263a;\n  font-size: 0.95rem;\n  margin: 0;\n  font-weight: 600;\n}\n\n.comment-timestamp {\n  color: #6b7280;\n  font-size: 0.85rem;\n  margin: 0;\n}\n\n.comment-content {\n  color: #4b5563;\n  font-size: 0.95rem;\n  line-height: 1.5;\n  margin: 0.5rem 0;\n}\n\n.comment-image {\n  width: 100%;\n  height: 150px;\n  overflow: hidden;\n  object-fit: contain;\n  object-position: center;\n  border-radius: 0.5rem;\n  margin-top: 0.7rem;\n  border: 1px solid #e5e7eb;\n  cursor: pointer;\n  transition: opacity 0.2s;\n  background: #f3f4f8;\n}\n\n.comment-image:hover {\n  opacity: 0.9;\n}\n\n.comment-form {\n  display: flex;\n  flex-direction: column;\n  gap: 0.7rem;\n  margin-top: 1rem;\n  background: #fff;\n  padding: 1rem;\n  border-radius: 0.7rem;\n  border: 1px solid #e5e7eb;\n}\n\n.comment-input-row {\n  display: flex;\n  align-items: flex-end;\n  gap: 0.7rem;\n}\n\n.comment-form textarea {\n  flex: 1;\n  padding: 0.8rem 1rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.7rem;\n  font-size: 0.95rem;\n  background: #f8fafc;\n  min-height: 42px;\n  resize: vertical;\n  transition: border-color 0.2s, background 0.2s;\n}\n\n.comment-form textarea:focus {\n  border-color: #4f46e5;\n  background: #fff;\n  outline: none;\n}\n\n.comment-form input[type=\"file\"] {\n  display: none;\n}\n\n.comment-form .file-upload-label {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: #f3f4f8;\n  border-radius: 0.5rem;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.9rem;\n  color: #23263a;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.comment-form .file-upload-label:hover {\n  background: #e0e7ff;\n}\n\n.comment-form .file-upload-label svg {\n  width: 18px;\n  height: 18px;\n  color: #4f46e5;\n}\n\n.comment-submit-btn {\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.5rem 0.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.comment-submit-btn:hover {\n  background: #23263a;\n}\n\n.comment-error {\n  color: #ef4444;\n  font-size: 0.9rem;\n  margin-top: 0.3rem;\n  padding: 0.5rem;\n  background: #fee2e2;\n  border-radius: 0.5rem;\n  border: 1px solid #fecaca;\n}\n\n.group-clickable {\n  cursor: pointer;\n  transition: background 0.18s;\n}\n\n.group-clickable:hover {\n  background: #e0e7ff;\n}\n\n/* Chat Floating Action Button */\n.chat-fab {\n  position: fixed;\n  bottom: 2.2rem;\n  right: 2.2rem;\n  z-index: 3000;\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  box-shadow: 0 4px 16px rgba(35, 38, 58, 0.18);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  cursor: pointer;\n  transition: background 0.2s, box-shadow 0.2s;\n}\n\n.chat-fab:hover {\n  background: #23263a;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.22);\n}\n\n/* Chat Modal */\n.chat-modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(35, 38, 58, 0.25);\n  z-index: 4000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.chat-modal {\n  background: #fff;\n  border-radius: 1.1rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  width: 370px;\n  max-width: 95vw;\n  padding: 1.2rem 1.2rem 1.2rem 1.2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  animation: modalPopIn 0.22s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n.chat-modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #4f46e5;\n  margin-bottom: 0.2rem;\n}\n\n.chat-modal-close {\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: #b0b3c6;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.chat-modal-close:hover {\n  color: #ef4444;\n}\n\n.chat-users-list {\n  background: #f8fafc;\n  border-radius: 0.7rem;\n  padding: 0.7rem 0.5rem;\n  margin-bottom: 0.2rem;\n}\n\n.chat-users-title {\n  font-size: 1rem;\n  color: #23263a;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n}\n\n.chat-users-list ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  max-height: 120px;\n  overflow-y: auto;\n}\n\n.chat-users-list li {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n  padding: 0.4rem 0.2rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: background 0.18s;\n}\n\n.chat-users-list li.selected,\n.chat-users-list li:hover {\n  background: #e0e7ff;\n}\n\n.chat-user-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.chat-messages-area {\n  background: #f8fafc;\n  border-radius: 0.7rem;\n  padding: 0.7rem 0.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.chat-messages-title {\n  font-size: 1rem;\n  color: #4f46e5;\n  font-weight: 600;\n  margin-bottom: 0.3rem;\n}\n\n.chat-messages-list {\n  flex: 1;\n  max-height: 180px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.4rem;\n  scroll-behavior: smooth;\n  padding-right: 0.5rem;\n}\n\n.chat-messages-list::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chat-messages-list::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.chat-messages-list::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.chat-messages-list::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n.chat-msg {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: #fff;\n  border-radius: 0.5rem;\n  padding: 0.4rem 0.7rem;\n  font-size: 0.97rem;\n  box-shadow: 0 1px 4px rgba(35, 38, 58, 0.06);\n  max-width: 80%;\n}\n\n.chat-msg.self {\n  align-self: flex-end;\n  background: #4f46e5;\n  color: #fff;\n}\n\n.chat-msg.other {\n  align-self: flex-start;\n  background: #e5e7eb;\n  color: #23263a;\n}\n\n.chat-msg-time {\n  font-size: 0.75rem;\n  color: #b0b3c6;\n  margin-top: 0.1rem;\n  align-self: flex-end;\n}\n\n.chat-send-form {\n  display: flex;\n  gap: 0.4rem;\n  margin-top: 0.3rem;\n}\n\n.chat-send-form input {\n  flex: 1;\n  padding: 0.5rem 0.8rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.5rem;\n  font-size: 0.97rem;\n  background: #fff;\n}\n\n.chat-send-btn {\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 0.7rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.chat-send-btn:hover {\n  background: #23263a;\n}\n\n.chat-no-user {\n  color: #b0b3c6;\n  text-align: center;\n  font-size: 1rem;\n  padding: 1.2rem 0;\n}\n\n/* Custom scrollbar */\n.groups-section::-webkit-scrollbar {\n  width: 6px;\n}\n\n.groups-section::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.groups-section::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.groups-section::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n/* Custom scrollbar for users section */\n.users-section::-webkit-scrollbar {\n  width: 6px;\n}\n\n.users-section::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.users-section::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.users-section::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n.notif-popup {\n  position: absolute;\n  top: 70px;\n  left: 80px;\n  width: 350px;\n  background: #fff;\n  border-radius: 1.1rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  z-index: 5000;\n  padding: 0.5rem 0 0.5rem 0;\n  animation: modalPopIn 0.22s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n.notif-popup-header {\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #4f46e5;\n  padding: 1rem 1.5rem 0.5rem 1.5rem;\n  border-bottom: 1px solid #e5e7eb;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.notif-list {\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem 0;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.notif-item {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.7rem;\n  padding: 0.8rem 1.5rem;\n  font-size: 0.98rem;\n  color: #23263a;\n  border-bottom: 1px solid #f3f4f8;\n  transition: background 0.18s;\n  position: relative;\n  cursor: pointer;\n}\n\n.notif-item:last-child {\n  border-bottom: none;\n}\n\n.notif-item:hover {\n  background: #f8fafc;\n}\n\n.notif-avatar img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #e5e7eb;\n  flex-shrink: 0;\n}\n\n.notif-text {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.2rem;\n}\n\n.notif-text b {\n  color: #4f46e5;\n  font-weight: 600;\n}\n\n.notif-text span {\n  color: #4b5563;\n  line-height: 1.4;\n}\n\n.notif-time {\n  font-size: 0.85rem;\n  color: #6b7280;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n}\n\n.notif-item.empty {\n  color: #b0b3c6;\n  text-align: center;\n  justify-content: center;\n  font-size: 1rem;\n  padding: 2rem 1.5rem;\n}\n\n.notif-item.unread {\n  background: #f0f7ff;\n  border-left: 3px solid #4f46e5;\n}\n\n.notif-item.unread::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  width: 8px;\n  height: 8px;\n  background: #4f46e5;\n  border-radius: 50%;\n}\n\n.owner-badge {\n  font-size: 0.75rem;\n  color: #4f46e5;\n  background: #e0e7ff;\n  padding: 0.1rem 0.4rem;\n  border-radius: 0.3rem;\n  margin-top: 0.2rem;\n  display: inline-block;\n}\n\n.comment-image {\n  width: 100%;\n  height: 150px;\n  overflow: hidden;\n  object-fit: contain;\n  object-position: center;\n  border-radius: 0.5rem;\n  margin-top: 0.7rem;\n  border: 1px solid #e5e7eb;\n  cursor: pointer;\n  transition: opacity 0.2s;\n  background: #f3f4f8;\n}\n\n.comment-image:hover {\n  opacity: 0.9;\n}\n\n.create-post-form input[type=\"file\"] {\n  display: none;\n}\n\n.create-post-form .file-upload-label {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: #f3f4f8;\n  border-radius: 0.75rem;\n  padding: 0.7rem 1.2rem;\n  font-size: 0.95rem;\n  color: #23263a;\n  cursor: pointer;\n  transition: background 0.2s;\n  margin-bottom: 0.5rem;\n}\n\n.create-post-form .file-upload-label:hover {\n  background: #e0e7ff;\n}\n\n.create-post-form .file-upload-label svg {\n  width: 20px;\n  height: 20px;\n  color: #4f46e5;\n}\n\n.create-post-form .image-preview {\n  width: 100%;\n  height: 150px;\n  overflow: hidden;\n  object-fit: contain;\n  object-position: center;\n  border-radius: 0.75rem;\n  margin-top: 0.5rem;\n  display: block;\n  cursor: pointer;\n  transition: opacity 0.2s;\n  background: #f3f4f8;\n}\n\n.create-post-form .image-preview:hover {\n  opacity: 0.9;\n}\n\n.file-name-display {\n  font-size: 0.9rem;\n  color: #4f46e5;\n  background: #e0e7ff;\n  padding: 0.5rem 0.8rem;\n  border-radius: 0.5rem;\n  margin-top: 0.5rem;\n  display: inline-block;\n}\n\n\n@media (max-width: 768px) {\n  .post-card {\n    width: 100%;\n  }\n  .post-image img {\n    width: 40px;\n    height: 40px;\n  }\n}\n\n@media (max-width: 900px) {\n  .posts-grid {\n    max-width: 100%;\n    padding: 0 1rem;\n  }\n}\n\n/* Remove the grid layout for larger screens */\n@media (min-width: 768px) {\n  .posts-grid {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n  .forum-layout {\n    flex-direction: column;\n  }\n\n  .sidebar {\n    width: 100%;\n    flex-direction: row;\n    padding: 1rem;\n    border-radius: 0;\n    justify-content: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: auto;\n    height: auto;\n    z-index: 1000;\n  }\n\n  .sidebar-icons {\n    flex-direction: row;\n    justify-content: center;\n    gap: 1.5rem;\n    position: relative; /* Change from fixed to relative */\n  }\n\n  .main-area {\n    margin-left: 0; /* Remove margin on mobile */\n    margin-top: 80px; /* Add margin for fixed top sidebar */\n    padding: 1rem;\n  }\n\n  .rightbar {\n    width: 100%;\n    border-radius: 0;\n    margin-top: 1rem;\n  }\n\n  .posts-grid {\n    max-width: 100%;\n  }\n\n  .chat-fab {\n    bottom: 1.5rem;\n    right: 1.5rem;\n  }\n\n  .notif-popup {\n    left: 50%;\n    transform: translateX(-50%);\n    top: 80px;\n  }\n}\n\n@media (max-width: 768px) {\n  .sidebar-icons {\n    gap: 1rem;\n  }\n\n  .sidebar-icon {\n    width: 40px;\n    height: 40px;\n  }\n\n  .create-post-card {\n    padding: 1rem;\n  }\n\n  .post-card {\n    padding: 1rem;\n  }\n\n  .post-image img {\n    width: 30px;\n    height: 30px;\n  }\n\n  .post-title {\n    font-size: 1.2rem;\n  }\n\n  .post-content {\n    font-size: 1rem;\n  }\n\n  .chat-modal {\n    width: 95vw;\n    height: 90vh;\n  }\n\n  .groups-section,\n  .users-section {\n    height: 250px;\n  }\n}\n\n@media (max-width: 480px) {\n  .sidebar-icons {\n    gap: 0.8rem;\n  }\n\n  .sidebar-icon {\n    width: 36px;\n    height: 36px;\n  }\n\n  .post-header {\n    gap: 0.7rem;\n  }\n\n  .post-author-pic {\n    width: 40px;\n    height: 40px;\n  }\n\n  .post-image img {\n    width: 30px;\n    height: 30px;\n  }\n\n  .create-post-form input,\n  .create-post-form textarea {\n    font-size: 0.95rem;\n  }\n\n  .chat-modal {\n    padding: 1rem;\n  }\n\n  .chat-messages-list {\n    max-height: 150px;\n  }\n}\n\n/* Add smooth transitions */\n.sidebar,\n.sidebar-icons,\n.main-area,\n.rightbar {\n  transition: all 0.3s ease;\n}\n\n/* Ensure content is properly centered on mobile */\n@media (max-width: 1024px) {\n  .main-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .avatar-bar {\n    width: 100%;\n    max-width: 900px;\n  }\n\n  .create-post-card {\n    width: 100%;\n    max-width: 900px;\n  }\n}\n\n/* Modal styles */\n.image-modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.85);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 5000;\n  animation: fadeIn 0.2s ease;\n  padding: 2rem;\n}\n\n.image-modal-content {\n  position: relative;\n  max-width: 90vw;\n  max-height: 85vh;\n  animation: zoomIn 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.image-modal-content img {\n  max-width: 100%;\n  max-height: 85vh;\n  width: auto;\n  height: auto;\n  object-fit: contain;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n\n.close-modal-btn {\n  position: absolute;\n  top: -40px;\n  right: 0;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 2rem;\n  cursor: pointer;\n  padding: 0.5rem;\n  transition: opacity 0.2s;\n  z-index: 1;\n}\n\n.close-modal-btn:hover {\n  opacity: 0.8;\n}\n\n/* Add zoom controls */\n.zoom-controls {\n  position: absolute;\n  bottom: -40px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 1rem;\n  background: rgba(0, 0, 0, 0.5);\n  padding: 0.5rem 1rem;\n  border-radius: 2rem;\n}\n\n.zoom-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.2rem;\n  cursor: pointer;\n  padding: 0.5rem;\n  transition: opacity 0.2s;\n}\n\n.zoom-btn:hover {\n  opacity: 0.8;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes zoomIn {\n  from { transform: scale(0.95); }\n  to { transform: scale(1); }\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .post-image {\n    height: 150px;\n  }\n\n  .comment-image {\n    height: 120px;\n  }\n\n  .create-post-form .image-preview {\n    height: 120px;\n  }\n}\n\n@media (max-width: 480px) {\n  .post-image {\n    height: 120px;\n  }\n\n  .comment-image {\n    height: 100px;\n  }\n\n  .create-post-form .image-preview {\n    height: 100px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}