{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport UserLogin from \"./components/UserLogin.vue\";\nimport UserRegister from \"./components/UserRegister.vue\";\nimport AuthMiddleware from \"./components/AuthMiddleware.vue\";\nimport ChechInfo from \"./components/ChechInfo.vue\";\nimport ForumPage from \"./components/ForumPage.vue\";\nimport WebSocket from \"./components/WebSocket.vue\";\nimport MyGroups from \"./components/MyGroups.vue\";\nimport GroupPage from \"./components/GroupPage.vue\";\nimport ProfileInfo from \"./components/ProfileInfo.vue\";\nimport SettingsPage from \"./components/SettingsPage.vue\";\nimport ErrorPage from \"./components/ErrorPage.vue\";\nimport { CheckLogin } from \"./api/middle\";\nconst routes = [{\n  path: \"/login\",\n  component: UserLogin,\n  beforeEnter: async (to, from, next) => {\n    const isLoggedIn = await CheckLogin();\n    if (isLoggedIn) {\n      next(\"/home\");\n    } else {\n      next();\n    }\n  },\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: \"/register\",\n  component: UserRegister,\n  beforeEnter: async (to, from, next) => {\n    const isLoggedIn = await CheckLogin();\n    if (isLoggedIn) {\n      next(\"/home\");\n    } else {\n      next();\n    }\n  }\n}, {\n  path: \"/\",\n  component: AuthMiddleware\n}, {\n  path: \"/info\",\n  component: ChechInfo\n}, {\n  path: \"/home\",\n  component: ForumPage\n}, {\n  path: \"/messages\",\n  component: WebSocket\n}, {\n  path: \"/mygroups\",\n  component: MyGroups\n}, {\n  path: \"/group/:id\",\n  component: GroupPage\n}, {\n  path: \"/profile/:id\",\n  component: ProfileInfo\n}, {\n  path: \"/settings\",\n  component: SettingsPage\n}, {\n  path: \"/:pathMatch(.*)*\",\n  name: \"NotFound\",\n  component: ErrorPage\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","UserLogin","UserRegister","AuthMiddleware","ChechInfo","ForumPage","WebSocket","MyGroups","GroupPage","ProfileInfo","SettingsPage","ErrorPage","CheckLogin","routes","path","component","beforeEnter","to","from","next","isLoggedIn","meta","requiresAuth","name","router","history"],"sources":["/Users/apple/Desktop/front/frontend-social/frontend/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\nimport UserLogin from \"./components/UserLogin.vue\";\nimport UserRegister from \"./components/UserRegister.vue\";\nimport AuthMiddleware from \"./components/AuthMiddleware.vue\";\nimport ChechInfo from \"./components/ChechInfo.vue\";\nimport ForumPage from \"./components/ForumPage.vue\";\n\nimport WebSocket from \"./components/WebSocket.vue\";\nimport MyGroups from \"./components/MyGroups.vue\";\nimport GroupPage from \"./components/GroupPage.vue\";\nimport ProfileInfo from \"./components/ProfileInfo.vue\";\nimport SettingsPage from \"./components/SettingsPage.vue\";\nimport ErrorPage from \"./components/ErrorPage.vue\";\nimport { CheckLogin } from \"./api/middle\";\n\nconst routes = [\n  {\n    path: \"/login\",\n    component: UserLogin,\n    beforeEnter: async (to, from, next) => {\n      const isLoggedIn = await CheckLogin();\n      if (isLoggedIn) {\n        next(\"/home\");\n      } else {\n        next();\n      }\n    },\n    meta: { requiresAuth: false },\n  },\n  {\n    path: \"/register\",\n    component: UserRegister,\n    beforeEnter: async (to, from, next) => {\n      const isLoggedIn = await CheckLogin();\n      if (isLoggedIn) {\n        next(\"/home\");\n      } else {\n        next();\n      }\n    },\n  },\n  { path: \"/\", component: AuthMiddleware },\n  { path: \"/info\", component: ChechInfo },\n  { path: \"/home\", component: ForumPage },\n\n  { path: \"/messages\", component: WebSocket },\n  { path: \"/mygroups\", component: MyGroups },\n  { path: \"/group/:id\", component: GroupPage },\n  { path: \"/profile/:id\", component: ProfileInfo },\n  { path: \"/settings\", component: SettingsPage },\n\n  {\n    path: \"/:pathMatch(.*)*\",\n    name: \"NotFound\",\n    component: ErrorPage,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAElD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,UAAU,QAAQ,cAAc;AAEzC,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEd,SAAS;EACpBe,WAAW,EAAE,MAAAA,CAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACrC,MAAMC,UAAU,GAAG,MAAMR,UAAU,CAAC,CAAC;IACrC,IAAIQ,UAAU,EAAE;MACdD,IAAI,CAAC,OAAO,CAAC;IACf,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC;EACDE,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACER,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEb,YAAY;EACvBc,WAAW,EAAE,MAAAA,CAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACrC,MAAMC,UAAU,GAAG,MAAMR,UAAU,CAAC,CAAC;IACrC,IAAIQ,UAAU,EAAE;MACdD,IAAI,CAAC,OAAO,CAAC;IACf,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF;AACF,CAAC,EACD;EAAEL,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEZ;AAAe,CAAC,EACxC;EAAEW,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEX;AAAU,CAAC,EACvC;EAAEU,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEV;AAAU,CAAC,EAEvC;EAAES,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAET;AAAU,CAAC,EAC3C;EAAEQ,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAER;AAAS,CAAC,EAC1C;EAAEO,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEP;AAAU,CAAC,EAC5C;EAAEM,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEN;AAAY,CAAC,EAChD;EAAEK,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEL;AAAa,CAAC,EAE9C;EACEI,IAAI,EAAE,kBAAkB;EACxBS,IAAI,EAAE,UAAU;EAChBR,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMa,MAAM,GAAGzB,YAAY,CAAC;EAC1B0B,OAAO,EAAEzB,gBAAgB,CAAC,CAAC;EAC3Ba;AACF,CAAC,CAAC;AAEF,eAAeW,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}