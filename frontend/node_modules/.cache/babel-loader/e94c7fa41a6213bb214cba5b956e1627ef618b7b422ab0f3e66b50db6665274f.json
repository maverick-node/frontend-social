{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelDynamic as _vModelDynamic, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"register-card\"\n};\nconst _hoisted_3 = [\"for\"];\nconst _hoisted_4 = [\"type\", \"id\", \"onUpdate:modelValue\", \"placeholder\", \"required\"];\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"logo-container\"\n  }, [_createElementVNode(\"img\", {\n    src: \"https://logosandtypes.com/wp-content/uploads/2023/03/astro-framework.svg\",\n    alt: \"Astro Logo\",\n    class: \"logo\"\n  })], -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fields, (field, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"form-group\",\n      key: key\n    }, [_createElementVNode(\"label\", {\n      for: key\n    }, _toDisplayString(field.label), 9, _hoisted_3), _withDirectives(_createElementVNode(\"input\", {\n      type: field.type,\n      id: key,\n      \"onUpdate:modelValue\": $event => $data.form[key] = $event,\n      placeholder: field.placeholder,\n      required: field.required !== false\n    }, null, 8, _hoisted_4), [[_vModelDynamic, $data.form[key]]])]);\n  }), 128)), _createElementVNode(\"div\", _hoisted_5, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"avatar\"\n  }, \"Avatar\", -1)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onAvatarChange && $options.onAvatarChange(...args)),\n    accept: \"image/*\"\n  }, null, 32)]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn\"\n  }, \"Register\", -1)), _cache[4] || (_cache[4] = _createElementVNode(\"p\", {\n    class: \"login-link\"\n  }, [_createTextVNode(\" Already have an account? \"), _createElementVNode(\"a\", {\n    href: \"/login\"\n  }, \"Login\")], -1))], 32)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","src","alt","onSubmit","_cache","_withModifiers","args","$options","handleRegister","_Fragment","_renderList","$data","fields","field","key","for","_toDisplayString","label","_hoisted_3","type","id","$event","form","placeholder","required","_hoisted_4","_hoisted_5","onChange","onAvatarChange","accept","_createTextVNode","href"],"sources":["/Users/apple/Desktop/social-1/social-network/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-card\">\n      <div class=\"logo-container\">\n        <img\n          src=\"https://logosandtypes.com/wp-content/uploads/2023/03/astro-framework.svg\"\n          alt=\"Astro Logo\"\n          class=\"logo\"\n        />\n      </div>\n      <form @submit.prevent=\"handleRegister\">\n        <div class=\"form-group\" v-for=\"(field, key) in fields\" :key=\"key\">\n          <label :for=\"key\">{{ field.label }}</label>\n          <input\n            :type=\"field.type\"\n            :id=\"key\"\n            v-model=\"form[key]\"\n            :placeholder=\"field.placeholder\"\n            :required=\"field.required !== false\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"avatar\">Avatar</label>\n          <input\n            type=\"file\"\n            id=\"avatar\"\n            @change=\"onAvatarChange\"\n            accept=\"image/*\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn\">Register</button>\n        <p class=\"login-link\">\n          Already have an account?\n          <a href=\"/login\">Login</a>\n        </p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\n\nexport default {\n  props: [\"showNotification\"],\n  name: \"UserRegister\",\n  data() {\n    return {\n      form: {\n        email: \"\",\n        password: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        bio: \"\",\n        birthday: \"\",\n        nickname: \"\",\n      },\n      avatarFile: null,\n      fields: {\n        // username: { label: \"Username\", type: \"text\", placeholder: \"username\" },\n        email: {\n          label: \"Email\",\n          type: \"email\",\n          placeholder: \"test@example.com\",\n        },\n        password: {\n          label: \"Password\",\n          type: \"password\",\n          placeholder: \"********\",\n        },\n        firstname: { label: \"First Name\", type: \"text\", placeholder: \"First Name\" },\n        lastname: { label: \"Last Name\", type: \"text\", placeholder: \"Last Name\" },\n        nickname: {\n          label: \"Nickname\",\n          type: \"text\",\n          placeholder: \"Nickname (optional)\",\n          required: false,\n        },\n        bio: {\n          label: \"Bio\",\n          type: \"text\",\n          placeholder: \"Tell us about yourself\",\n          required: false,\n        },\n        birthday: { label: \"Birthday\", type: \"date\", placeholder: \"\" },\n      },\n    };\n  },\n  \n  methods: {\n    onAvatarChange(event) {\n      this.avatarFile = event.target.files[0];\n    },\n    validateForm() {\n      const errors = [];\n\n      if (!/^[a-zA-Z0-9_]{3,20}$/.test(this.form.username)) {\n        errors.push(\"Username must be 3-20 alphanumeric characters.\");\n      }\n\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.form.email)) {\n        errors.push(\"Invalid email format.\");\n      }\n\n      // if (!/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(this.form.password)) {\n      //   errors.push(\"Password must be at least 8 characters, including letters and numbers.\");\n      // }\n\n      if (!/^[a-zA-Z]{1,30}$/.test(this.form.firstname)) {\n        errors.push(\"First name must contain only letters.\");\n      }\n\n      if (!/^[a-zA-Z]{1,30}$/.test(this.form.lastname)) {\n        errors.push(\"Last name must contain only letters.\");\n      }\n\n      // Date of birth validation\n      if (!this.form.birthday) {\n        errors.push(\"Date of birth is required.\");\n      } else {\n        const birthDate = new Date(this.form.birthday);\n        const today = new Date();\n        const minAge = 13;\n        const maxAge = 100;\n        \n        // Check if date is valid\n        if (isNaN(birthDate.getTime())) {\n          errors.push(\"Invalid date of birth format.\");\n        } else {\n          // Check if date is in the future\n          if (birthDate > today) {\n            errors.push(\"Date of birth cannot be in the future.\");\n          }\n          \n          // Calculate age\n          const age = today.getFullYear() - birthDate.getFullYear();\n          const monthDiff = today.getMonth() - birthDate.getMonth();\n          const dayDiff = today.getDate() - birthDate.getDate();\n          \n          // Adjust age if birthday hasn't occurred this year\n          const actualAge = monthDiff < 0 || (monthDiff === 0 && dayDiff < 0) ? age - 1 : age;\n          \n          if (actualAge < minAge) {\n            errors.push(`You must be at least ${minAge} years old to register.`);\n          }\n          if (actualAge > maxAge) {\n            errors.push(`Date of birth indicates an age over ${maxAge} years.`);\n          }\n        }\n      }\n\n      if (this.avatarFile) {\n        const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!allowedTypes.includes(this.avatarFile.type)) {\n          errors.push(\"Invalid avatar type (jpg/jpeg/png only).\");\n        }\n\n        if (this.avatarFile.size > 2 * 1024 * 1024) {\n          errors.push(\"Avatar must be under 2MB.\");\n        }\n      }\n\n      return errors;\n    },\n    handleRegister() {\n      this.errors = this.validateForm();\n      if (this.errors.length > 0) {\n        this.showNotification(\n          \"Please fix the following errors: \" + this.errors.join(\", \"),\n          \"error\"\n        );\n        return;\n      }\n      const formData = new FormData();\n      // Add avatar\n      if (this.avatarFile) {\n        formData.append(\"avatar\", this.avatarFile);\n      }\n      // Add JSON user data\n      const userJson = JSON.stringify(this.form);\n      formData.append(\"user\", userJson);\n      fetch(\"https://back-production-bb9b.up.railway.app/api/auth/register\", {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData,\n      })\n        .then((res) => {\n          if (!res.ok) throw new Error(\"Registration failed\");\n          return res.json();\n        })\n        .then((data) => {\n          this.showNotification(\"Registration successful!\", \"success\");\n          console.log(\"Success:\", data);\n          router.push(\"/\");\n        })\n        .catch((err) => {\n          this.showNotification(\n            \"Registration failed. Please try again.\",\n            \"error\"\n          );\n          console.error(\"Error:\", err);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* General styles for the register page */\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n  background-image: url(\"https://learn.zone01oujda.ma/assets/img/01-trame.svg\");\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  font-family: \"Arial\", sans-serif;\n  position: relative;\n}\n\n.register-container::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n}\n\n.register-card {\n  background-color: rgba(17, 17, 17, 0.95);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  padding: 40px;\n  border-radius: 12px;\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n  position: relative;\n  z-index: 2;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.form-group {\n  margin-bottom: 20px;\n  text-align: left;\n}\n\nlabel {\n  display: block;\n  font-size: 14px;\n  color: #e0e0e0;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  background-color: rgba(255, 255, 255, 0.05);\n  color: #ffffff;\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #6c63ff;\n  background-color: rgba(255, 255, 255, 0.1);\n  box-shadow: 0 0 0 2px rgba(108, 99, 255, 0.2);\n}\n\ninput::placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n\nbutton {\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  background-color: #6c63ff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-weight: 500;\n}\n\nbutton:hover {\n  background-color: #5a52e1;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(108, 99, 255, 0.3);\n}\n\n.login-link {\n  margin-top: 20px;\n  font-size: 14px;\n  color: #e0e0e0;\n}\n\n.login-link a {\n  color: #6c63ff;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.login-link a:hover {\n  color: #5a52e1;\n  text-decoration: none;\n}\n\n.logo-container {\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: center;\n}\n\n.logo {\n  width: 120px;\n  height: auto;\n  transition: transform 0.3s ease;\n  filter: brightness(0) invert(1);\n}\n\n.logo:hover {\n  transform: scale(1.05);\n}\n\n/* Responsive Design */\n@media (max-width: 600px) {\n  .register-card {\n    padding: 30px;\n    max-width: 90%;\n  }\n\n  button {\n    font-size: 14px;\n    padding: 10px;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAe;mBAF9B;mBAAA;;EAqBaA,KAAK,EAAC;AAAY;;uBApB7BC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,CAkCM,OAlCNC,UAkCM,G,0BAjCJD,mBAAA,CAMM;IANDH,KAAK,EAAC;EAAgB,IACzBG,mBAAA,CAIE;IAHAE,GAAG,EAAC,0EAA0E;IAC9EC,GAAG,EAAC,YAAY;IAChBN,KAAK,EAAC;aAGVG,mBAAA,CAyBO;IAzBAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAVnBC,cAAA,KAAAC,IAAA,KAU6BC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;yBACnCT,mBAAA,CASMY,SAAA,QApBdC,WAAA,CAWuDC,KAAA,CAAAC,MAAM,EAX7D,CAWwCC,KAAK,EAAEC,GAAG;yBAA1CjB,mBAAA,CASM;MATDD,KAAK,EAAC,YAAY;MAAiCkB,GAAG,EAAEA;QAC3Df,mBAAA,CAA2C;MAAnCgB,GAAG,EAAED;IAAG,GAAAE,gBAAA,CAAKH,KAAK,CAACI,KAAK,MAZ1CC,UAAA,G,gBAaUnB,mBAAA,CAME;MALCoB,IAAI,EAAEN,KAAK,CAACM,IAAI;MAChBC,EAAE,EAAEN,GAAG;MAfpB,uBAAAO,MAAA,IAgBqBV,KAAA,CAAAW,IAAI,CAACR,GAAG,IAAAO,MAAA;MAChBE,WAAW,EAAEV,KAAK,CAACU,WAAW;MAC9BC,QAAQ,EAAEX,KAAK,CAACW,QAAQ;gBAlBrCC,UAAA,I,iBAgBqBd,KAAA,CAAAW,IAAI,CAACR,GAAG,G;aAKrBf,mBAAA,CAQM,OARN2B,UAQM,G,0BAPJ3B,mBAAA,CAAkC;IAA3BgB,GAAG,EAAC;EAAQ,GAAC,QAAM,QAC1BhB,mBAAA,CAKE;IAJAoB,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,QAAQ;IACVO,QAAM,EAAAvB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAqB,cAAA,IAAArB,QAAA,CAAAqB,cAAA,IAAAtB,IAAA,CAAc;IACvBuB,MAAM,EAAC;4CAGX9B,mBAAA,CAAmD;IAA3CoB,IAAI,EAAC,QAAQ;IAACvB,KAAK,EAAC;KAAM,UAAQ,Q,0BAC1CG,mBAAA,CAGI;IAHDH,KAAK,EAAC;EAAY,IA/B7BkC,gBAAA,CA+B8B,4BAEpB,GAAA/B,mBAAA,CAA0B;IAAvBgC,IAAI,EAAC;EAAQ,GAAC,OAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}