{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { notificationWebSocket } from '../services/notificationWebSocket.js';\nexport default {\n  props: [\"showNotifications\"],\n  name: \"GroupPage\",\n  data() {\n    return {\n      isLoading: true,\n      user: {\n        id: \"\",\n        username: \"\"\n      },\n      group: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        is_owner: false\n      },\n      isMember: false,\n      isAdmin: false,\n      membershipStatus: \"not_member\",\n      posts: [],\n      chatMessages: [],\n      newPost: {\n        title: \"\",\n        content: \"\",\n        image: \"\"\n      },\n      newMessage: \"\",\n      socket: null,\n      showEventModal: false,\n      showMemberRequestsModal: false,\n      pendingRequests: [],\n      newEvent: {\n        title: \"\",\n        date: \"\",\n        description: \"\",\n        location: \"\"\n      },\n      upcomingEvents: [],\n      pastEvents: [],\n      notification: {\n        visible: false,\n        message: \"\",\n        type: \"success\"\n      },\n      image: \"\",\n      notifications: [],\n      showInviteMembersModal: false,\n      searchQuery: \"\",\n      filteredUsers: [],\n      allUsers: [],\n      invitedUsers: new Set(),\n      groupMembers: [],\n      showNotifications: false\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    fetch(\"http://localhost:8080/api/info\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(async res => {\n      if (res.ok) {\n        const userData = await res.json();\n        next(vm => {\n          vm.user.username = userData.Username;\n        });\n      } else {\n        next('/login');\n      }\n    }).catch(() => {\n      next('/login');\n    });\n  },\n  async created() {\n    console.log(\"GroupPage component created\");\n    const groupId = this.$route.params.id;\n    console.log(\"Group ID:\", groupId);\n    await this.checkMembership(groupId);\n    await this.fetchGroupDetails(groupId);\n    await this.fetchEvents(this.$route.params.id);\n    await this.fetchPosts(groupId);\n    await this.fetchNotifications();\n    if (this.group.is_owner) {\n      await this.fetchPendingRequests();\n    }\n    this.initializeWebSocket(groupId);\n    this.scrollToBottom(); // Add this line\n  },\n  methods: {\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatContainer = document.querySelector('.chat-messages');\n        if (chatContainer) {\n          chatContainer.scrollTop = chatContainer.scrollHeight;\n        }\n      });\n    },\n    async fetchGroupDetails(groupId) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/getgroups?id=${groupId}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const data = await response.json();\n          for (const group of data) {\n            if (group.id === groupId) {\n              this.group = group;\n              break;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching group details:\", error);\n      }\n    },\n    handleNotifClick() {\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        //mark ga3 notif bli read\n        this.notifications.forEach(notif => {\n          if (!notif.is_read) {\n            this.markNotificationAsRead(notif.id);\n          }\n        });\n      }\n    },\n    handleNotifClose(e) {\n      if (!this.showNotifications) return;\n      const popup = this.$refs.notifPopup;\n      const btn = this.$refs.notifBtn;\n      if (!popup || !btn || !popup.contains(e.target) && !btn.contains(e.target)) {\n        this.showNotifications = false;\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const res = await fetch(\"http://localhost:8080/api/notifications\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"sassasaassa\", data);\n          this.notifications = Array.isArray(data) ? data.map(notif => ({\n            id: notif.id,\n            sender: notif.sender_username || \"Unknown\",\n            text: notif.content || \"\",\n            time: notif.time || new Date().toISOString(),\n            type: notif.type || \"notification\",\n            is_read: notif.is_read || false\n          })) : [];\n          this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n        } else {\n          this.notifications = [];\n        }\n      } catch (e) {\n        console.error('Error fetching notifications:', e);\n        this.notifications = [];\n      }\n    },\n    async markNotificationAsRead(notificationId) {\n      try {\n        const notification = this.notifications.find(n => n.id === notificationId);\n        if (!notification) return;\n\n        // Set a timeout to mark as read after 2 seconds\n        setTimeout(async () => {\n          try {\n            const res = await fetch(`http://localhost:8080/api/markasread`, {\n              method: 'POST',\n              credentials: 'include',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                notificationId,\n                is_read: 1\n              })\n            });\n            if (res.ok) {\n              notification.is_read = true;\n            }\n          } catch (error) {\n            console.error('Error marking notification as read:', error);\n          }\n        }, 2000);\n      } catch (error) {\n        console.error('Error marking notification as read:', error);\n      }\n    },\n    async checkMembership(groupId) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/checkmem?group_id=${groupId}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Membership data:\", data);\n          this.isMember = data.is_member;\n          this.membershipStatus = data.status || \"not_member\";\n          this.isAdmin = data.is_admin || false;\n          this.group.is_owner = data.is_owner || false;\n\n          // If user is not a member or pending, disable features\n          if (!this.isMember || this.membershipStatus === 'pending') {\n            this.disableFeatures();\n          }\n        }\n      } catch (error) {\n        console.error(\"Error checking membership:\", error);\n      }\n    },\n    initializeWebSocket(groupId) {\n      this.socket = new WebSocket(`ws://localhost:8080/ws/group/${groupId}`);\n      this.socket.onopen = () => {\n        console.log('WebSocket connected to group chat');\n      };\n      this.socket.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n\n          // Handle initial messages array\n          if (Array.isArray(data)) {\n            this.chatMessages = data.map(msg => ({\n              ...msg,\n              authorAvatar: msg.avatar ? `http://localhost:8080/uploads/${msg.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${msg.username}`,\n              created_at: new Date(msg.created_at)\n            })).sort((a, b) => a.created_at - b.created_at);\n            return;\n          }\n          if (data && data.error) {\n            console.error('WebSocket error:', data.error);\n            this.showNotification(data.error, 'error');\n            return;\n          }\n          if (data && data.username && data.content) {\n            this.chatMessages.push({\n              ...data,\n              authorAvatar: data.avatar ? `http://localhost:8080/uploads/${data.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${data.username}`,\n              created_at: new Date(data.created_at)\n            });\n            this.chatMessages.sort((a, b) => a.created_at - b.created_at);\n            this.$nextTick(() => {\n              const chatContainer = document.querySelector('.chat-messages');\n              if (chatContainer) {\n                chatContainer.scrollTop = chatContainer.scrollHeight;\n              }\n            });\n          }\n        } catch (error) {\n          console.error('Error processing WebSocket message:', error);\n          this.showNotification('Error processing message', 'error');\n        }\n      };\n      this.socket.onerror = error => {\n        console.error('WebSocket error:', error);\n        this.showNotification('Error connecting to group chat', 'error');\n      };\n      this.socket.onclose = () => {\n        console.log('WebSocket disconnected from group chat');\n      };\n    },\n    async sendMessage() {\n      if (this.socket && this.socket.readyState === WebSocket.OPEN && this.newMessage.trim()) {\n        try {\n          this.socket.send(JSON.stringify({\n            content: this.newMessage.trim(),\n            group_id: this.group.id\n          }));\n          this.newMessage = \"\";\n        } catch (error) {\n          console.error('Error sending message:', error);\n          this.showNotification('Failed to send message', 'error');\n        }\n      } else {\n        this.showNotification('Cannot send message - chat disconnected', 'error');\n      }\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!allowedTypes.includes(file.type)) {\n          this.showNotification('Only JPEG, PNG, and GIF images are allowed', 'error');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n        // Validate file size (2MB limit)\n        const maxSize = 2 * 1024 * 1024; // 2MB in bytes\n        if (file.size > maxSize) {\n          this.showNotification('Image file size must be less than 2MB', 'error');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.image = e.target.result; // base64 string\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async leaveGroup() {\n      try {\n        const userRes = await fetch(\"http://localhost:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n        const userData = await userRes.json();\n        const response = await fetch(\"http://localhost:8080/api/removememberfromgroup\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            user_id: userData.id // Use the user ID from the API response\n          })\n        });\n        if (response.ok) {\n          this.showNotification(\"Successfully left the group\", \"success\");\n          this.$router.push(\"/home\");\n        } else {\n          const errorText = await response.text();\n          console.error(\"Failed to leave group:\", errorText);\n          this.showNotification(\"Failed to leave group\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error leaving group:\", error);\n        this.showNotification(\"Error leaving group\", \"error\");\n      }\n    },\n    goBack() {\n      this.$router.push(\"/home\");\n    },\n    formatTimestamp(timestamp) {\n      return new Date(timestamp).toLocaleString();\n    },\n    validateEventDate(date) {\n      const eventDate = new Date(date);\n      const now = new Date();\n      const maxDate = new Date();\n      maxDate.setFullYear(now.getFullYear() + 2); // Allow events up to 2 years in the future\n\n      // Check if date is in the past\n      if (eventDate < now) {\n        return {\n          valid: false,\n          message: \"Event date cannot be in the past\"\n        };\n      }\n\n      // Check if date is too far in the future\n      if (eventDate > maxDate) {\n        return {\n          valid: false,\n          message: \"Event date cannot be more than 2 years in the future\"\n        };\n      }\n      return {\n        valid: true\n      };\n    },\n    async createEvent() {\n      try {\n        // Validate event date\n        const dateValidation = this.validateEventDate(this.newEvent.date);\n        if (!dateValidation.valid) {\n          this.showNotification(dateValidation.message, \"error\");\n          return;\n        }\n        const response = await fetch(`http://localhost:8080/api/events/add?group_id=${this.$route.params.id}`, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            ...this.newEvent\n          })\n        });\n        if (response.ok) {\n          this.showNotification(\"Event created successfully!\", \"success\");\n          this.newEvent = {\n            title: \"\",\n            date: \"\",\n            description: \"\",\n            location: \"\"\n          };\n          await this.fetchEvents(this.$route.params.id);\n          this.showEventModal = false;\n        } else {\n          throw new Error(\"Failed to create event\");\n        }\n      } catch (error) {\n        console.error(\"Error creating event:\", error);\n        this.showNotification(\"Failed to create event\", \"error\");\n      }\n    },\n    async respondToEvent(eventId, response) {\n      try {\n        const res = await fetch(`http://localhost:8080/api/events/join?event_id=${eventId}&response=${response}`, {\n          method: \"POST\",\n          credentials: \"include\"\n        });\n        if (!res.ok) {\n          throw new Error(\"Failed to update response\");\n        }\n        const data = await res.json();\n\n        // Update the event in the list with new counts\n        const eventToUpdate = this.upcomingEvents.find(e => e.id === eventId);\n        if (eventToUpdate) {\n          eventToUpdate.going_count = data.going_count;\n          eventToUpdate.not_going_count = data.not_going_count;\n          eventToUpdate.user_response = response;\n        }\n        const message = response === 1 ? \"You're going to the event!\" : \"You've marked as not going\";\n        this.showNotification(message, \"success\");\n      } catch (error) {\n        console.error(\"Error responding to event:\", error);\n        this.showNotification(\"Failed to update response\", \"error\");\n      }\n    },\n    showNotification(message, type = 'success') {\n      this.notification = {\n        visible: true,\n        message,\n        type\n      };\n      setTimeout(() => {\n        this.notification.visible = false;\n      }, 3000);\n    },\n    async fetchEvents(group_id) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/events?id=${group_id}`, {\n          credentials: \"include\"\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(errorText);\n        }\n        const events = await response.json();\n        const now = new Date();\n        if (events) {\n          const normalizedEvents = events.map(event => ({\n            ...event,\n            date: event.date || event.event_datetime || event.eventDateTime,\n            going_count: event.going_count || 0,\n            not_going_count: event.not_going_count || 0,\n            user_response: event.response || null\n          }));\n          this.upcomingEvents = normalizedEvents.filter(event => new Date(event.date) > now).sort((a, b) => new Date(a.date) - new Date(b.date));\n          this.pastEvents = normalizedEvents.filter(event => new Date(event.date) <= now).sort((a, b) => new Date(b.date) - new Date(a.date));\n          console.log(\"Fetched events with response counts:\", this.upcomingEvents);\n        }\n      } catch (error) {\n        console.error(\"Error fetching events:\", error);\n        this.showNotification(error.message || \"Error fetching events\", \"error\");\n        this.upcomingEvents = [];\n        this.pastEvents = [];\n      }\n    },\n    async fetchPosts(group_id) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/groupposts?group_id=${group_id}`, {\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const posts = await response.json();\n          console.log(\"Fetched posts:\", posts);\n          if (posts) {\n            this.posts = posts.map(post => ({\n              ...post,\n              id: post.id,\n              author: post.author,\n              authorAvatar: post.avatar ? `http://localhost:8080/uploads/${post.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${post.author}`,\n              image: post.image ? post.image : null,\n              created_at: post.creation_date,\n              comments: [],\n              showComments: false,\n              newComment: \"\",\n              commentError: \"\",\n              commentImage: null\n            }));\n          }\n        } else {\n          console.error(\"Failed to fetch posts\");\n          this.showNotification(\"Failed to fetch posts\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        this.showNotification(\"Error fetching posts\", \"error\");\n      }\n    },\n    async createPost() {\n      const groupId = this.$route.params.id;\n      try {\n        const response = await fetch(`http://localhost:8080/api/groupposts/add?group_id=${groupId}`, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title: this.newPost.title,\n            content: this.newPost.content,\n            image: this.image\n          })\n        });\n        if (response.ok) {\n          this.newPost = {\n            title: \"\",\n            content: \"\",\n            image: \"\"\n          };\n          this.image = \"\";\n          // Clear the file input\n          const fileInput = document.querySelector('input[type=\"file\"]');\n          if (fileInput) {\n            fileInput.value = '';\n          }\n          await this.fetchPosts(groupId);\n        } else {\n          const errorText = await response.text();\n          console.error(\"Post failed:\", errorText);\n        }\n      } catch (error) {\n        console.error(\"Error creating post:\", error);\n      }\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // Validate file size (2MB limit)\n        const maxSize = 2 * 1024 * 1024; // 2MB in bytes\n        if (file.size > maxSize) {\n          alert('Image file size must be less than 2MB');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.image = e.target.result; // base64 string\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async addComment(post) {\n      if (!post.newComment.trim() && !post.commentImage) {\n        post.commentError = \"Comment cannot be empty.\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"group_post_id\", post.id);\n      formData.append(\"content\", post.newComment.trim());\n      if (post.commentImage) {\n        formData.append(\"image\", post.commentImage);\n      }\n      try {\n        const res = await fetch(\"http://localhost:8080/api/groupcomments/add\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData\n        });\n        if (res.ok) {\n          post.commentError = \"\";\n          post.newComment = \"\";\n          post.commentImage = null;\n          post.commentImagePreview = null;\n          // Clear the file input\n          const fileInput = document.querySelector(`input[type=\"file\"][data-post-id=\"${post.id}\"]`);\n          if (fileInput) {\n            fileInput.value = '';\n          }\n          this.showNotification(\"Comment added successfully\", \"success\");\n          await this.fetchComments(post);\n        } else {\n          post.commentError = \"Failed to add comment.\";\n          this.showNotification(\"Failed to add comment\", \"error\");\n        }\n      } catch (error) {\n        post.commentError = \"Error adding comment.\";\n        this.showNotification(\"Error adding comment\", \"error\");\n      }\n    },\n    onCommentImageChange(event, post) {\n      const file = event.target.files[0];\n      if (file) {\n        // Validate file size (2MB limit)\n        const maxSize = 2 * 1024 * 1024; // 2MB in bytes\n        if (file.size > maxSize) {\n          this.showNotification('Image file size must be less than 2MB', 'error');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n        post.commentImage = file;\n        // Create a preview URL\n        post.commentImagePreview = URL.createObjectURL(file);\n      } else {\n        post.commentImage = null;\n        post.commentImagePreview = null;\n      }\n    },\n    async fetchComments(post) {\n      try {\n        const res = await fetch(`http://localhost:8080/api/groupcomments?group_post_id=${post.id}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          post.comments = data.map(comment => ({\n            ...comment,\n            authorAvatar: comment.avatar ? `http://localhost:8080/uploads/${comment.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${comment.author}`,\n            created_at: comment.creation_date,\n            image: comment.image\n          }));\n        } else {\n          post.commentError = \"Failed to load comments.\";\n        }\n      } catch (error) {\n        post.commentError = \"Error loading comments.\";\n      }\n    },\n    toggleComments(post) {\n      console.log(post);\n      post.showComments = !post.showComments;\n      if (post.showComments && post.comments.length === 0) {\n        this.fetchComments(post);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString();\n    },\n    goToHome() {\n      this.$router.push('/home');\n    },\n    goToProfile() {\n      this.$router.push(`/profile/${this.user.username}`);\n    },\n    goToMyGroups() {\n      this.$router.push('/mygroups');\n    },\n    logout() {\n      fetch('http://localhost:8080/api/logout', {\n        method: 'POST',\n        credentials: 'include'\n      }).then(res => {\n        if (res.ok) {\n          this.$router.push('/login');\n        } else {\n          this.$router.push('/login');\n        }\n      }).catch(() => {\n        this.$router.push('/login');\n      });\n    },\n    disableFeatures() {\n      // Clear sensitive data if user is not a member\n      this.posts = [];\n      this.chatMessages = [];\n      this.upcomingEvents = [];\n      this.pastEvents = [];\n    },\n    async fetchPendingRequests() {\n      if (!this.group.id) return;\n      try {\n        const response = await fetch(`http://localhost:8080/api/GetInvitations?group_id=${this.group.id}`, {\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Pending requests data:\", data);\n\n          // Only include users who have requested to join (status: pending)\n          // Exclude users who were invited (status: invited)\n          this.pendingRequests = Array.isArray(data) ? data : [];\n        }\n      } catch (error) {\n        console.error(\"Error fetching pending requests:\", error);\n        this.pendingRequests = [];\n      }\n    },\n    async handleMemberRequest(userId, action) {\n      try {\n        const endpoint = action === 'accept' ? 'http://localhost:8080/api/acceptgroupmember' : 'http://localhost:8080/api/removememberfromgroup';\n        const response = await fetch(endpoint, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            user_id: userId\n          })\n        });\n        if (response.ok) {\n          await this.fetchPendingRequests();\n          this.showNotification(`Member request ${action === \"accept\" ? \"accepted\" : \"declined\"} successfully`, \"success\");\n        } else {\n          throw new Error('Failed to handle member request');\n        }\n      } catch (error) {\n        console.error('Error handling member request:', error);\n        this.showNotification(`Failed to ${action} member request`, 'error');\n      }\n    },\n    async handleInvitation(action) {\n      try {\n        const endpoint = action === 'accept' ? 'http://localhost:8080/api/acceptgroupinvite' : 'http://localhost:8080/api/declinegroupinvite';\n        const response = await fetch(endpoint, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            action: action\n          })\n        });\n        console.log(`Invitation ${action} request sent for group ID: ${this.group.id}`);\n\n        // Update UI immediately on success\n        if (action === 'accept') {\n          this.membershipStatus = 'accepted';\n          this.isMember = true;\n          this.showNotification('Successfully joined the group', 'success');\n        } else {\n          this.membershipStatus = null;\n          this.isMember = false;\n          this.showNotification('Successfully declined the invitation', 'success');\n        }\n        await this.fetchGroupDetails(this.group.id);\n        await this.fetchPosts(this.group.id);\n        await this.fetchEvents(this.group.id);\n        await this.fetchPendingRequests();\n      } catch (error) {\n        console.error(`Error ${action}ing invitation:`, error);\n        this.showNotification(`Failed to ${action} invitation. Please try again.`, 'error');\n      }\n    },\n    async fetchAllUsers() {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/allusers\", {\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const users = await response.json();\n          console.log(\"Fetched users:\", users);\n          this.allUsers = users.map(user => ({\n            fullname: user.fullname,\n            id: user.id,\n            username: user.username,\n            avatar: user.avatar ? `http://localhost:8080/uploads/${user.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            invited: false\n          }));\n          console.log(\"Processed users:\", this.allUsers);\n          // Initialize filtered users with all users\n          this.filteredUsers = [...this.allUsers];\n        }\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n        this.showNotification(\"Failed to fetch users\", \"error\");\n      }\n    },\n    async searchUsers() {\n      console.log(\"Search query:\", this.searchQuery);\n      console.log(\"All users:\", this.allUsers);\n\n      // First, get all member statuses for this group\n      try {\n        const response = await fetch(`http://localhost:8080/api/groupmembers/status?group_id=${this.group.id}`, {\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const memberStatuses = await response.json();\n          console.log(\"Member statuses:\", memberStatuses);\n\n          // Update user statuses\n          this.allUsers = this.allUsers.map(user => ({\n            ...user,\n            status: memberStatuses[user.id] || null\n          }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching member statuses:\", error);\n      }\n      if (!this.searchQuery.trim()) {\n        // Show all users\n        this.filteredUsers = [...this.allUsers];\n      } else {\n        const query = this.searchQuery.toLowerCase();\n        this.filteredUsers = this.allUsers.filter(user => user.username.toLowerCase().includes(query));\n      }\n      console.log(\"Filtered users:\", this.filteredUsers);\n    },\n    async inviteUser(user) {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/addmembertogroup\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            user_id: user.id,\n            status: \"invited\"\n          })\n        });\n        console.log(\"Invitation sent to:\", user.id, this.group.id, \"status:\", \"invited\");\n        if (response.ok) {\n          // Update the user's status immediately\n          user.status = 'invited';\n          this.invitedUsers.add(user.id);\n          this.showNotification(`Invitation sent to ${user.username}`, \"success\");\n\n          // Create notification for the invited user\n          try {\n            await fetch(\"http://localhost:8080/api/notifications\", {\n              method: \"POST\",\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user_id: user.id,\n                type: \"group_invite\",\n                content: `You have been invited to join ${this.group.title}`\n              })\n            });\n          } catch (notifError) {\n            console.error(\"Error creating notification:\", notifError);\n            // Don't show error to user since invitation was successful\n          }\n        } else {\n          const errorText = await response.text();\n          console.error(\"Failed to send invitation:\", errorText);\n          this.showNotification(\"Failed to send invitation\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error inviting user:\", error);\n        this.showNotification(\"Failed to send invitation\", \"error\");\n      }\n    },\n    async fetchGroupMembers() {\n      try {\n        const response = await fetch(`http://localhost:8080/api/groupmembers?group_id=${this.group.id}`, {\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const members = await response.json();\n          console.log(\"Fetched group members:\", members);\n          this.groupMembers = members;\n        }\n      } catch (error) {\n        console.error(\"Error fetching group members:\", error);\n      }\n    },\n    async openInviteModal() {\n      this.showInviteMembersModal = true;\n      await this.fetchAllUsers();\n      await this.fetchGroupMembers();\n      this.searchUsers(); // Initialize the filtered users list\n    },\n    formatMessageTime(date) {\n      const now = new Date();\n      const messageDate = new Date(date);\n      const diffInHours = Math.abs(now - messageDate) / 36e5;\n      if (diffInHours < 24) {\n        // Today - show time only\n        return messageDate.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } else if (diffInHours < 48) {\n        // Yesterday\n        return 'Yesterday ' + messageDate.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } else {\n        // Show date and time\n        return messageDate.toLocaleDateString([], {\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      }\n    },\n    setupNotificationWebSocket() {\n      // Register handler for real-time notifications\n      notificationWebSocket.onNotification('group-page', notification => {\n        console.log('Received real-time notification:', notification);\n\n        // Refresh notifications and count from server to ensure accuracy\n        this.fetchNotifications();\n      });\n    }\n  },\n  mounted() {\n    // Set up notification WebSocket\n    this.setupNotificationWebSocket();\n    this.fetchGroupDetails(this.$route.params.id);\n    this.fetchPosts(this.$route.params.id);\n    this.fetchNotifications();\n    document.addEventListener('click', this.handleNotifClose);\n    this.scrollToBottom(); // Add this line\n  },\n  beforeUnmount() {\n    // Clean up notification WebSocket\n    notificationWebSocket.removeNotificationHandler('group-page');\n    document.removeEventListener('click', this.handleNotifClose);\n    if (this.socket) {\n      this.socket.close();\n    }\n  },\n  computed: {\n    unreadNotificationCount() {\n      return this.notifications.filter(notif => !notif.is_read).length;\n    }\n  },\n  watch: {\n    chatMessages: {\n      handler() {\n        this.scrollToBottom();\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["notificationWebSocket","props","name","data","isLoading","user","id","username","group","title","description","is_owner","isMember","isAdmin","membershipStatus","posts","chatMessages","newPost","content","image","newMessage","socket","showEventModal","showMemberRequestsModal","pendingRequests","newEvent","date","location","upcomingEvents","pastEvents","notification","visible","message","type","notifications","showInviteMembersModal","searchQuery","filteredUsers","allUsers","invitedUsers","Set","groupMembers","showNotifications","beforeRouteEnter","to","from","next","fetch","method","credentials","then","res","ok","userData","json","vm","Username","catch","created","console","log","groupId","$route","params","checkMembership","fetchGroupDetails","fetchEvents","fetchPosts","fetchNotifications","fetchPendingRequests","initializeWebSocket","scrollToBottom","methods","$nextTick","chatContainer","document","querySelector","scrollTop","scrollHeight","response","error","handleNotifClick","forEach","notif","is_read","markNotificationAsRead","handleNotifClose","e","popup","$refs","notifPopup","btn","notifBtn","contains","target","Array","isArray","map","sender","sender_username","text","time","Date","toISOString","unreadNotificationCount","filter","n","length","notificationId","find","setTimeout","headers","body","JSON","stringify","is_member","status","is_admin","disableFeatures","WebSocket","onopen","onmessage","event","parse","msg","authorAvatar","avatar","created_at","sort","a","b","showNotification","push","onerror","onclose","sendMessage","readyState","OPEN","trim","send","group_id","handleImageUpload","file","files","allowedTypes","includes","value","maxSize","size","reader","FileReader","onload","result","readAsDataURL","leaveGroup","userRes","user_id","$router","errorText","goBack","formatTimestamp","timestamp","toLocaleString","validateEventDate","eventDate","now","maxDate","setFullYear","getFullYear","valid","createEvent","dateValidation","Error","respondToEvent","eventId","eventToUpdate","going_count","not_going_count","user_response","events","normalizedEvents","event_datetime","eventDateTime","post","author","creation_date","comments","showComments","newComment","commentError","commentImage","createPost","fileInput","alert","addComment","formData","FormData","append","commentImagePreview","fetchComments","onCommentImageChange","URL","createObjectURL","comment","toggleComments","formatDate","goToHome","goToProfile","goToMyGroups","logout","handleMemberRequest","userId","action","endpoint","handleInvitation","fetchAllUsers","users","fullname","invited","searchUsers","memberStatuses","query","toLowerCase","inviteUser","add","notifError","fetchGroupMembers","members","openInviteModal","formatMessageTime","messageDate","diffInHours","Math","abs","toLocaleTimeString","hour","minute","toLocaleDateString","month","day","setupNotificationWebSocket","onNotification","mounted","addEventListener","beforeUnmount","removeNotificationHandler","removeEventListener","close","computed","watch","handler","deep"],"sources":["/Users/apple/Desktop/social-1/social-network/frontend/src/components/GroupPage.vue"],"sourcesContent":["<template>\n  <div class=\"group-layout\">\n    <!-- Notifications -->\n    <!-- Add notification component at the top level -->\n    <div v-if=\"notification.visible\" :class=\"['notification', `notification-${notification.type}`]\">\n      {{ notification.message }}\n    </div>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\">\n      <div class=\"sidebar-icons\">\n        <!-- Home Icon -->\n        <div class=\"sidebar-icon\" title=\"Home\" @click=\"goToHome\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 12L12 3l9 9\" />\n            <path d=\"M9 21V9h6v12\" />\n          </svg>\n        </div>\n        <!-- Profile Icon -->\n        <div class=\"sidebar-icon\" title=\"Profile\" @click=\"goToProfile\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"8\" r=\"4\" />\n            <path d=\"M4 21v-2a4 4 0 014-4h8a4 4 0 014 4v2\" />\n          </svg>\n        </div>\n        <!-- Groups Icon -->\n        <div class=\"sidebar-icon active\" title=\"Groups\" @click=\"goToMyGroups\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\" />\n            <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            <path d=\"M23 21v-2a4 4 0 00-3-3.87\" />\n            <path d=\"M16 3.13a4 4 0 010 7.75\" />\n          </svg>\n        </div>\n        <!-- Settings Icon -->\n        <div class=\"sidebar-icon\" title=\"Settings\" @click=\"$router.push('/settings')\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\n            <path\n              d=\"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 01-2.83 2.83l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-4 0v-.09a1.65 1.65 0 00-1-1.51 1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 010-4h.09a1.65 1.65 0 001.51-1 1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 012.83-2.83l.06.06a1.65 1.65 0 001.82.33h.09A1.65 1.65 0 008.91 3H9a2 2 0 014 0v.09a1.65 1.65 0 001 1.51h.09a1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 2.83l-.06.06a1.65 1.65 0 00-.33 1.82v.09a1.65 1.65 0 001.51 1H21a2 2 0 010 4h-.09a1.65 1.65 0 00-1.51 1z\" />\n          </svg>\n        </div>\n        <div class=\"sidebar-icon\" ref=\"notifBtn\" title=\"Notifications\" @click=\"handleNotifClick\">\n          <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M18 8a6 6 0 10-12 0c0 7-3 9-3 9h18s-3-2-3-9\" />\n            <path d=\"M13.73 21a2 2 0 01-3.46 0\" />\n          </svg>\n          <span v-if=\"unreadNotificationCount > 0\" class=\"notif-badge\">{{ unreadNotificationCount }}</span>\n        </div>\n        <!-- Notification Popup -->\n        <div v-if=\"showNotifications\" ref=\"notifPopup\" class=\"notif-popup\">\n          <div class=\"notif-popup-header\">Notifications</div>\n          <ul class=\"notif-list\">\n            <li v-if=\"!notifications || notifications.length === 0\" class=\"notif-item empty\">\n              No notifications yet.\n            </li>\n            <li v-for=\"notif in notifications || []\" :key=\"notif.time + notif.sender\" class=\"notif-item\"\n              :class=\"{ unread: !notif.is_read }\" @click=\"markNotificationAsRead(notif.id)\">\n              <span class=\"notif-text\">\n                <b>{{ notif.sender }}</b>\n                <span v-if=\"notif.type === 'message'\">sent you a message:\n                  {{\n                    notif.text && notif.text.length > 40\n                      ? notif.text.slice(0, 40) + \"…\"\n                      : notif.text\n                  }}</span>\n                <span v-else>{{ notif.text }}</span>\n              </span>\n              <span class=\"notif-time\">{{ formatTimestamp(notif.time) }}</span>\n            </li>\n          </ul>\n        </div>\n        <!-- Logout Icon -->\n        <div class=\"sidebar-icon\" title=\"Logout\" @click=\"logout\">\n          <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 16l4-4m0 0l-4-4m4 4H7\" />\n            <path d=\"M9 21H5a2 2 0 01-2-2V5a2 2 0 012-2h4\" />\n          </svg>\n        </div>\n      </div>\n    </aside>\n    <!-- Main Content -->\n    <div class=\"group-main-content\">\n      <div class=\"group-container\">\n        <!-- Group Header -->\n        <header class=\"group-header\">\n          <div class=\"group-info\">\n            <h2>{{ group.title }}</h2>\n            <p>{{ group.description }}</p>\n            <div v-if=\"\n              !isMember &&\n              membershipStatus !== 'pending' &&\n              membershipStatus !== 'invited'\n            \" class=\"membership-status not-member\">\n              You are not a member of this group\n            </div>\n            <div v-else-if=\"membershipStatus === 'pending'\" class=\"membership-status pending\">\n              Your membership is pending approval\n            </div>\n            <div v-else-if=\"membershipStatus === 'invited'\" class=\"membership-status invited\">\n              You have been invited to this group\n              <div class=\"invitation-actions\">\n                <button class=\"accept-btn\" @click=\"handleInvitation('accept')\">\n                  Accept Invitation\n                </button>\n                <button class=\"decline-btn\" @click=\"handleInvitation('decline')\">\n                  Decline Invitation\n                </button>\n              </div>\n            </div>\n            <div v-else class=\"membership-status accepted\">\n              <span v-if=\"group.is_owner\">You are the owner of this group</span>\n              <span v-else>You are a member of this group</span>\n            </div>\n          </div>\n          <div class=\"group-actions\">\n            <button class=\"back-btn\" @click=\"goBack\">Back to Forum</button>\n            <button v-if=\"group.is_owner\" class=\"member-requests-btn\" @click=\"showMemberRequestsModal = true\">\n              Member Requests\n              <span v-if=\"pendingRequests.length > 0\" class=\"badge\">{{\n                pendingRequests.length\n              }}</span>\n            </button>\n            <button v-if=\"membershipStatus === 'accepted'\" class=\"invite-btn\" @click=\"openInviteModal\">\n              Invite Members\n            </button>\n            <button v-if=\"membershipStatus === 'accepted'\" class=\"event-btn\" @click=\"showEventModal = true\">\n              Create Event\n            </button>\n            <button v-if=\"!group.is_owner && membershipStatus === 'accepted'\" class=\"leave-btn\" @click=\"leaveGroup\">\n              Leave Group\n            </button>\n          </div>\n        </header>\n\n        <!-- Show content only if user is an accepted member -->\n        <div v-if=\"membershipStatus === 'accepted'\" class=\"group-content\">\n          <!-- Create Post Section -->\n          <div class=\"create-post-section\">\n            <h3>Create a Post</h3>\n            <form @submit.prevent=\"createPost\">\n              <input v-model=\"newPost.title\" type=\"text\" placeholder=\"Post title\" required />\n              <textarea v-model=\"newPost.content\" placeholder=\"What's on your mind?\" required></textarea>\n              <label class=\"file-upload-label\">\n                <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                  <path d=\"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\" />\n                  <polyline points=\"17 8 12 3 7 8\" />\n                  <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\" />\n                </svg>\n                Upload Image\n                <input type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\" />\n              </label>\n              <img v-if=\"image\" :src=\"image\" class=\"image-preview\" alt=\"Preview\" />\n              <button type=\"submit\">Post</button>\n            </form>\n          </div>\n\n          <!-- Posts Section -->\n          <div class=\"posts-section\">\n            <h3>Group Posts</h3>\n            <div v-if=\"posts.length === 0\" class=\"no-posts\">\n              No posts yet. Be the first to post!\n            </div>\n            <div v-else class=\"post-card\" v-for=\"post in posts\" :key=\"post.id\">\n              <div class=\"post-header\">\n                <img :src=\"post.authorAvatar\" alt=\"Author\" class=\"post-author-pic\" />\n                <div>\n                  <h4>{{ post.author }}</h4>\n                  <p class=\"post-timestamp\">\n                    {{ formatTimestamp(post.created_at) }}\n                  </p>\n                </div>\n              </div>\n              <h3 class=\"post-title\">{{ post.title }}</h3>\n              <p class=\"post-content\">{{ post.content }}</p>\n              <div v-if=\"post.image\" class=\"post-image\">\n                <img :src=\"post.image\" alt=\"Post Image\" id=\"groupostimage\" />\n              </div>\n              <div class=\"post-actions\">\n                <button @click=\"toggleComments(post)\">\n                  {{ post.showComments ? \"Hide Comments\" : \"Show Comments\" }}\n                </button>\n              </div>\n              <div v-if=\"post.showComments\" class=\"comments-section\">\n                <div v-if=\"post.comments.length === 0\" class=\"no-comments\">\n                  No comments yet\n                </div>\n                <div v-else class=\"comment\" v-for=\"comment in post.comments\" :key=\"comment.id\">\n                  <div class=\"comment-header\">\n                    <img :src=\"comment.authorAvatar\" alt=\"Comment Author\" class=\"comment-author-pic\" />\n                    <div>\n                      <h5>{{ comment.author }}</h5>\n                      <p class=\"comment-timestamp\">\n                        {{ formatTimestamp(comment.created_at) }}\n                      </p>\n                    </div>\n                  </div>\n                  <p class=\"comment-content\">{{ comment.content }}</p>\n                  <div v-if=\"comment.image\" class=\"comment-image\">\n                    <img :src=\"`http://localhost:8080/uploads/${comment.image}`\" alt=\"Comment Image\" style=\"\n                        max-width: 200px;\n                        max-height: 200px;\n                        margin-top: 8px;\n                      \" />\n                  </div>\n                </div>\n                <form @submit.prevent=\"addComment(post)\" class=\"comment-form\" enctype=\"multipart/form-data\">\n                  <textarea v-model=\"post.newComment\" placeholder=\"Add a comment...\" required></textarea>\n                  <label class=\"file-upload-label\">\n                    <svg width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\n                      stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                      <path d=\"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\" />\n                      <polyline points=\"17 8 12 3 7 8\" />\n                      <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\" />\n                    </svg>\n                    <input type=\"file\" accept=\"image/*\" @change=\"onCommentImageChange($event, post)\" />\n                  </label>\n                  <img v-if=\"post.commentImagePreview\" :src=\"post.commentImagePreview\" class=\"image-preview\"\n                    alt=\"Preview\" />\n                  <button type=\"submit\">Comment</button>\n                </form>\n              </div>\n            </div>\n          </div>\n          <!-- Group Chat Section -->\n          <div class=\"group-chat-section\">\n            <h3>Group Chat</h3>\n            <div class=\"chat-messages\">\n              <div v-if=\"chatMessages.length === 0\" class=\"no-messages\">\n                No messages yet\n              </div>\n              <div v-else class=\"message\" v-for=\"msg in chatMessages\" :key=\"msg.id\">\n                <img :src=\"msg.authorAvatar\" alt=\"Author\" class=\"message-author-pic\" />\n                <div class=\"message-header\">\n                  <div class=\"message-meta\">\n                    <span class=\"message-author\">{{ msg.username }}</span>\n                    <span class=\"message-time\">{{\n                      formatMessageTime(msg.created_at)\n                    }}</span>\n                  </div>\n                  <p class=\"message-content\">{{ msg.content }}</p>\n                </div>\n              </div>\n            </div>\n            <form @submit.prevent=\"sendMessage\" class=\"chat-input\">\n              <input v-model=\"newMessage\" type=\"text\" placeholder=\"Type a message...\" required />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        </div>\n\n        <!-- Show message if user is not a member -->\n        <div v-else class=\"non-member-content\">\n          <div class=\"non-member-message\">\n            <h3 v-if=\"membershipStatus === 'pending'\">Your membership request is pending approval</h3>\n            <h3 v-else>Join this group to see its content</h3>\n            <p v-if=\"membershipStatus === 'pending'\">Please wait for an admin to approve your request.</p>\n            <p v-else>This is a private group. You need to be a member to see posts, events, and participate in\n              discussions.</p>\n          </div>\n        </div>\n\n        <!-- Event Modal -->\n        <div v-if=\"showEventModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>Group Events</h3>\n              <button class=\"close-btn\" @click=\"showEventModal = false\">\n                &times;\n              </button>\n            </div>\n\n            <!-- Create Event Form -->\n            <div class=\"create-event-form\">\n              <h4>Create New Event</h4>\n              <form @submit.prevent=\"createEvent\">\n                <div class=\"form-group\">\n                  <label>Event Title</label>\n                  <input v-model=\"newEvent.title\" type=\"text\" required placeholder=\"Enter event title\" />\n                </div>\n                <div class=\"form-group\">\n                  <label>Date and Time</label>\n                  <input v-model=\"newEvent.date\" type=\"datetime-local\" required />\n                </div>\n                <div class=\"form-group\">\n                  <label>Description</label>\n                  <textarea v-model=\"newEvent.description\" required placeholder=\"Enter event description\"></textarea>\n                </div>\n                <div class=\"form-group\">\n                  <label>Location</label>\n                  <input v-model=\"newEvent.location\" type=\"text\" required placeholder=\"Enter event location\" />\n                </div>\n                <button type=\"submit\" class=\"submit-btn\">Create Event</button>\n              </form>\n            </div>\n\n            <!-- Events Lists -->\n\n            <div class=\"events-container\">\n              <!-- Upcoming Events -->\n              <div class=\"events-section\">\n                <h4>Upcoming Events</h4>\n                <div v-if=\"upcomingEvents.length === 0\" class=\"no-events\">\n                  No upcoming events\n                </div>\n                <div v-else class=\"event-list\">\n                  <div v-for=\"event in upcomingEvents\" :key=\"event.id\" class=\"event-item\">\n                    <div class=\"event-info\">\n                      <h5>{{ event.title }}</h5>\n                      <p class=\"event-date\">📅 {{ formatDate(event.date) }}</p>\n                      <p class=\"event-location\">📍 {{ event.location }}</p>\n                      <p class=\"event-description\">{{ event.description }}</p>\n                      <div class=\"event-response-stats\">\n                        <span class=\"response-stat going\">\n                          <span class=\"response-icon\">👥</span>\n                          <span class=\"response-count\">{{\n                            event.going_count || 0\n                          }}</span>\n                          <span class=\"response-label\">Going</span>\n                        </span>\n                        <span class=\"response-stat not-going\">\n                          <span class=\"response-icon\">✕</span>\n                          <span class=\"response-count\">{{\n                            event.not_going_count || 0\n                          }}</span>\n                          <span class=\"response-label\">Not Going</span>\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"event-actions\">\n                      <button v-if=\"isMember\" @click=\"respondToEvent(event.id, 1)\" :class=\"{\n                        'response-btn': true,\n                        going: event.user_response === 1,\n                        active: event.user_response === 1,\n                      }\" :disabled=\"event.user_response === 1\">\n                        <span class=\"btn-icon\">{{\n                          event.user_response === 1 ? \"✓\" : \"👤\"\n                        }}</span>\n                        {{\n                          event.user_response === 1 ? \"You're Going\" : \"Going\"\n                        }}\n                      </button>\n                      <button v-if=\"isMember\" @click=\"respondToEvent(event.id, -1)\" :class=\"{\n                        'response-btn': true,\n                        'not-going': event.user_response === -1,\n                        active: event.user_response === -1,\n                      }\" :disabled=\"event.user_response === -1\">\n                        <span class=\"btn-icon\">{{\n                          event.user_response === -1 ? \"✓\" : \"✕\"\n                        }}</span>\n                        {{\n                          event.user_response === -1 ? \"Not Going\" : \"Not Going\"\n                        }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- Past Events -->\n              <div class=\"events-section\">\n                <h4>Past Events</h4>\n                <div v-if=\"pastEvents.length === 0\" class=\"no-events\">\n                  No past events\n                </div>\n                <div v-else class=\"event-list\">\n                  <div v-for=\"event in pastEvents\" :key=\"event.id\" class=\"event-item past\">\n                    <div class=\"event-info\">\n                      <h5>{{ event.title }}</h5>\n                      <p class=\"event-date\">📅 {{ formatDate(event.date) }}</p>\n                      <p class=\"event-location\">📍 {{ event.location }}</p>\n                      <p class=\"event-description\">{{ event.description }}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Member Requests Modal -->\n        <div v-if=\"showMemberRequestsModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>Member Requests</h3>\n              <button class=\"close-btn\" @click=\"showMemberRequestsModal = false\">\n                &times;\n              </button>\n            </div>\n            <div class=\"member-requests-container\">\n              <div v-if=\"pendingRequests.length === 0\" class=\"no-requests\">\n                No pending member requests\n              </div>\n              <div v-else class=\"requests-list\">\n                <div v-for=\"request in pendingRequests\" :key=\"request.id\" class=\"request-item\">\n                  <div class=\"request-info\">\n                    <img :src=\"`https://api.dicebear.com/7.x/avataaars/svg?seed=${request.username}`\" alt=\"User Avatar\"\n                      class=\"request-avatar\" />\n                    <div class=\"request-details\">\n                      <h4>{{ request.full_name }}</h4>\n                      <p>{{ request.email }}</p>\n                    </div>\n                  </div>\n                  <div class=\"request-actions\">\n                    <button class=\"accept-btn\" @click=\"handleMemberRequest(request.id, 'accept')\">\n                      Accept\n                    </button>\n                    <button class=\"decline-btn\" @click=\"handleMemberRequest(request.id, 'decline')\">\n                      Decline\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Invite Members Modal -->\n        <div v-if=\"showInviteMembersModal\" class=\"modal-overlay\">\n          <div class=\"modal-content invite-members-modal\">\n            <h3>Invite Members</h3>\n            <div class=\"search-box\">\n              <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search users...\" @input=\"searchUsers\" />\n            </div>\n            <div class=\"users-list\">\n              <div v-if=\"!filteredUsers || filteredUsers.length === 0\" class=\"no-users\">\n                {{\n                  searchQuery\n                    ? \"No users found matching your search\"\n                    : \"No users available to invite\"\n                }}\n              </div>\n              <div v-else class=\"users-list-container\">\n                <div v-for=\"user in filteredUsers\" :key=\"user.id\" class=\"user-item\">\n                  <div class=\"user-info\">\n                    <img :src=\"user.avatar\" :alt=\"user.username\" class=\"user-avatar\" />\n                    <span class=\"user-name\">{{ user.fullname }}</span>\n                  </div>\n                  <button class=\"invite-user-btn\" :disabled=\"user.status === 'invited' ||\n                    user.status === 'pending' ||\n                    user.status === 'accepted'\n                    \" @click=\"inviteUser(user)\">\n                    {{\n                      user.status === \"invited\"\n                        ? \"Invited\"\n                        : user.status === \"pending\"\n                          ? \"Request Pending\"\n                          : user.status === \"accepted\"\n                            ? \"Member\"\n                            : \"Invite\"\n                    }}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"modal-buttons\">\n              <button class=\"close-btn\" @click=\"showInviteMembersModal = false\">Close</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { notificationWebSocket } from '../services/notificationWebSocket.js';\n\nexport default {\n  props: [\"showNotifications\"],\n  name: \"GroupPage\",\n  data() {\n    return {\n      isLoading: true,\n      user: {\n        id: \"\",\n        username: \"\",\n      },\n      group: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        is_owner: false,\n      },\n      isMember: false,\n      isAdmin: false,\n      membershipStatus: \"not_member\",\n      posts: [],\n      chatMessages: [],\n      newPost: {\n        title: \"\",\n        content: \"\",\n        image: \"\",\n      },\n      newMessage: \"\",\n      socket: null,\n      showEventModal: false,\n      showMemberRequestsModal: false,\n      pendingRequests: [],\n      newEvent: {\n        title: \"\",\n        date: \"\",\n        description: \"\",\n        location: \"\",\n      },\n      upcomingEvents: [],\n      pastEvents: [],\n      notification: {\n        visible: false,\n        message: \"\",\n        type: \"success\",\n      },\n      image: \"\",\n      notifications: [],\n      showInviteMembersModal: false,\n      searchQuery: \"\",\n      filteredUsers: [],\n      allUsers: [],\n      invitedUsers: new Set(),\n      groupMembers: [],\n      showNotifications: false,\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    fetch(\"http://localhost:8080/api/info\", {\n      method: \"GET\",\n      credentials: \"include\",\n    })\n      .then(async res => {\n        if (res.ok) {\n          const userData = await res.json();\n          next(vm => {\n            vm.user.username = userData.Username;\n          });\n        } else {\n          next('/login');\n        }\n      })\n      .catch(() => {\n        next('/login');\n      });\n  },\n  async created() {\n    console.log(\"GroupPage component created\");\n    const groupId = this.$route.params.id;\n    console.log(\"Group ID:\", groupId);\n    await this.checkMembership(groupId);\n    await this.fetchGroupDetails(groupId);\n    await this.fetchEvents(this.$route.params.id);\n    await this.fetchPosts(groupId);\n    await this.fetchNotifications();\n    if (this.group.is_owner) {\n      await this.fetchPendingRequests();\n    }\n    this.initializeWebSocket(groupId);\n    this.scrollToBottom(); // Add this line\n  },\n  methods: {\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatContainer = document.querySelector('.chat-messages');\n        if (chatContainer) {\n          chatContainer.scrollTop = chatContainer.scrollHeight;\n        }\n      });\n    },\n    async fetchGroupDetails(groupId) {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/api/getgroups?id=${groupId}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n        if (response.ok) {\n          const data = await response.json();\n          for (const group of data) {\n            if (group.id === groupId) {\n              this.group = group;\n              break;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching group details:\", error);\n      }\n    },\n    handleNotifClick() {\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        //mark ga3 notif bli read\n        this.notifications.forEach(notif => {\n          if (!notif.is_read) {\n            this.markNotificationAsRead(notif.id);\n          }\n        });\n      }\n    },\n    handleNotifClose(e) {\n      if (!this.showNotifications) return;\n      const popup = this.$refs.notifPopup;\n      const btn = this.$refs.notifBtn;\n      if (\n        (!popup || !btn) ||\n        (!popup.contains(e.target) && !btn.contains(e.target))\n      ) {\n        this.showNotifications = false;\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const res = await fetch(\"http://localhost:8080/api/notifications\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"sassasaassa\", data);\n\n          this.notifications = Array.isArray(data)\n            ? data.map((notif) => ({\n              id: notif.id,\n              sender: notif.sender_username || \"Unknown\",\n              text: notif.content || \"\",\n              time: notif.time || new Date().toISOString(),\n              type: notif.type || \"notification\",\n              is_read: notif.is_read || false,\n            }))\n            : [];\n\n          this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n        } else {\n          this.notifications = [];\n        }\n      } catch (e) {\n        console.error('Error fetching notifications:', e);\n        this.notifications = [];\n      }\n    },\n    async markNotificationAsRead(notificationId) {\n      try {\n        const notification = this.notifications.find(n => n.id === notificationId);\n        if (!notification) return;\n\n        // Set a timeout to mark as read after 2 seconds\n        setTimeout(async () => {\n          try {\n            const res = await fetch(`http://localhost:8080/api/markasread`, {\n              method: 'POST',\n              credentials: 'include',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                notificationId,\n                is_read: 1\n              })\n            });\n            if (res.ok) {\n              notification.is_read = true;\n            }\n          } catch (error) {\n            console.error('Error marking notification as read:', error);\n          }\n        }, 2000);\n      } catch (error) {\n        console.error('Error marking notification as read:', error);\n      }\n    },\n    async checkMembership(groupId) {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/api/checkmem?group_id=${groupId}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Membership data:\", data);\n\n          this.isMember = data.is_member;\n          this.membershipStatus = data.status || \"not_member\";\n          this.isAdmin = data.is_admin || false;\n          this.group.is_owner = data.is_owner || false;\n\n          // If user is not a member or pending, disable features\n          if (!this.isMember || this.membershipStatus === 'pending') {\n            this.disableFeatures();\n          }\n        }\n      } catch (error) {\n        console.error(\"Error checking membership:\", error);\n      }\n    },\n    initializeWebSocket(groupId) {\n      this.socket = new WebSocket(\n        `ws://localhost:8080/ws/group/${groupId}`\n      );\n\n      this.socket.onopen = () => {\n        console.log('WebSocket connected to group chat');\n      };\n\n      this.socket.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n\n          // Handle initial messages array\n          if (Array.isArray(data)) {\n            this.chatMessages = data\n              .map(msg => ({\n                ...msg,\n                authorAvatar: msg.avatar ? `http://localhost:8080/uploads/${msg.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${msg.username}`,\n                created_at: new Date(msg.created_at)\n              }))\n              .sort((a, b) => a.created_at - b.created_at);\n            return;\n          }\n\n          if (data && data.error) {\n            console.error('WebSocket error:', data.error);\n            this.showNotification(data.error, 'error');\n            return;\n          }\n\n          if (data && data.username && data.content) {\n            this.chatMessages.push({\n              ...data,\n              authorAvatar: data.avatar ? `http://localhost:8080/uploads/${data.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${data.username}`,\n              created_at: new Date(data.created_at)\n            });\n\n            this.chatMessages.sort((a, b) => a.created_at - b.created_at);\n\n            this.$nextTick(() => {\n              const chatContainer = document.querySelector('.chat-messages');\n              if (chatContainer) {\n                chatContainer.scrollTop = chatContainer.scrollHeight;\n              }\n            });\n          }\n        } catch (error) {\n          console.error('Error processing WebSocket message:', error);\n          this.showNotification('Error processing message', 'error');\n        }\n      };\n\n      this.socket.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        this.showNotification('Error connecting to group chat', 'error');\n      };\n\n      this.socket.onclose = () => {\n        console.log('WebSocket disconnected from group chat');\n      };\n    },\n    async sendMessage() {\n      if (this.socket && this.socket.readyState === WebSocket.OPEN && this.newMessage.trim()) {\n        try {\n          this.socket.send(\n            JSON.stringify({\n              content: this.newMessage.trim(),\n              group_id: this.group.id\n            })\n          );\n          this.newMessage = \"\";\n        } catch (error) {\n          console.error('Error sending message:', error);\n          this.showNotification('Failed to send message', 'error');\n        }\n      } else {\n        this.showNotification('Cannot send message - chat disconnected', 'error');\n      }\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n      if (!allowedTypes.includes(file.type)) {\n          this.showNotification('Only JPEG, PNG, and GIF images are allowed', 'error');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n        // Validate file size (2MB limit)\n        const maxSize = 2 * 1024 * 1024; // 2MB in bytes\n        if (file.size > maxSize) {\n          this.showNotification('Image file size must be less than 2MB', 'error');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.image = e.target.result; // base64 string\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async leaveGroup() {\n      try {\n        const userRes = await fetch(\"http://localhost:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n\n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n\n        const userData = await userRes.json();\n\n        const response = await fetch(\n          \"http://localhost:8080/api/removememberfromgroup\",\n          {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              group_id: this.group.id,\n              user_id: userData.id, // Use the user ID from the API response\n            }),\n          },\n        );\n        if (response.ok) {\n          this.showNotification(\"Successfully left the group\", \"success\");\n          this.$router.push(\"/home\");\n        } else {\n          const errorText = await response.text();\n          console.error(\"Failed to leave group:\", errorText);\n          this.showNotification(\"Failed to leave group\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error leaving group:\", error);\n        this.showNotification(\"Error leaving group\", \"error\");\n      }\n    },\n    goBack() {\n      this.$router.push(\"/home\");\n    },\n    formatTimestamp(timestamp) {\n      return new Date(timestamp).toLocaleString();\n    },\n    validateEventDate(date) {\n      const eventDate = new Date(date);\n      const now = new Date();\n      const maxDate = new Date();\n      maxDate.setFullYear(now.getFullYear() + 2); // Allow events up to 2 years in the future\n\n      // Check if date is in the past\n      if (eventDate < now) {\n        return { valid: false, message: \"Event date cannot be in the past\" };\n      }\n\n      // Check if date is too far in the future\n      if (eventDate > maxDate) {\n        return { valid: false, message: \"Event date cannot be more than 2 years in the future\" };\n      }\n\n      return { valid: true };\n    },\n    async createEvent() {\n      try {\n        // Validate event date\n        const dateValidation = this.validateEventDate(this.newEvent.date);\n        if (!dateValidation.valid) {\n          this.showNotification(dateValidation.message, \"error\");\n          return;\n        }\n\n        const response = await fetch(\n          `http://localhost:8080/api/events/add?group_id=${this.$route.params.id}`,\n          {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              group_id: this.group.id,\n              ...this.newEvent,\n            }),\n          }\n        );\n\n        if (response.ok) {\n          this.showNotification(\"Event created successfully!\", \"success\");\n          this.newEvent = {\n            title: \"\",\n            date: \"\",\n            description: \"\",\n            location: \"\",\n          };\n          await this.fetchEvents(this.$route.params.id);\n          this.showEventModal = false;\n        } else {\n          throw new Error(\"Failed to create event\");\n        }\n      } catch (error) {\n        console.error(\"Error creating event:\", error);\n        this.showNotification(\"Failed to create event\", \"error\");\n      }\n    },\n\n    async respondToEvent(eventId, response) {\n      try {\n        const res = await fetch(\n          `http://localhost:8080/api/events/join?event_id=${eventId}&response=${response}`,\n          {\n            method: \"POST\",\n            credentials: \"include\",\n          }\n        );\n\n        if (!res.ok) {\n          throw new Error(\"Failed to update response\");\n        }\n\n        const data = await res.json();\n\n        // Update the event in the list with new counts\n        const eventToUpdate = this.upcomingEvents.find(e => e.id === eventId);\n        if (eventToUpdate) {\n          eventToUpdate.going_count = data.going_count;\n          eventToUpdate.not_going_count = data.not_going_count;\n          eventToUpdate.user_response = response;\n        }\n\n        const message = response === 1 ? \"You're going to the event!\" : \"You've marked as not going\";\n        this.showNotification(message, \"success\");\n      } catch (error) {\n        console.error(\"Error responding to event:\", error);\n        this.showNotification(\"Failed to update response\", \"error\");\n      }\n    },\n\n    showNotification(message, type = 'success') {\n      this.notification = {\n        visible: true,\n        message,\n        type,\n      };\n      setTimeout(() => {\n        this.notification.visible = false;\n      }, 3000);\n    },\n    async fetchEvents(group_id) {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/api/events?id=${group_id}`,\n          {\n            credentials: \"include\",\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(errorText);\n        }\n\n        const events = await response.json();\n        const now = new Date();\n\n        if (events) {\n          const normalizedEvents = events.map((event) => ({\n            ...event,\n            date: event.date || event.event_datetime || event.eventDateTime,\n            going_count: event.going_count || 0,\n            not_going_count: event.not_going_count || 0,\n            user_response: event.response || null\n          }));\n\n          this.upcomingEvents = normalizedEvents\n            .filter((event) => new Date(event.date) > now)\n            .sort((a, b) => new Date(a.date) - new Date(b.date));\n\n          this.pastEvents = normalizedEvents\n            .filter((event) => new Date(event.date) <= now)\n            .sort((a, b) => new Date(b.date) - new Date(a.date));\n\n          console.log(\"Fetched events with response counts:\", this.upcomingEvents);\n        }\n      } catch (error) {\n        console.error(\"Error fetching events:\", error);\n        this.showNotification(error.message || \"Error fetching events\", \"error\");\n        this.upcomingEvents = [];\n        this.pastEvents = [];\n      }\n    },\n\n    async fetchPosts(group_id) {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/api/groupposts?group_id=${group_id}`,\n          {\n            credentials: \"include\",\n          }\n        );\n\n        if (response.ok) {\n          const posts = await response.json();\n          console.log(\"Fetched posts:\", posts);\n          \n          if (posts) {\n            this.posts = posts.map((post) => ({\n              ...post,\n              id: post.id,\n              author: post.author,\n              authorAvatar: post.avatar ? `http://localhost:8080/uploads/${post.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${post.author}`,\n              image: post.image ? post.image : null,\n              created_at: post.creation_date,\n              comments: [],\n              showComments: false,\n              newComment: \"\",\n              commentError: \"\",\n              commentImage: null,\n            }));\n          }\n        } else {\n          console.error(\"Failed to fetch posts\");\n          this.showNotification(\"Failed to fetch posts\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        this.showNotification(\"Error fetching posts\", \"error\");\n      }\n    },\n\n    async createPost() {\n      const groupId = this.$route.params.id;\n\n      try {\n        const response = await fetch(`http://localhost:8080/api/groupposts/add?group_id=${groupId}`, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            title: this.newPost.title,\n            content: this.newPost.content,\n            image: this.image,\n          }),\n        });\n\n        if (response.ok) {\n          this.newPost = { title: \"\", content: \"\", image: \"\" };\n          this.image = \"\";\n          // Clear the file input\n          const fileInput = document.querySelector('input[type=\"file\"]');\n          if (fileInput) {\n            fileInput.value = '';\n          }\n          await this.fetchPosts(groupId);\n        } else {\n          const errorText = await response.text();\n          console.error(\"Post failed:\", errorText);\n        }\n      } catch (error) {\n        console.error(\"Error creating post:\", error);\n      }\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // Validate file size (2MB limit)\n        const maxSize = 2 * 1024 * 1024; // 2MB in bytes\n        if (file.size > maxSize) {\n          alert('Image file size must be less than 2MB');\n          event.target.value = ''; // Clear the input\n          return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.image = e.target.result; // base64 string\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async addComment(post) {\n      if (!post.newComment.trim() && !post.commentImage) {\n        post.commentError = \"Comment cannot be empty.\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"group_post_id\", post.id);\n      formData.append(\"content\", post.newComment.trim());\n      if (post.commentImage) {\n        formData.append(\"image\", post.commentImage);\n      }\n      try {\n        const res = await fetch(\"http://localhost:8080/api/groupcomments/add\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData,\n        });\n        if (res.ok) {\n          post.commentError = \"\";\n          post.newComment = \"\";\n          post.commentImage = null;\n          post.commentImagePreview = null;\n          // Clear the file input\n          const fileInput = document.querySelector(`input[type=\"file\"][data-post-id=\"${post.id}\"]`);\n          if (fileInput) {\n            fileInput.value = '';\n          }\n          this.showNotification(\"Comment added successfully\", \"success\");\n          await this.fetchComments(post);\n        } else {\n          post.commentError = \"Failed to add comment.\";\n          this.showNotification(\"Failed to add comment\", \"error\");\n        }\n      } catch (error) {\n        post.commentError = \"Error adding comment.\";\n        this.showNotification(\"Error adding comment\", \"error\");\n      }\n    },\n    onCommentImageChange(event, post) {\n      const file = event.target.files[0];\n      if (file) {\n        // Validate file size (2MB limit)\n        const maxSize = 2 * 1024 * 1024; // 2MB in bytes\n        if (file.size > maxSize) {\n          this.showNotification('Image file size must be less than 2MB', 'error'); \n          event.target.value = ''; // Clear the input\n          return;\n        }\n\n        post.commentImage = file;\n        // Create a preview URL\n        post.commentImagePreview = URL.createObjectURL(file);\n      } else {\n        post.commentImage = null;\n        post.commentImagePreview = null;\n      }\n    },\n\n    async fetchComments(post) {\n      try {\n        const res = await fetch(\n          `http://localhost:8080/api/groupcomments?group_post_id=${post.id}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n        if (res.ok) {\n          const data = await res.json();\n          post.comments = data.map((comment) => ({\n            ...comment,\n            authorAvatar: comment.avatar\n              ? `http://localhost:8080/uploads/${comment.avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${comment.author}`,\n            created_at: comment.creation_date,\n            image: comment.image\n          }));\n        } else {\n          post.commentError = \"Failed to load comments.\";\n        }\n      } catch (error) {\n        post.commentError = \"Error loading comments.\";\n      }\n    },\n\n    toggleComments(post) {\n      console.log(post);\n\n      post.showComments = !post.showComments;\n      if (post.showComments && post.comments.length === 0) {\n        this.fetchComments(post);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString();\n    },\n    goToHome() {\n      this.$router.push('/home');\n    },\n    goToProfile() {\n      this.$router.push(`/profile/${this.user.username}`);\n    },\n    goToMyGroups() {\n      this.$router.push('/mygroups');\n    },\n    logout() {\n      fetch('http://localhost:8080/api/logout', {\n        method: 'POST',\n        credentials: 'include'\n      })\n        .then(res => {\n          if (res.ok) {\n            this.$router.push('/login');\n          } else {\n            this.$router.push('/login');\n          }\n        })\n        .catch(() => {\n          this.$router.push('/login');\n        });\n    },\n    disableFeatures() {\n      // Clear sensitive data if user is not a member\n      this.posts = [];\n      this.chatMessages = [];\n      this.upcomingEvents = [];\n      this.pastEvents = [];\n    },\n    async fetchPendingRequests() {\n      if (!this.group.id) return;\n\n      try {\n        const response = await fetch(\n          `http://localhost:8080/api/GetInvitations?group_id=${this.group.id}`,\n          {\n            credentials: \"include\",\n          }\n        );\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Pending requests data:\", data);\n\n          // Only include users who have requested to join (status: pending)\n          // Exclude users who were invited (status: invited)\n          this.pendingRequests = Array.isArray(data) ? data : [];\n        }\n      } catch (error) {\n        console.error(\"Error fetching pending requests:\", error);\n        this.pendingRequests = [];\n      }\n    },\n\n    async handleMemberRequest(userId, action) {\n      try {\n        const endpoint = action === 'accept'\n          ? 'http://localhost:8080/api/acceptgroupmember'\n          : 'http://localhost:8080/api/removememberfromgroup';\n\n        const response = await fetch(endpoint, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            user_id: userId\n          })\n        });\n\n        if (response.ok) {\n          await this.fetchPendingRequests();\n          this.showNotification(\n            `Member request ${action === \"accept\" ? \"accepted\" : \"declined\"\n            } successfully`,\n            \"success\"\n          );\n        } else {\n          throw new Error('Failed to handle member request');\n        }\n      } catch (error) {\n        console.error('Error handling member request:', error);\n        this.showNotification(\n          `Failed to ${action} member request`,\n          'error'\n        );\n      }\n    },\n    async handleInvitation(action) {\n      try {\n        const endpoint = action === 'accept'\n          ? 'http://localhost:8080/api/acceptgroupinvite'\n          : 'http://localhost:8080/api/declinegroupinvite';\n\n        const response = await fetch(endpoint, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            action: action\n          })\n        });\n        console.log(`Invitation ${action} request sent for group ID: ${this.group.id}`);\n\n        // Update UI immediately on success\n        if (action === 'accept') {\n          this.membershipStatus = 'accepted';\n          this.isMember = true;\n          this.showNotification('Successfully joined the group', 'success');\n        } else {\n          this.membershipStatus = null;\n          this.isMember = false;\n          this.showNotification('Successfully declined the invitation', 'success');\n        }\n\n        await this.fetchGroupDetails(this.group.id);\n        await this.fetchPosts(this.group.id);\n        await this.fetchEvents(this.group.id);\n        await this.fetchPendingRequests();\n      } catch (error) {\n        console.error(`Error ${action}ing invitation:`, error);\n        this.showNotification(\n          `Failed to ${action} invitation. Please try again.`,\n          'error'\n        );\n      }\n    },\n    async fetchAllUsers() {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/allusers\", {\n          credentials: \"include\",\n        });\n        if (response.ok) {\n          const users = await response.json();\n          console.log(\"Fetched users:\", users);\n          this.allUsers = users.map(user => ({\n            fullname: user.fullname,\n            id: user.id,\n            username: user.username,\n            avatar: user.avatar\n              ? `http://localhost:8080/uploads/${user.avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            invited: false\n          }));\n          console.log(\"Processed users:\", this.allUsers);\n          // Initialize filtered users with all users\n          this.filteredUsers = [...this.allUsers];\n        }\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n        this.showNotification(\"Failed to fetch users\", \"error\");\n      }\n    },\n\n    async searchUsers() {\n      console.log(\"Search query:\", this.searchQuery);\n      console.log(\"All users:\", this.allUsers);\n\n      // First, get all member statuses for this group\n      try {\n        const response = await fetch(`http://localhost:8080/api/groupmembers/status?group_id=${this.group.id}`, {\n          credentials: \"include\",\n        });\n        if (response.ok) {\n          const memberStatuses = await response.json();\n          console.log(\"Member statuses:\", memberStatuses);\n\n          // Update user statuses\n          this.allUsers = this.allUsers.map(user => ({\n            ...user,\n            status: memberStatuses[user.id] || null\n          }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching member statuses:\", error);\n      }\n\n      if (!this.searchQuery.trim()) {\n        // Show all users\n        this.filteredUsers = [...this.allUsers];\n      } else {\n        const query = this.searchQuery.toLowerCase();\n        this.filteredUsers = this.allUsers.filter(user =>\n          user.username.toLowerCase().includes(query)\n        );\n      }\n\n      console.log(\"Filtered users:\", this.filteredUsers);\n    },\n\n    async inviteUser(user) {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/addmembertogroup\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            group_id: this.group.id,\n            user_id: user.id,\n            status: \"invited\"\n          }),\n        });\n        console.log(\"Invitation sent to:\", user.id, this.group.id, \"status:\", \"invited\");\n\n        if (response.ok) {\n          // Update the user's status immediately\n          user.status = 'invited';\n          this.invitedUsers.add(user.id);\n          this.showNotification(`Invitation sent to ${user.username}`, \"success\");\n\n          // Create notification for the invited user\n          try {\n            await fetch(\"http://localhost:8080/api/notifications\", {\n              method: \"POST\",\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                user_id: user.id,\n                type: \"group_invite\",\n                content: `You have been invited to join ${this.group.title}`,\n              }),\n            });\n          } catch (notifError) {\n            console.error(\"Error creating notification:\", notifError);\n            // Don't show error to user since invitation was successful\n          }\n        } else {\n          const errorText = await response.text();\n          console.error(\"Failed to send invitation:\", errorText);\n          this.showNotification(\"Failed to send invitation\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error inviting user:\", error);\n        this.showNotification(\"Failed to send invitation\", \"error\");\n      }\n    },\n\n    async fetchGroupMembers() {\n      try {\n        const response = await fetch(`http://localhost:8080/api/groupmembers?group_id=${this.group.id}`, {\n          credentials: \"include\",\n        });\n        if (response.ok) {\n          const members = await response.json();\n          console.log(\"Fetched group members:\", members);\n          this.groupMembers = members;\n        }\n      } catch (error) {\n        console.error(\"Error fetching group members:\", error);\n      }\n    },\n\n    async openInviteModal() {\n      this.showInviteMembersModal = true;\n      await this.fetchAllUsers();\n      await this.fetchGroupMembers();\n      this.searchUsers(); // Initialize the filtered users list\n    },\n    formatMessageTime(date) {\n      const now = new Date();\n      const messageDate = new Date(date);\n      const diffInHours = Math.abs(now - messageDate) / 36e5;\n\n      if (diffInHours < 24) {\n        // Today - show time only\n        return messageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      } else if (diffInHours < 48) {\n        // Yesterday\n        return 'Yesterday ' + messageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      } else {\n        // Show date and time\n        return messageDate.toLocaleDateString([], {\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      }\n    },\n    setupNotificationWebSocket() {\n      // Register handler for real-time notifications\n      notificationWebSocket.onNotification('group-page', (notification) => {\n        console.log('Received real-time notification:', notification);\n\n        // Refresh notifications and count from server to ensure accuracy\n        this.fetchNotifications();\n      });\n    },\n  },\n  mounted() {\n    // Set up notification WebSocket\n    this.setupNotificationWebSocket();\n\n    this.fetchGroupDetails(this.$route.params.id);\n    this.fetchPosts(this.$route.params.id);\n    this.fetchNotifications();\n    document.addEventListener('click', this.handleNotifClose);\n    this.scrollToBottom(); // Add this line\n  },\n  beforeUnmount() {\n    // Clean up notification WebSocket\n    notificationWebSocket.removeNotificationHandler('group-page');\n\n    document.removeEventListener('click', this.handleNotifClose);\n    if (this.socket) {\n      this.socket.close();\n    }\n  },\n  computed: {\n    unreadNotificationCount() {\n      return this.notifications.filter(notif => !notif.is_read).length;\n    }\n  },\n  watch: {\n    chatMessages: {\n      handler() {\n        this.scrollToBottom();\n      },\n      deep: true\n    }\n  },\n};\n</script>\n\n<style scoped>\n.group-layout {\n  display: flex;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f3f4f6, #e5e7eb);\n}\n\n.sidebar {\n  width: 70px;\n  background: #23263a;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem 0 1rem 0;\n  border-radius: 1.5rem 0 0 1.5rem;\n  box-shadow: 2px 0 16px rgba(35, 38, 58, 0.08);\n  min-height: 100vh;\n  z-index: 100;\n  justify-content: flex-start;\n  position: fixed;\n  left: 0;\n  top: 0;\n}\n\n.sidebar-icons {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n  align-items: center;\n  position: relative;\n  margin-bottom: 2.5rem;\n}\n\n.sidebar-icon {\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 1rem;\n  color: #fff;\n  font-size: 1.5rem;\n  opacity: 0.7;\n  cursor: pointer;\n  transition: background 0.2s, opacity 0.2s;\n  position: relative;\n}\n\n.sidebar-icon.active,\n.sidebar-icon:hover {\n  background: #35395a;\n  opacity: 1;\n}\n\n#groupostimage {\n  width: 100%;\n}\n\n.group-main-content {\n  flex: 1;\n  margin-left: 70px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  min-width: 0;\n}\n\n.group-container {\n  padding: 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f3f4f6, #e5e7eb);\n}\n\n.group-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem 2rem;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border-radius: 1rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.group-info h2 {\n  margin: 0;\n  color: #1f2937;\n  font-size: 1.75rem;\n  font-weight: 600;\n}\n\n.group-info p {\n  margin: 0.75rem 0 0;\n  color: #6b7280;\n  font-size: 1.1rem;\n  line-height: 1.5;\n}\n\n.group-actions {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n.back-btn,\n.leave-btn,\n.event-btn {\n  padding: 0.75rem 1.5rem;\n  border-radius: 0.75rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.back-btn {\n  background: #e5e7eb;\n  color: #4b5563;\n  border: none;\n}\n\n.back-btn:hover {\n  background: #d1d5db;\n}\n\n.leave-btn {\n  background: #ef4444;\n  color: white;\n  border: none;\n}\n\n.leave-btn:hover {\n  background: #dc2626;\n}\n\n.event-btn {\n  background: #4f46e5;\n  color: white;\n  border: none;\n}\n\n.event-btn:hover {\n  background: #4338ca;\n}\n\n.group-content {\n  display: grid;\n  grid-template-columns: 350px 1fr 350px;\n  gap: 2rem;\n}\n\n.create-post-section,\n.posts-section,\n.group-chat-section {\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  height: fit-content;\n}\n\n.create-post-section h3,\n.posts-section h3,\n.group-chat-section h3 {\n  color: #1f2937;\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 2px solid #e5e7eb;\n}\n\n.create-post-section form {\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n}\n\n.create-post-section input,\n.create-post-section textarea {\n  padding: 0.75rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.75rem;\n  font-size: 1rem;\n  background: rgba(255, 255, 255, 0.8);\n  transition: all 0.3s ease;\n}\n\n.create-post-section input:focus,\n.create-post-section textarea:focus {\n  outline: none;\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n}\n\n.create-post-section textarea {\n  min-height: 150px;\n  resize: vertical;\n}\n\n.create-post-section button {\n  background: #4f46e5;\n  color: white;\n  padding: 0.75rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.create-post-section button:hover {\n  background: #4338ca;\n}\n\n.post-card {\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  margin-bottom: 1.5rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: transform 0.3s ease;\n}\n\n.post-header {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.post-author-pic,\n.comment-author-pic,\n.message-author-pic {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  border: 2px solid #e5e7eb;\n  transition: transform 0.3s ease;\n}\n\n.post-author-pic:hover,\n.comment-author-pic:hover,\n.message-author-pic:hover {\n  transform: scale(1.1);\n}\n\n.post-title {\n  margin: 0.75rem 0;\n  color: #1f2937;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.post-content {\n  color: #4b5563;\n  margin-bottom: 1rem;\n  line-height: 1.6;\n  font-size: 1.1rem;\n}\n\n.comments-section {\n  margin-top: 1.5rem;\n  padding-top: 1.5rem;\n  border-top: 2px solid #e5e7eb;\n}\n\n.comment {\n  margin-bottom: 1.5rem;\n  padding: 1rem;\n  background: rgba(249, 250, 251, 0.8);\n  border-radius: 0.75rem;\n  transition: transform 0.3s ease;\n}\n\n.comment:hover {\n  transform: translateX(5px);\n}\n\n.comment-header {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 0.5rem;\n}\n\n.comment-content {\n  color: #4b5563;\n  margin-left: 3.5rem;\n  line-height: 1.5;\n}\n\n.chat-messages {\n  height: 500px;\n  overflow-y: auto;\n  margin-bottom: 1.5rem;\n  padding-right: 0.5rem;\n}\n\n.chat-messages::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chat-messages::-webkit-scrollbar-track {\n  background: #f1f5f9;\n  border-radius: 3px;\n}\n\n.chat-messages::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.message {\n  margin-bottom: 1rem;\n  padding: 0.75rem;\n  background: rgba(249, 250, 251, 0.8);\n  border-radius: 0.75rem;\n  transition: transform 0.3s ease;\n  display: flex;\n  align-items: flex-start;\n  gap: 0.75rem;\n  max-width: 85%;\n}\n\n.message:hover {\n  transform: translateX(5px);\n}\n\n.message-header {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  min-width: 0;\n  flex: 1;\n}\n\n.message-meta {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 0.25rem;\n}\n\n.message-author {\n  font-weight: 600;\n  color: #1f2937;\n  font-size: 0.9rem;\n}\n\n.message-time {\n  color: #6b7280;\n  font-size: 0.8rem;\n}\n\n.message-content {\n  color: #4b5563;\n  line-height: 1.5;\n  word-break: break-word;\n  margin-top: 0.25rem;\n}\n\n.chat-input {\n  display: flex;\n  gap: 1rem;\n  padding-top: 1rem;\n  border-top: 2px solid #e5e7eb;\n  margin-top: auto;\n  justify-content: center;\n  align-items: center;\n}\n\n.chat-input input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.75rem;\n  font-size: 1rem;\n  background: rgba(255, 255, 255, 0.8);\n  transition: all 0.3s ease;\n}\n\n.chat-input input:focus {\n  outline: none;\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n}\n\n.chat-input button {\n  background: #4f46e5;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.chat-input button:hover {\n  background: #4338ca;\n}\n\n.no-posts,\n.no-comments,\n.no-messages {\n  text-align: center;\n  color: #6b7280;\n  padding: 3rem;\n  font-size: 1.1rem;\n  background: rgba(249, 250, 251, 0.8);\n  border-radius: 0.75rem;\n}\n\n.post-actions {\n  display: flex;\n  gap: 0.75rem;\n  margin-top: 1rem;\n}\n\n.post-actions button {\n  background: #e5e7eb;\n  color: #4b5563;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n}\n\n.comment-form {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 1rem;\n  padding: 1rem;\n  background: rgba(249, 250, 251, 0.8);\n  border-radius: 0.75rem;\n}\n\n.comment-form textarea {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.75rem;\n  font-size: 1rem;\n  background: rgba(255, 255, 255, 0.8);\n  transition: all 0.3s ease;\n  min-height: 80px;\n  resize: vertical;\n}\n\n.comment-form textarea:focus {\n  outline: none;\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n}\n\n.comment-form .file-upload-label {\n  align-self: flex-start;\n  margin-top: 0.5rem;\n}\n\n.comment-form .image-preview {\n  max-width: 200px;\n  max-height: 200px;\n  border-radius: 0.5rem;\n  margin-top: 0.5rem;\n  object-fit: contain;\n}\n\n.comment-form button {\n  align-self: flex-end;\n  background: #4f46e5;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.comment-form button:hover {\n  background: #4338ca;\n}\n\n/* Responsive Design */\n@media (max-width: 1200px) {\n  .group-content {\n    grid-template-columns: 1fr;\n    gap: 1.5rem;\n  }\n\n  .group-chat-section {\n    grid-column: 1 / -1;\n  }\n\n  .group-container {\n    padding: 1.5rem;\n  }\n}\n\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100%;\n    min-height: auto;\n    height: 70px;\n    flex-direction: row;\n    padding: 0;\n    border-radius: 0;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 100;\n  }\n\n  .sidebar-icons {\n    flex-direction: row;\n    justify-content: space-around;\n    margin: 0;\n    padding: 0 1rem;\n    position: relative;\n  }\n\n  .group-main-content {\n    margin-left: 0;\n    margin-top: 70px;\n  }\n\n  .group-container {\n    padding-top: 1rem;\n  }\n\n  .group-header {\n    flex-direction: column;\n    gap: 1rem;\n    text-align: center;\n    padding: 1rem;\n  }\n\n  .group-actions {\n    width: 100%;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 0.75rem;\n  }\n\n  .group-info h2 {\n    font-size: 1.5rem;\n  }\n\n  .group-info p {\n    font-size: 1rem;\n  }\n\n  .create-post-section,\n  .posts-section,\n  .group-chat-section {\n    padding: 1rem;\n  }\n\n  .post-card {\n    padding: 1rem;\n  }\n\n  .post-header {\n    gap: 0.75rem;\n  }\n\n  .post-author-pic,\n  .comment-author-pic,\n  .message-author-pic {\n    width: 2.5rem;\n    height: 2.5rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n\n  .post-content {\n    font-size: 1rem;\n  }\n\n  .chat-messages {\n    height: 400px;\n  }\n\n  .message {\n    max-width: 95%;\n  }\n\n  .modal-content {\n    width: 95%;\n    max-height: 90vh;\n  }\n\n  .create-event-form,\n  .events-container {\n    padding: 1rem;\n  }\n\n  .event-item {\n    flex-direction: column;\n    gap: 1rem;\n  }\n\n  .event-actions {\n    width: 100%;\n    justify-content: flex-start;\n  }\n\n  .response-btn {\n    padding: 0.5rem 1rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .group-container {\n    padding: 0.75rem;\n  }\n\n  .group-header {\n    padding: 0.75rem;\n  }\n\n  .group-actions {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .back-btn,\n  .leave-btn,\n  .event-btn,\n  .invite-btn,\n  .member-requests-btn {\n    width: 100%;\n    margin: 0.25rem 0;\n  }\n\n  .create-post-section form {\n    gap: 1rem;\n  }\n\n  .post-card {\n    padding: 0.75rem;\n  }\n\n  .post-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n\n  .post-actions {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .post-actions button {\n    width: 100%;\n    margin: 0.25rem 0;\n  }\n\n  .comment-form {\n    padding: 0.75rem;\n  }\n\n  .comment-form textarea {\n    min-height: 60px;\n  }\n\n  .comment-form button {\n    width: 100%;\n  }\n\n  .chat-input {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n\n  .chat-input input {\n    width: 100%;\n  }\n\n  .chat-input button {\n    width: 100%;\n  }\n\n  .modal-content {\n    width: 100%;\n    max-height: 100vh;\n    border-radius: 0;\n  }\n\n  .modal-header {\n    padding: 1rem;\n  }\n\n  .create-event-form,\n  .events-container {\n    padding: 0.75rem;\n  }\n\n  .event-item {\n    padding: 0.75rem;\n  }\n\n  .event-response-stats {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n\n  .response-stat {\n    width: 100%;\n    justify-content: center;\n  }\n\n  .event-actions {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .response-btn {\n    width: 100%;\n  }\n\n  .request-item {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n\n  .request-info {\n    width: 100%;\n  }\n\n  .request-actions {\n    width: 100%;\n    justify-content: space-between;\n  }\n\n  .accept-btn,\n  .decline-btn {\n    flex: 1;\n  }\n\n  .user-item {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n\n  .user-info {\n    width: 100%;\n  }\n\n  .invite-user-btn {\n    width: 100%;\n  }\n}\n\n.membership-status {\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.membership-status.not-member {\n  background-color: #fee2e2;\n  color: #991b1b;\n}\n\n.membership-status.pending {\n  background-color: #fef3c7;\n  color: #92400e;\n}\n\n.membership-status.accepted {\n  background-color: #dcfce7;\n  color: #166534;\n}\n\n.membership-status.invited {\n  background: #fef3c7;\n  color: #92400e;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  margin-top: 1rem;\n}\n\n.create-post-section.disabled,\n.group-chat-section.disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\ninput:disabled,\ntextarea:disabled,\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  backdrop-filter: blur(5px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 1.5rem;\n  width: 90%;\n  max-width: 800px;\n  max-height: 85vh;\n  overflow-y: auto;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\n    0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  animation: slideIn 0.3s ease;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem 2rem;\n  border-bottom: 1px solid #e5e7eb;\n  background: #f8fafc;\n  border-radius: 1.5rem 1.5rem 0 0;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #1f2937;\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 1.75rem;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 0.5rem;\n  width: 2.5rem;\n  height: 2.5rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n}\n\n.close-btn:hover {\n  background: #f1f5f9;\n  color: #1f2937;\n}\n\n.create-event-form {\n  padding: 2rem;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n}\n\n.create-event-form h4 {\n  margin: 0 0 1.5rem;\n  color: #1f2937;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.form-group {\n  margin-bottom: 1.25rem;\n}\n\n.form-group label {\n  display: block;\n  color: #4b5563;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  font-size: 0.95rem;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 0.875rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.75rem;\n  font-size: 1rem;\n  transition: all 0.2s ease;\n  background: #f8fafc;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n  background: white;\n}\n\n.form-group textarea {\n  min-height: 120px;\n  resize: vertical;\n}\n\n.events-container {\n  padding: 2rem;\n  background: #f8fafc;\n}\n\n.events-section {\n  margin-bottom: 2.5rem;\n}\n\n.events-section h4 {\n  color: #1f2937;\n  margin-bottom: 1.25rem;\n  font-size: 1.25rem;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.events-section h4::before {\n  content: \"\";\n  display: block;\n  width: 4px;\n  height: 1.25rem;\n  background: #4f46e5;\n  border-radius: 2px;\n}\n\n.event-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.event-item {\n  background: white;\n  border-radius: 1rem;\n  padding: 1.25rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 1.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n}\n\n.event-item:hover {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.event-info {\n  flex: 1;\n}\n\n.event-info h5 {\n  margin: 0 0 0.75rem;\n  color: #1f2937;\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.event-date,\n.event-location {\n  color: #6b7280;\n  font-size: 0.9rem;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.event-description {\n  color: #4b5563;\n  font-size: 0.95rem;\n  margin-top: 0.75rem;\n  line-height: 1.5;\n}\n\n.event-response-stats {\n  display: flex;\n  gap: 1.5rem;\n  margin-top: 1rem;\n  padding: 0.75rem;\n  background: rgba(243, 244, 246, 0.5);\n  border-radius: 0.75rem;\n}\n\n.response-stat {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 0.75rem;\n  border-radius: 0.5rem;\n  background: white;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.response-stat.going {\n  color: #059669;\n}\n\n.response-stat.not-going {\n  color: #dc2626;\n}\n\n.response-icon {\n  font-size: 1.25rem;\n}\n\n.response-count {\n  font-weight: 600;\n  font-size: 1.1rem;\n}\n\n.response-label {\n  font-size: 0.9rem;\n  color: #6b7280;\n}\n\n.response-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  background: #f3f4f6;\n  color: #374151;\n}\n\n.response-btn .btn-icon {\n  font-size: 1.1rem;\n}\n\n.response-btn.going:not(:disabled) {\n  background: #059669;\n  color: white;\n}\n\n.response-btn.not-going:not(:disabled) {\n  background: #dc2626;\n  color: white;\n}\n\n.response-btn:hover:not(:disabled) {\n  transform: translateY(-1px);\n  opacity: 0.9;\n}\n\n.response-btn:disabled {\n  cursor: not-allowed;\n  opacity: 0.8;\n}\n\n.response-btn.active {\n  position: relative;\n  overflow: hidden;\n}\n\n.response-btn.active::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.1);\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 0;\n  }\n\n  50% {\n    opacity: 0.3;\n  }\n\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/* Scrollbar Styling */\n.modal-content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.modal-content::-webkit-scrollbar-track {\n  background: #f1f5f9;\n  border-radius: 4px;\n}\n\n.modal-content::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 4px;\n}\n\n.modal-content::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n.join-btn:disabled {\n  background: #10b981;\n  cursor: not-allowed;\n  opacity: 0.8;\n}\n\n.join-btn:disabled:hover {\n  transform: none;\n  background: #10b981;\n}\n\n.accept-btn,\n.decline-btn {\n  background: #4f46e5;\n  color: white;\n  padding: 0.625rem 1.25rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.accept-btn:hover,\n.decline-btn:hover {\n  background: #4338ca;\n  transform: translateY(-1px);\n}\n\n.accept-btn.selected {\n  background-color: #28a745;\n  color: white;\n}\n\n.decline-btn.selected {\n  background-color: #dc3545;\n  color: white;\n}\n\n.non-member-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 400px;\n  padding: 2rem;\n}\n\n.non-member-message {\n  text-align: center;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 2rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  max-width: 600px;\n  width: 100%;\n}\n\n.non-member-message h3 {\n  color: #1f2937;\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n}\n\n.non-member-message p {\n  color: #6b7280;\n  font-size: 1.1rem;\n  line-height: 1.6;\n}\n\n/* Notification Styles */\n.notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  z-index: 2000;\n  animation: slideIn 0.3s ease-out;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n  font-weight: 500;\n}\n\n.notification-success {\n  background-color: #10b981;\n  color: white;\n  border-left: 4px solid #059669;\n}\n\n.notification-error {\n  background-color: #ef4444;\n  color: white;\n  border-left: 4px solid #dc2626;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n.member-requests-btn {\n  background: #4f46e5;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  margin-right: 1rem;\n}\n\n.member-requests-btn:hover {\n  background: #4338ca;\n}\n\n.member-requests-container {\n  padding: 1.5rem;\n}\n\n.no-requests {\n  text-align: center;\n  padding: 2rem;\n  color: #6b7280;\n  font-size: 1.1rem;\n}\n\n.requests-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.request-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  background: #f9fafb;\n  border-radius: 0.75rem;\n  transition: transform 0.2s ease;\n}\n\n.request-info {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.request-avatar {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  border: 2px solid #e5e7eb;\n}\n\n.request-details h4 {\n  margin: 0;\n  color: #1f2937;\n  font-size: 1.1rem;\n}\n\n.request-details p {\n  margin: 0.25rem 0 0;\n  color: #6b7280;\n  font-size: 0.9rem;\n}\n\n.request-actions {\n  display: flex;\n  gap: 0.75rem;\n}\n\n.accept-btn,\n.decline-btn {\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.accept-btn {\n  background: #10b981;\n  color: white;\n}\n\n.accept-btn:hover {\n  background: #059669;\n}\n\n.decline-btn {\n  background: #ef4444;\n  color: white;\n}\n\n.decline-btn:hover {\n  background: #dc2626;\n}\n\n.invitation-actions {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.invite-btn {\n  background: #4f46e5;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.invite-btn:hover {\n  background: #4338ca;\n}\n\n.invite-members-modal {\n  padding: 2rem;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n}\n\n.invite-members-modal h3 {\n  margin: 0 0 1.5rem;\n  color: #1f2937;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.search-box {\n  margin-bottom: 1.5rem;\n}\n\n.search-box input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.75rem;\n  font-size: 1rem;\n  background: #f8fafc;\n}\n\n.search-box input:focus {\n  outline: none;\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n}\n\n.users-list {\n  margin-bottom: 1.5rem;\n}\n\n.users-list-container {\n  max-height: 300px;\n  overflow-y: auto;\n  padding: 0.5rem;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.user-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.75rem;\n  background: #f9fafb;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  transition: all 0.2s ease;\n}\n\n.user-item:hover {\n  background: #f3f4f6;\n  transform: translateY(-1px);\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.user-name {\n  font-size: 0.95rem;\n  font-weight: 500;\n  color: #374151;\n}\n\n.invite-user-btn {\n  padding: 0.5rem 1rem;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  background: #4f46e5;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\n.invite-user-btn:disabled {\n  background: #e5e7eb;\n  color: #9ca3af;\n  cursor: not-allowed;\n}\n\n.invite-user-btn:not(:disabled):hover {\n  background: #4338ca;\n}\n\n.no-users {\n  text-align: center;\n  padding: 2rem;\n  color: #6b7280;\n  font-style: italic;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 1rem;\n  border-top: 1px solid #e5e7eb;\n}\n\n.modal-buttons button {\n  background: #4f46e5;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 0.75rem;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.modal-buttons button:hover {\n  background: #4338ca;\n}\n\n#groupostimage {\n  width: 100%;\n}\n\n.file-upload-label {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.9rem;\n  color: #4b5563;\n  width: fit-content;\n}\n\n.file-upload-label:hover {\n  background: #e5e7eb;\n  border-color: #d1d5db;\n}\n\n.file-upload-label svg {\n  color: #4f46e5;\n}\n\n.file-upload-label input[type=\"file\"] {\n  display: none;\n}\n\n.image-preview {\n  max-width: 100%;\n  max-height: 300px;\n  border-radius: 0.5rem;\n  margin-top: 1rem;\n  object-fit: contain;\n}\n\n.notif-popup {\n  position: absolute;\n  top: 70px;\n  left: 80px;\n  width: 350px;\n  background: #fff;\n  border-radius: 1.1rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  z-index: 5000;\n  padding: 0.5rem 0 0.5rem 0;\n  animation: modalPopIn 0.22s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n.notif-popup-header {\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #4f46e5;\n  padding: 1rem 1.5rem 0.5rem 1.5rem;\n  border-bottom: 1px solid #e5e7eb;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.notif-list {\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem 0;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.notif-item {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.7rem;\n  padding: 0.8rem 1.5rem;\n  font-size: 0.98rem;\n  color: #23263a;\n  border-bottom: 1px solid #f3f4f8;\n  transition: background 0.18s;\n  position: relative;\n  cursor: pointer;\n}\n\n.notif-item:last-child {\n  border-bottom: none;\n}\n\n.notif-item:hover {\n  background: #f8fafc;\n}\n\n.notif-avatar img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #e5e7eb;\n  flex-shrink: 0;\n}\n\n.notif-text {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.2rem;\n}\n\n.notif-text b {\n  color: #4f46e5;\n  font-weight: 600;\n}\n\n.notif-text span {\n  color: #4b5563;\n  line-height: 1.4;\n}\n\n.notif-time {\n  font-size: 0.85rem;\n  color: #6b7280;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n}\n\n.notif-item.empty {\n  color: #b0b3c6;\n  text-align: center;\n  justify-content: center;\n  font-size: 1rem;\n  padding: 2rem 1.5rem;\n}\n\n.notif-item.unread {\n  background: #f0f7ff;\n  border-left: 3px solid #4f46e5;\n}\n\n.notif-item.unread::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  width: 8px;\n  height: 8px;\n  background: #4f46e5;\n  border-radius: 50%;\n}\n\n.notif-badge {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  background: #ef4444;\n  color: white;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  font-size: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  border: 2px solid #fff;\n  z-index: 1;\n}\n\n.post-title,\n.post-content,\n.comment-content {\n  word-break: break-word;\n  overflow-wrap: break-word;\n  white-space: pre-line;\n  /* preserves line breaks and wraps text */\n}\n\n/* Add responsive styles for sidebar */\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100%;\n    min-height: auto;\n    height: 70px;\n    flex-direction: row;\n    padding: 0;\n    border-radius: 0;\n    position: fixed;\n    top: 0;\n    left: 0;\n  }\n\n  .sidebar-icons {\n    flex-direction: row;\n    justify-content: space-around;\n    margin: 0;\n    padding: 0 1rem;\n  }\n\n  .group-main-content {\n    margin-left: 0;\n    margin-top: 70px;\n  }\n\n  .group-container {\n    padding-top: 1rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .sidebar {\n    height: 60px;\n  }\n\n  .sidebar-icons {\n    padding: 0 0.5rem;\n  }\n\n  .group-main-content {\n    margin-top: 60px;\n  }\n\n  .sidebar-icon {\n    width: 40px;\n    height: 40px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}