{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { notificationWebSocket } from '../services/notificationWebSocket.js';\nexport default {\n  props: [\"showNotification\"],\n  name: \"ForumPage\",\n  data() {\n    return {\n      user: {\n        avatar: \"\",\n        name: \"\",\n        email: \"\",\n        username: \"guest\"\n      },\n      socket: null,\n      newPost: {\n        author: \"\",\n        title: \"\",\n        content: \"\",\n        image: \"\",\n        status: \"public\"\n      },\n      image: null,\n      imagePreview: null,\n      imageFileName: \"\",\n      posts: [],\n      message: \"\",\n      allowedUsers: [],\n      selectedAllowedUsers: [],\n      groups: [],\n      otherUsers: [],\n      followedUsers: [],\n      isChatExpanded: false,\n      newMessage: \"\",\n      selectedChatUser: null,\n      chatUsers: [],\n      currentMessage: {\n        type: \"\",\n        message: \"\",\n        receiver: \"\",\n        username: \"\"\n      },\n      showCreateGroup: false,\n      newGroup: {\n        title: \"\",\n        description: \"\",\n        creator_id: null\n      },\n      groupMembership: {},\n      postsPrvMap: {},\n      showNotifications: false,\n      notifications: [],\n      commentImages: {},\n      unreadNotificationCount: 0,\n      showImageModal: false,\n      selectedImage: null\n    };\n  },\n  async created() {\n    this.$router.push('/home');\n    try {\n      const userRes = await fetch(\"http://20.56.138.63:8080/api/info\", {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      const userData = await userRes.json();\n      console.log(\"userData\", userData);\n      this.user.name = userData.Username;\n      this.user.email = userData.Email;\n      this.user.username = userData.Username.toLowerCase();\n      if (userData.Avatar) {\n        this.user.avatar = `http://20.56.138.63:8080/uploads/${userData.Avatar}`;\n      } else {\n        this.user.avatar = `https://api.dicebear.com/7.x/avataaars/svg?seed=${userData.Username}`;\n      }\n      this.initializeWebSocket();\n      await this.fetchPostsPrv();\n      await this.fetchPosts();\n      await this.fetchAllUsers();\n      await this.fetchAllowedUsers();\n      await this.fetchGroups();\n      await this.fetchNotifications();\n    } catch (err) {\n      console.error(\"Initialization failed:\", err);\n      this.$router.push(\"/login\");\n    }\n  },\n  methods: {\n    async fetchAllowedUsers() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/postsprivacy\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          if (!data.followers) {\n            return;\n          }\n          console.log(\"Allowed users data:\", data);\n          this.allowedUsers = data.followers.map(user => ({\n            username: user,\n            avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${user}`\n          }));\n        } else {\n          this.showNotification(\"Failed to fetch allowed users\", \"error\");\n          console.error(\"Failed to fetch allowed users\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch allowed users\", \"error\");\n        console.error(\"Error fetching allowed users:\", error);\n      }\n      console.log(\"Allowed users:\", this.allowedUsers);\n    },\n    async fetchAllUsers() {\n      try {\n        const allUsersRes = await fetch(\"http://20.56.138.63:8080/api/allusers\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (allUsersRes.ok) {\n          const allUsersData = await allUsersRes.json();\n          if (!allUsersData || allUsersData.length === 0) {\n            return;\n          }\n          console.log(\"All users data:\", allUsersData);\n          this.otherUsers = allUsersData.map(user => ({\n            name: user.fullname,\n            username: user.username,\n            avatar: user.avatar ? `http://20.56.138.63:8080/uploads/${user.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            followed: user.followed || false\n          }));\n          this.followedUsers = this.otherUsers.filter(user => user.followed);\n          console.log(\"Followed users:\", this.followedUsers);\n        }\n        const chatUsersRes = await fetch(\"http://20.56.138.63:8080/api/openchat\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (chatUsersRes.ok) {\n          const chatUsersData = await chatUsersRes.json();\n          console.log(\"Chat users data:\", chatUsersData);\n          if (!chatUsersData || chatUsersData.length === 0) {\n            return;\n          } else {\n            this.chatUsers = chatUsersData.map(user => ({\n              id: user.id,\n              fullname: user.full_name,\n              name: user.username,\n              messages: [],\n              avatar: user.avatar ? `http://20.56.138.63:8080/uploads/${user.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`\n            }));\n          }\n        } else {\n          this.showNotification(\"Failed to fetch chat users\", \"error\");\n          console.error(\"Failed to fetch chat users\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch chat users\", \"error\");\n        console.error(\"Error fetching users:\", error);\n      }\n    },\n    initializeWebSocket() {\n      this.socket = new WebSocket(\"ws://20.56.138.63:8080/ws\");\n      this.socket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type == \"message\") {\n          this.showNotification(\"New message from \" + data.username, \"success\");\n        }\n        console.log(\"Received message:\", data);\n        const user = this.chatUsers.find(u => u.name === data.username);\n        if (user) {\n          this.showNotification(\"New message from \" + data.username, \"success\");\n          user.messages.push({\n            id: Date.now(),\n            text: data.message,\n            sender: \"other\",\n            timestamp: new Date().toISOString()\n          });\n          if (this.selectedChatUser && this.selectedChatUser.name === data.username) {\n            this.$nextTick(() => {\n              this.scrollToBottom();\n            });\n          }\n        }\n      };\n      this.socket.onopen = () => {\n        console.log(\"WebSocket connected\");\n      };\n      this.socket.onerror = error => {\n        console.error(\"WebSocket error:\", error);\n      };\n      this.socket.onclose = () => {\n        console.log(\"WebSocket disconnected\");\n      };\n    },\n    async fetchPosts() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/getposts\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"data\", data);\n          if (!data) {\n            return;\n          }\n          this.posts = data.map(post => ({\n            ...post,\n            authorAvatar: post.Avatar ? `http://20.56.138.63:8080/uploads/${post.Avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${post.Author}`,\n            Image: post.Image,\n            comments: [],\n            newComment: \"\",\n            showComments: false,\n            commentError: \"\"\n          }));\n        } else {\n          const errorText = await res.text();\n          this.showNotification(errorText || \"Failed to fetch posts\", \"error\");\n          console.error(\"Failed to fetch posts:\", errorText);\n        }\n      } catch (error) {\n        this.showNotification(error.message || \"Failed to fetch posts\", \"error\");\n        console.error(\"Error fetching posts:\", error);\n      }\n    },\n    async fetchComments(post) {\n      try {\n        const res = await fetch(`http://20.56.138.63:8080/api/getcomments?post_id=${post.Id}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(data);\n          if (!data) {\n            return;\n          }\n          post.comments = data.map(comment => ({\n            ...comment,\n            avatar: comment.avatar ? `http://20.56.138.63:8080/uploads/${comment.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${comment.author}`,\n            image: comment.image ? `http://20.56.138.63:8080/uploads/${comment.image}` : null\n          }));\n        } else {\n          this.showNotification(\"Failed to fetch comments\", \"error\");\n          console.error(\"Failed to fetch comments for post\", post.ID);\n          post.commentError = \"Failed to load comments.\";\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch comments\", \"error\");\n        console.error(\"Error fetching comments:\", error);\n      }\n    },\n    async addComment(post) {\n      if (!post.newComment.trim()) {\n        post.commentError = \"Comment cannot be empty.\";\n        return;\n      }\n      if (post.newComment.trim().length < 1) {\n        post.commentError = \"Comment must be at least 1 character long.\";\n        return;\n      }\n      if (post.newComment.trim().length > 500) {\n        post.commentError = \"Comment must not exceed 500 characters.\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"post_id\", post.Id.toString());\n      formData.append(\"comment\", post.newComment.trim());\n      if (this.commentImages[post.Id] && this.commentImages[post.Id].file) {\n        formData.append(\"image\", this.commentImages[post.Id].file);\n      }\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/addcomments\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData\n        });\n        if (res.ok) {\n          post.commentError = \"\";\n          post.newComment = \"\";\n          this.commentImages[post.Id] = null;\n          this.showNotification(\"Comment added successfully\", \"success\");\n          await this.fetchComments(post);\n        } else {\n          this.showNotification(\"Failed to add comment\", \"error\");\n          console.error(\"Failed to add comment\");\n          post.commentError = \"Failed to add comment.\";\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to add comment\", \"error\");\n        console.error(\"Error adding comment:\", error);\n        post.commentError = \"Error adding comment.\";\n      }\n    },\n    async submitPost() {\n      if (this.newPost.title.length < 1) {\n        this.message = \"Title must be at least 1 characters long.\";\n        this.showNotification(\"Title must be at least 1 characters long.\", \"error\");\n        return;\n      }\n      if (this.newPost.title.length > 50) {\n        this.message = \"Title must not exceed 50 characters.\";\n        this.showNotification(\"Title must not exceed 100 characters.\", \"error\");\n        return;\n      }\n      if (this.newPost.content.length < 1) {\n        this.message = \"Content must be at least 1 characters long.\";\n        this.showNotification(\"Content must be at least 10 characters long.\", \"error\");\n        return;\n      }\n      if (this.newPost.content.length > 1000) {\n        this.message = \"Content must not exceed 1000 characters.\";\n        this.showNotification(\"Content must not exceed 1000 characters.\", \"error\");\n        return;\n      }\n      try {\n        const formData = new FormData();\n        formData.append(\"title\", this.newPost.title);\n        formData.append(\"content\", this.newPost.content);\n        formData.append(\"status\", this.newPost.status);\n        formData.append(\"allowed_users\", this.selectedAllowedUsers.join(\",\"));\n        if (this.image) {\n          formData.append(\"image\", this.image);\n        }\n        const res = await fetch(\"http://20.56.138.63:8080/api/posts\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData\n        });\n        console.log(this.selectedAllowedUsers);\n        if (res.ok) {\n          this.newPost = {\n            title: \"\",\n            content: \"\",\n            status: \"public\"\n          };\n          this.selectedAllowedUsers = [];\n          this.image = null;\n          this.imagePreview = null;\n          this.imageFileName = \"\";\n          this.showNotification(\"Post created successfully!\", \"success\");\n          await this.fetchPosts();\n        } else {\n          const errorText = await res.text();\n          this.showNotification(\"Failed to create post: \" + errorText, \"error\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to create post\", \"error\");\n        console.error(\"Post creation failed:\", error);\n        this.message = \"Error submitting post.\";\n      }\n    },\n    logout() {\n      fetch(\"http://20.56.138.63:8080/api/auth/logout\", {\n        method: \"POST\",\n        credentials: \"include\"\n      }).then(res => {\n        if (res.ok) {\n          this.showNotification(\"Logged out successfully\", \"success\");\n          this.$router.push(\"/login\");\n        } else {\n          this.showNotification(\"Failed to logout\", \"error\");\n          this.$router.push(\"/login\");\n        }\n      }).catch(err => {\n        this.showNotification(\"wax nta hbit rak mamlogich\", \"error\");\n        console.error(\"Logout error:\", err);\n        this.$router.push(\"/login\");\n      });\n    },\n    gotoxprofile(username) {\n      this.$router.push(`/profile/${username}`);\n    },\n    async toggleJoin(group) {\n      try {\n        if (!group || !group.id) {\n          console.warn(\"toggleJoin called with invalid group\");\n          return;\n        }\n        const userRes = await fetch(\"http://20.56.138.63:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n        const userData = await userRes.json();\n        let endpoint;\n        let action;\n        let requestBody = {};\n        if (group.member_status === 'accepted') {\n          endpoint = \"http://20.56.138.63:8080/api/removememberfromgroup\";\n          action = \"leave\";\n          requestBody = {\n            group_id: group.id,\n            user_id: userData.id\n          };\n        } else if (group.member_status === 'pending') {\n          endpoint = \"http://20.56.138.63:8080/api/cancelgrouprequest\";\n          action = \"cancel request from\";\n          requestBody = {\n            group_id: group.id\n          };\n        } else if (group.member_status === 'invited') {\n          endpoint = \"http://20.56.138.63:8080/api/acceptgroupinvite\";\n          action = \"accept invitation to\";\n          requestBody = {\n            group_id: group.id,\n            action: 'accept'\n          };\n        } else {\n          endpoint = \"http://20.56.138.63:8080/api/requesttojoingroup\";\n          action = \"join\";\n          requestBody = {\n            group_id: group.id\n          };\n        }\n        const response = await fetch(endpoint, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(requestBody)\n        });\n        if (response.ok) {\n          if (group.member_status === 'accepted') {\n            group.member_status = null;\n            this.showNotification(\"Left group successfully\", \"success\");\n          } else if (group.member_status === 'pending') {\n            group.member_status = null;\n            this.showNotification(\"Request cancelled successfully\", \"success\");\n          } else if (group.member_status === 'invited') {\n            group.member_status = 'accepted';\n            this.showNotification(\"Invitation accepted successfully\", \"success\");\n          } else {\n            group.member_status = 'pending';\n            this.showNotification(\"Join request sent successfully\", \"success\");\n          }\n          await this.fetchGroups();\n        } else {\n          const errorText = await response.text();\n          console.error(`Failed to ${action} group: ${errorText}`);\n          this.showNotification(`Failed to ${action} group`, \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error updating group membership:\", error);\n        this.showNotification(\"Failed to update group membership\", \"error\");\n      }\n    },\n    goToProfile() {\n      this.$router.push(`/profile/${this.user.username}`);\n    },\n    goToMyGroups() {\n      this.$router.push('/mygroups');\n    },\n    goToGroup(groupId) {\n      this.$router.push(`/group/${groupId}`);\n    },\n    toggleChat() {\n      this.isChatExpanded = !this.isChatExpanded;\n    },\n    selectChatUser(user) {\n      console.log(\"user\", user.name);\n      this.selectedChatUser = user.name;\n      console.log(\"selectedChatUser\", this.selectedChatUser);\n      this.fetchMessages(this.selectedChatUser);\n    },\n    async fetchMessages(user) {\n      console.log(\"Fetching messages for use11:\", user);\n      try {\n        const res = await fetch(`http://20.56.138.63:8080/api/getmessages?sender=${this.user.username}&receiver=${user}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"Fetched messages:\", data);\n          const chatUser = this.chatUsers.find(u => u.name === user);\n          if (!chatUser) {\n            console.error(\"Chat user not found\");\n            return;\n          }\n          chatUser.messages = [];\n          if (data && Array.isArray(data)) {\n            chatUser.messages = data.map(msg => ({\n              id: Date.now() + Math.random(),\n              text: msg.message,\n              sender: msg.username === this.user.username ? \"self\" : \"other\",\n              timestamp: msg.time\n            }));\n            chatUser.messages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n          }\n          this.selectedChatUser = chatUser;\n          this.$nextTick(() => {\n            this.scrollToBottom();\n          });\n        } else {\n          console.error(\"Failed to fetch messages\");\n          this.showNotification(\"Failed to load messages\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n        this.showNotification(\"Error loading messages\", \"error\");\n      }\n    },\n    scrollToBottom() {\n      const messagesList = document.querySelector('.chat-messages-list');\n      if (messagesList) {\n        messagesList.scrollTop = messagesList.scrollHeight;\n      }\n    },\n    sendMessage() {\n      if (this.newMessage.trim() && this.selectedChatUser) {\n        this.currentMessage.type = \"message\";\n        this.currentMessage.receiver = this.selectedChatUser.name;\n        this.currentMessage.username = this.user.username;\n        this.currentMessage.message = this.newMessage;\n        if (this.socket) {\n          this.socket.send(JSON.stringify(this.currentMessage));\n        }\n        this.selectedChatUser.messages.push({\n          text: this.newMessage,\n          sender: \"self\",\n          timestamp: Date.now()\n        });\n        this.newMessage = \"\";\n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      }\n    },\n    formatTimestamp(timestamp) {\n      return new Date(timestamp).toLocaleString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      });\n    },\n    toggleComments(post) {\n      post.showComments = !post.showComments;\n      if (post.showComments && post.comments.length === 0) {\n        this.fetchComments(post);\n      }\n    },\n    getMessageClass(msg) {\n      return msg.sender === \"self\" ? \"self\" : \"other\";\n    },\n    async fetchGroups() {\n      try {\n        const response = await fetch(\"http://20.56.138.63:8080/api/getgroups\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (!data) {\n            return;\n          }\n          console.log(\"Fetched groups data:\", data);\n          this.groups = data.map(group => ({\n            id: group.id,\n            owner: group.creator_id,\n            is_owner: group.is_owner,\n            name: group.title,\n            description: group.description,\n            member_status: group.member_status\n          }));\n          console.log(\"Fetched groups:\", this.groups);\n          for (const group of this.groups) {\n            await this.checkGroupMembership(group.id);\n          }\n        } else {\n          this.showNotification(\"Failed to fetch groups\", \"error\");\n          console.error(\"Failed to fetch groups\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch groups\", \"error\");\n        console.error(\"Error fetching groups:\", error);\n      }\n    },\n    async checkGroupMembership(groupId) {\n      try {\n        if (!groupId) {\n          console.warn(\"checkGroupMembership called with invalid groupId\");\n          return;\n        }\n        const response = await fetch(`http://20.56.138.63:8080/api/ismember?group_id=${groupId}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(`Failed to check group membership: ${errorText}`);\n          this.showNotification(\"Failed to check group membership\", \"error\");\n          return;\n        }\n        const data = await response.json();\n        if (data && typeof data.is_member !== 'undefined') {\n          this.groupMembership[groupId] = data.is_member;\n        } else {\n          console.warn(\"Received invalid data format from server\");\n          this.groupMembership[groupId] = false;\n        }\n      } catch (error) {\n        console.error(\"Error checking group membership:\", error);\n        this.showNotification(\"Failed to check group membership\", \"error\");\n      }\n    },\n    async createGroup() {\n      try {\n        const userRes = await fetch(\"http://20.56.138.63:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n        const userData = await userRes.json();\n        this.newGroup.creator_id = userData.id;\n        const response = await fetch(\"http://20.56.138.63:8080/api/creategroups\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.newGroup)\n        });\n        if (response.ok) {\n          this.showNotification(\"Group created successfully\", \"success\");\n          const data = await response.json();\n          this.groups.push({\n            id: data.id,\n            name: data.title,\n            owner: this.user.username,\n            is_owner: true,\n            member_status: 'accepted',\n            description: data.description\n          });\n          this.showCreateGroup = false;\n          this.newGroup = {\n            title: \"\",\n            description: \"\",\n            creator_id: null\n          };\n        } else {\n          this.showNotification(\"Failed to create group\", \"error\");\n          console.error(\"Failed to create group\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to create group\", \"error\");\n        console.error(\"Error creating group:\", error);\n      }\n    },\n    async fetchPostsPrv() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/postsprv\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          if (!data || data.length === 0) {\n            console.warn(\"No posts privacy data found\");\n            return;\n          }\n          const map = {};\n          data.forEach(item => {\n            const postId = item.post_id.toString();\n            if (!map[postId]) {\n              map[postId] = [];\n            }\n            map[postId].push(item.username);\n          });\n          this.postsPrvMap = map;\n          console.log(\"postsPrvMap\", this.postsPrvMap);\n        }\n      } catch (error) {\n        console.error(\"Error fetching postsprv:\", error);\n      }\n    },\n    handleNotifClick() {\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        this.notifications.forEach(notif => {\n          if (!notif.is_read) {\n            this.markNotificationAsRead(notif.id);\n          }\n        });\n      }\n    },\n    handleNotifClose(e) {\n      if (!this.showNotifications) return;\n      const popup = this.$refs.notifPopup;\n      const btn = this.$refs.notifBtn;\n      if (!popup || !btn || !popup.contains(e.target) && !btn.contains(e.target)) {\n        this.showNotifications = false;\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/notifications\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"sassasaassa\", data);\n          this.notifications = Array.isArray(data) ? data.map(notif => ({\n            id: notif.id,\n            sender: notif.sender_username || 'Unknown',\n            text: notif.content || '',\n            time: notif.time || new Date().toISOString(),\n            type: notif.type || 'notification',\n            is_read: notif.is_read || false\n          })) : [];\n          this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n        } else {\n          this.notifications = [];\n          this.unreadNotificationCount = 0;\n        }\n      } catch (e) {\n        console.error('Error fetching notifications:', e);\n        this.notifications = [];\n        this.unreadNotificationCount = 0;\n      }\n    },\n    async markNotificationAsRead(notificationId) {\n      console.log(notificationId);\n      try {\n        const notification = this.notifications.find(n => n.id === notificationId);\n        if (!notification) return;\n        setTimeout(async () => {\n          try {\n            const res = await fetch(`http://20.56.138.63:8080/api/markasread`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify({\n                notificationId,\n                is_read: 1\n              })\n            });\n            console.log(\"res\", res);\n            if (res.ok) {\n              notification.is_read = true;\n              this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n            }\n          } catch (error) {\n            console.error('Error marking notification as read:', error);\n          }\n        }, 3000);\n      } catch (error) {\n        console.error('Error marking notification as read:', error);\n      }\n    },\n    handleImageUpload(event, postId = null) {\n      const file = event.target.files[0];\n      if (file) {\n        const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!allowedTypes.includes(file.type)) {\n          this.showNotification('Only JPEG, PNG, and GIF images are allowed', 'error');\n          event.target.value = '';\n          return;\n        }\n        const maxSize = 2 * 1024 * 1024;\n        if (file.size > maxSize) {\n          this.showNotification('Image file size must be less than 2MB', 'error');\n          event.target.value = '';\n          return;\n        }\n        if (postId) {\n          this.commentImages[postId] = {\n            file: file,\n            preview: URL.createObjectURL(file),\n            fileName: file.name\n          };\n        } else {\n          this.image = file;\n          this.imageFileName = file.name;\n          this.imagePreview = URL.createObjectURL(file);\n        }\n      } else {\n        if (postId) {\n          this.commentImages[postId] = null;\n        } else {\n          this.image = null;\n          this.imagePreview = null;\n          this.imageFileName = \"\";\n        }\n      }\n    },\n    formatTime(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diff = now - date;\n      if (diff < 60000) {\n        return 'just now';\n      }\n      if (diff < 3600000) {\n        const minutes = Math.floor(diff / 60000);\n        return `${minutes}m ago`;\n      }\n      if (diff < 86400000) {\n        const hours = Math.floor(diff / 3600000);\n        return `${hours}h ago`;\n      }\n      if (diff < 604800000) {\n        const days = Math.floor(diff / 86400000);\n        return `${days}d ago`;\n      }\n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    },\n    async fetchChatUsers() {\n      try {\n        const chatUsersRes = await fetch(\"http://20.56.138.63:8080/api/openchat\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (chatUsersRes.ok) {\n          const chatUsersData = await chatUsersRes.json();\n          console.log(\"Chat users data:\", chatUsersData);\n          if (!chatUsersData || chatUsersData.length === 0) {\n            return;\n          } else {\n            this.chatUsers = chatUsersData.map(user => ({\n              id: user.id,\n              fullname: user.full_name,\n              name: user.username,\n              messages: [],\n              avatar: user.avatar ? `http://20.56.138.63:8080/uploads/${user.avatar}` : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`\n            }));\n          }\n        } else {\n          this.showNotification(\"Failed to fetch chat users\", \"error\");\n          console.error(\"Failed to fetch chat users\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching chat users:\", error);\n        this.showNotification(\"Error fetching chat users\", \"error\");\n      }\n    },\n    async handleChatClick() {\n      if (!this.isChatExpanded) {\n        await this.fetchChatUsers();\n        this.selectedChatUser = null;\n      }\n      this.isChatExpanded = !this.isChatExpanded;\n    },\n    setupNotificationWebSocket() {\n      notificationWebSocket.onNotification('forum-page', notification => {\n        console.log('Received real-time notification:', notification);\n        this.fetchNotifications();\n      });\n    },\n    async fetchNotificationCount() {\n      try {\n        const res = await fetch('http://20.56.138.63:8080/api/notifications', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (res.ok) {\n          const data = await res.json();\n          this.unreadNotificationCount = (data || []).filter(n => !n.is_read).length;\n        }\n      } catch (err) {\n        console.error('Failed to fetch notification count:', err);\n      }\n    },\n    showFullImage(imageUrl) {\n      this.selectedImage = imageUrl;\n      this.showImageModal = true;\n    },\n    closeImageModal() {\n      this.showImageModal = false;\n      this.selectedImage = null;\n    }\n  },\n  mounted() {\n    this.setupNotificationWebSocket();\n    this.fetchPosts();\n    this.fetchNotifications();\n    this.fetchPostsPrv();\n    document.addEventListener('click', this.handleNotifClose);\n  },\n  beforeUnmount() {\n    notificationWebSocket.removeNotificationHandler('forum-page');\n    document.removeEventListener('click', this.handleNotifClose);\n  },\n  computed: {}\n};","map":{"version":3,"names":["notificationWebSocket","props","name","data","user","avatar","email","username","socket","newPost","author","title","content","image","status","imagePreview","imageFileName","posts","message","allowedUsers","selectedAllowedUsers","groups","otherUsers","followedUsers","isChatExpanded","newMessage","selectedChatUser","chatUsers","currentMessage","type","receiver","showCreateGroup","newGroup","description","creator_id","groupMembership","postsPrvMap","showNotifications","notifications","commentImages","unreadNotificationCount","showImageModal","selectedImage","created","$router","push","userRes","fetch","method","credentials","userData","json","console","log","Username","Email","toLowerCase","Avatar","initializeWebSocket","fetchPostsPrv","fetchPosts","fetchAllUsers","fetchAllowedUsers","fetchGroups","fetchNotifications","err","error","methods","res","ok","followers","map","showNotification","allUsersRes","allUsersData","length","fullname","followed","filter","chatUsersRes","chatUsersData","id","full_name","messages","WebSocket","onmessage","event","JSON","parse","find","u","Date","now","text","sender","timestamp","toISOString","$nextTick","scrollToBottom","onopen","onerror","onclose","post","authorAvatar","Author","Image","comments","newComment","showComments","commentError","errorText","fetchComments","Id","comment","ID","addComment","trim","formData","FormData","append","toString","file","body","submitPost","join","logout","then","catch","gotoxprofile","toggleJoin","group","warn","endpoint","action","requestBody","member_status","group_id","user_id","response","headers","stringify","goToProfile","goToMyGroups","goToGroup","groupId","toggleChat","selectChatUser","fetchMessages","chatUser","Array","isArray","msg","Math","random","time","sort","a","b","messagesList","document","querySelector","scrollTop","scrollHeight","sendMessage","send","formatTimestamp","toLocaleString","month","day","year","hour","minute","toggleComments","getMessageClass","owner","is_owner","checkGroupMembership","is_member","createGroup","forEach","item","postId","post_id","handleNotifClick","notif","is_read","markNotificationAsRead","handleNotifClose","e","popup","$refs","notifPopup","btn","notifBtn","contains","target","sender_username","n","notificationId","notification","setTimeout","handleImageUpload","files","allowedTypes","includes","value","maxSize","size","preview","URL","createObjectURL","fileName","formatTime","date","diff","minutes","floor","hours","days","toLocaleDateString","fetchChatUsers","handleChatClick","setupNotificationWebSocket","onNotification","fetchNotificationCount","showFullImage","imageUrl","closeImageModal","mounted","addEventListener","beforeUnmount","removeNotificationHandler","removeEventListener","computed"],"sources":["/Users/apple/Desktop/front/frontend-social/frontend/src/components/ForumPage.vue"],"sourcesContent":["<template>\n  <div class=\"forum-layout\">\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\">\n      <div class=\"sidebar-icons\">\n        <!-- Home Icon -->\n        <div class=\"sidebar-icon active\" title=\"Home\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 12L12 3l9 9\" />\n            <path d=\"M9 21V9h6v12\" />\n          </svg>\n        </div>\n        <!-- Profile Icon -->\n        <div class=\"sidebar-icon\" title=\"Profile\" @click=\"goToProfile\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"8\" r=\"4\" />\n            <path d=\"M4 21v-2a4 4 0 014-4h8a4 4 0 014 4v2\" />\n          </svg>\n        </div>\n        <!-- Groups Icon -->\n        <div class=\"sidebar-icon\" title=\"Groups\" @click=\"goToMyGroups\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\" />\n            <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            <path d=\"M23 21v-2a4 4 0 00-3-3.87\" />\n            <path d=\"M16 3.13a4 4 0 010 7.75\" />\n          </svg>\n        </div>\n        <!-- Settings Icon -->\n        <div class=\"sidebar-icon\" title=\"Settings\" @click=\"$router.push('/settings')\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\n            <path\n              d=\"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 01-2.83 2.83l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-4 0v-.09a1.65 1.65 0 00-1-1.51 1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 010-4h.09a1.65 1.65 0 001.51-1 1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 012.83-2.83l.06.06a1.65 1.65 0 001.82.33h.09A1.65 1.65 0 0011 3.09V3a2 2 0 014 0v.09a1.65 1.65 0 001 1.51h.09a1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 2.83l-.06.06a1.65 1.65 0 00-.33 1.82v.09A1.65 1.65 0 0020.91 11H21a2 2 0 010 4h-.09a1.65 1.65 0 00-1.51 1z\" />\n          </svg>\n        </div>\n        <div class=\"sidebar-icon\" ref=\"notifBtn\" title=\"Notifications\" @click=\"handleNotifClick\">\n          <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M18 8a6 6 0 10-12 0c0 7-3 9-3 9h18s-3-2-3-9\" />\n            <path d=\"M13.73 21a2 2 0 01-3.46 0\" />\n          </svg>\n          <span v-if=\"unreadNotificationCount > 0\" class=\"notif-badge\">{{ unreadNotificationCount }}</span>\n        </div>\n        <!-- Notification Popup -->\n        <div v-if=\"showNotifications\" ref=\"notifPopup\" class=\"notif-popup\">\n          <div class=\"notif-popup-header\">Notifications</div>\n          <ul class=\"notif-list\">\n            <li v-if=\"!notifications || notifications.length === 0\" class=\"notif-item empty\">No notifications yet.</li>\n            <li v-for=\"notif in notifications || []\" :key=\"notif.time + notif.sender\" class=\"notif-item\"\n              :class=\"{ 'unread': !notif.is_read }\" @click=\"markNotificationAsRead(notif.id)\">\n              \n              <span class=\"notif-text\">\n                <b>{{ notif.sender }}</b>\n                <span v-if=\"notif.type === 'message'\">sent you a message: {{ notif.text && notif.text.length > 40 ?\n                  notif.text.slice(0, 40) + '…' : notif.text }}</span>\n                <span v-else>{{ notif.text }}</span>\n              </span>\n              <span class=\"notif-time\">{{ formatTimestamp(notif.time) }}</span>\n            </li>\n          </ul>\n        </div>\n        <div class=\"sidebar-icon\" @click=\"logout\">\n          <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 16l4-4m0 0l-4-4m4 4H7\" />\n            <path d=\"M9 21H5a2 2 0 01-2-2V5a2 2 0 012-2h4\" />\n          </svg>\n        </div>\n      </div>\n    </aside>\n\n    <!-- Main Content Area -->\n    <div class=\"main-area\">\n      <!-- Top Avatar Bar -->\n      <div class=\"avatar-bar\">\n        <div class=\"avatar-list\">\n          <div v-for=\"other in otherUsers\" :key=\"other.name\" class=\"avatar-item\">\n            <img :src=\"other.avatar\" :alt=\"other.name\" @click=\"gotoxprofile(other.username)\" />\n            <span class=\"avatar-name\">{{ other.name.split(' ')[0] }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Create Post -->\n      <div class=\"create-post-card\">\n        <img class=\"profile-pic\" :src=\"user.avatar\" alt=\"Profile\" />\n        <form class=\"create-post-form\" @submit.prevent=\"submitPost\">\n          <input type=\"text\" v-model=\"newPost.title\" placeholder=\"What's on your mind?\" required />\n          <textarea v-model=\"newPost.content\" placeholder=\"Share your thoughts...\" required></textarea>\n          <label class=\"file-upload-label\">\n            <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n              <path d=\"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\" />\n              <polyline points=\"17 8 12 3 7 8\" />\n              <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\" />\n            </svg>\n            Upload Image\n            <input type=\"file\" @change=\"handleImageUpload\" accept=\"image/*\" />\n          </label>\n          <img v-if=\"imagePreview\" :src=\"imagePreview\" class=\"image-preview\" alt=\"Preview\" @click=\"showFullImage(imagePreview)\" />\n          <div class=\"create-post-row\">\n            <div class=\"status-select\">\n              <select v-model=\"newPost.status\" required>\n                <option value=\"public\">Public</option>\n                <option value=\"private\">Private</option>\n                <option value=\"semi-private\">Semi-Private</option>\n              </select>\n            </div>\n          </div>\n          <div v-if=\"newPost.status === 'semi-private'\" class=\"allowed-users-select\">\n            <div v-if=\"allowedUsers.length === 0\">No User is following you!</div>\n            <label v-else v-for=\"user in allowedUsers\" :key=\"user.username\" class=\"allowed-user-pill\">\n              <input type=\"checkbox\" v-model=\"selectedAllowedUsers\" :value=\"user.username\" />\n              <span class=\"custom-checkbox\">\n                <svg v-if=\"selectedAllowedUsers.includes(user.username)\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\"\n                  fill=\"none\">\n                  <circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#4f46e5\" />\n                  <path d=\"M5 9l3 3 5-5\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                </svg>\n                <svg v-else width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\n                  <circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#e5e7eb\" />\n                </svg>\n              </span>\n              <img :src=\"user.avatar\" :alt=\"user.username\" class=\"allowed-user-avatar\" />\n              <span class=\"allowed-user-name\">{{ user.username }}</span>\n            </label>\n          </div>\n          <button class=\"post-btn\" type=\"submit\">Post</button>\n          <div v-if=\"message\" class=\"message\">{{ message }}</div>\n        </form>\n      </div>\n\n      <!-- Posts Grid -->\n      <div class=\"posts-grid\">\n        <div v-if=\"posts.length === 0\" class=\"no-posts\">No posts available. Be the first to post!</div>\n        <div v-else class=\"post-card\" v-for=\"post in posts\" :key=\"post.ID\">\n          <div class=\"post-image\" v-if=\"post.imageUrl\">\n            <img :src=\"post.imageUrl\" alt=\"Post image\" @click=\"showFullImage(post.imageUrl)\" />\n          </div>\n          <div class=\"post-header\">\n            <img class=\"post-author-pic\" :src=\"post.authorAvatar\" alt=\"Author\" />\n            <div>\n              <h4>{{ post.Author }}</h4>\n              <p class=\"post-timestamp\">{{ formatTimestamp(post.Creation_date) }}</p>\n            </div>\n          </div>\n          <h3 class=\"post-title\">{{ post.Title }}</h3>\n          <p class=\"post-content\">{{ post.Content }}</p>\n          <div class=\"post-image\" v-if=\"post.Image\" :class=\"post.Image ? 'post-image' : ''\" @click=\"showFullImage(post.Image)\">\n            <img :src=\"post.Image\" alt=\"Post Image\" />\n          </div>\n          <div class=\"post-actions\">\n            <span class=\"icon-btn\" @click=\"toggleComments(post)\">\n              <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                <path d=\"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\" />\n              </svg>\n            </span>\n          </div>\n          <!-- Comments Section -->\n          <div v-if=\"post.showComments\" class=\"comments-section\">\n            <div v-if=\"post.comments.length === 0\" class=\"no-comments\">No comments yet. Be the first to comment!</div>\n            <div v-else class=\"comment\" v-for=\"comment in post.comments\" :key=\"comment.id\">\n              <div class=\"comment-header\">\n                <img class=\"comment-author-pic\" :src=\"comment.avatar\" alt=\"Comment Author\" />\n                <div>\n                  <h5>{{ comment.author }}</h5>\n                  <p class=\"comment-timestamp\">{{ formatTimestamp(comment.creation_date) }}</p>\n                </div>\n              </div>\n              <p class=\"comment-content\">{{ comment.comment }}</p>\n              <div class=\"comment-image\" v-if=\"comment.image\" :class=\"comment.image ? 'comment-image' : ''\" @click=\"showFullImage(comment.image)\">\n                <img class=\"comment-img\" :src=\"comment.image\" alt=\"Comment Image\" />\n              </div>\n            </div>\n            <form @submit.prevent=\"addComment(post)\" class=\"comment-form\">\n              <div class=\"comment-input-row\">\n                <textarea v-model=\"post.newComment\" placeholder=\"Add a comment...\" required></textarea>\n                <label class=\"file-upload-label\">\n                  <svg width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                    <path d=\"M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4\" />\n                    <polyline points=\"17 8 12 3 7 8\" />\n                    <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\" />\n                  </svg>\n                  <input type=\"file\" @change=\"handleImageUpload($event, post.Id)\" accept=\"image/*\" />\n                </label>\n                <button type=\"submit\" class=\"comment-submit-btn\" title=\"Add Comment\">\n                  <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                    <path d=\"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\" />\n                  </svg>\n                </button>\n              </div>\n              <div v-if=\"commentImages[post.Id] && commentImages[post.Id].fileName\" class=\"file-name-display\">\n                Selected file: {{ commentImages[post.Id].fileName }}\n              </div>\n              <img v-if=\"commentImages[post.Id] && commentImages[post.Id].preview\" :src=\"commentImages[post.Id].preview\" class=\"image-preview\" alt=\"Preview\" @click=\"showFullImage(commentImages[post.Id].preview)\" />\n              <div v-if=\"post.commentError\" class=\"comment-error\">{{ post.commentError }}</div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Right Sidebar -->\n    <aside class=\"rightbar\">\n      <div class=\"groups-section\">\n        <div class=\"groups-header\">\n          <span>Groups</span>\n          <button class=\"create-group-btn\" @click=\"showCreateGroup = true\" title=\"Create Group\">\n            <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\" />\n              <path d=\"M12 8v8M8 12h8\" />\n            </svg>\n          </button>\n          <!-- <button class=\"invite-group-btn\" @click=\"inviteToGroup\" title=\"Invite to Group\">\n            <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\"><path d=\"M21 10v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6\"/><path d=\"M3 6l9 6 9-6\"/></svg>\n          </button> -->\n        </div>\n        <ul class=\"groups-list\">\n          <li v-for=\"group in groups\" :key=\"group.id\" class=\"group-list-item group-clickable\"\n            @click=\"goToGroup(group.id)\">\n            <div class=\"group-info\">\n              <span class=\"group-avatar\">\n                <svg width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                  <path d=\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\" />\n                  <circle cx=\"9\" cy=\"7\" r=\"4\" />\n                  <path d=\"M23 21v-2a4 4 0 00-3-3.87\" />\n                  <path d=\"M16 3.13a4 4 0 010 7.75\" />\n                </svg>\n              </span>\n              <div class=\"group-details\">\n                <span class=\"group-title\">{{ group.name }}</span>\n                <span class=\"group-desc\">{{ group.description }}</span>\n                <span v-if=\"group.is_owner\" class=\"owner-badge\">Owner</span>\n              </div>\n            </div>\n            <button v-if=\"group.member_status == 'accepted' && !group.is_owner\" class=\"followed-btn\"\n              @click.stop=\"toggleJoin(group)\">\n              Leave\n            </button>\n            <button v-else-if=\"group.member_status == 'pending' && !group.is_owner\" class=\"pending-btn\"\n              @click.stop=\"toggleJoin(group)\">\n              Cancel Request\n            </button>\n            <button v-else-if=\"group.member_status == 'invited' && !group.is_owner\" class=\"pending-btn\"\n              @click.stop=\"toggleJoin(group)\">\n              Accept Invitation\n            </button>\n            <button v-else-if=\"!group.is_owner\" class=\"follow-btn\" @click.stop=\"toggleJoin(group)\">\n              Join\n            </button>\n          </li>\n        </ul>\n      </div>\n      <div class=\"users-section\">\n        <div class=\"users-header\">\n          <span>Followed Users: </span>\n        </div>\n        <ul class=\"users-list\">\n          <li v-for=\"followed in followedUsers\" :key=\"followed.name\" class=\"user-list-item\">\n            <img class=\"mini-profile-pic\" :src=\"followed.avatar\" alt=\"User\" @click=\"gotoxprofile(followed.username)\" />\n            <span class=\"user-name\" @click=\"gotoxprofile(followed.username)\">{{ followed.name }}</span>\n          </li>\n        </ul>\n      </div>\n    </aside>\n\n    <!-- Create Group Modal -->\n    <div v-if=\"showCreateGroup\" class=\"modal-overlay\">\n      <div class=\"modal-content create-group-modal\">\n        <h3>Create New Group</h3>\n        <form @submit.prevent=\"createGroup\">\n          <div class=\"form-group\">\n            <label for=\"groupTitle\">Group Title</label>\n            <input id=\"groupTitle\" v-model=\"newGroup.title\" type=\"text\" required placeholder=\"Enter group title\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"groupDescription\">Description</label>\n            <textarea id=\"groupDescription\" v-model=\"newGroup.description\" required\n              placeholder=\"Enter group description\"></textarea>\n          </div>\n          <div class=\"modal-buttons\">\n            <button type=\"submit\" class=\"submit-btn\">Create Group</button>\n            <button type=\"button\" class=\"cancel-btn\" @click=\"showCreateGroup = false\">\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- Chat Floating Button -->\n    <button class=\"chat-fab\" @click=\"handleChatClick\" title=\"Open Chat\">\n      <svg width=\"28\" height=\"28\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2.2\" stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n        <path d=\"M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z\" />\n      </svg>\n    </button>\n\n    <!-- Chat Modal -->\n    <div v-if=\"isChatExpanded\" class=\"chat-modal-overlay\" @click.self=\"isChatExpanded = false\">\n      <div class=\"chat-modal\">\n        <div class=\"chat-modal-header\">\n          <span>Chat</span>\n          <button class=\"chat-modal-close\" @click=\"isChatExpanded = false\">&times;</button>\n        </div>\n        <div class=\"chat-users-list\">\n          <div class=\"chat-users-title\">Chat Users</div>\n          <ul>\n            <li v-for=\"user in chatUsers\" :key=\"user.name\" @click=\"selectChatUser(user)\"\n              :class=\"{ selected: selectedChatUser && selectedChatUser.name === user.name }\">\n              <img :src=\"user.avatar\" :alt=\"user.name\" class=\"chat-user-avatar\" />\n              <span>{{ user.fullname }}</span>\n            </li>\n          </ul>\n        </div>\n        <div class=\"chat-messages-area\" v-if=\"selectedChatUser\">\n          <div class=\"chat-messages-title\">Chat with {{ selectedChatUser.name }}</div>\n          <div class=\"chat-messages-list\">\n            <div v-for=\"msg in selectedChatUser.messages\" :key=\"msg.id\"\n              :class=\"['chat-msg', msg.sender === 'self' ? 'self' : 'other']\">\n              <span>{{ msg.text }}</span>\n              <span class=\"chat-msg-time\">{{ formatTimestamp(msg.timestamp) }}</span>\n            </div>\n          </div>\n          <form class=\"chat-send-form\" @submit.prevent=\"sendMessage\">\n            <input v-model=\"newMessage\" placeholder=\"Type a message...\" required />\n            <button type=\"submit\" class=\"chat-send-btn\" title=\"Send\">\n              <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\" />\n                <polygon points=\"22 2 15 22 11 13 2 9 22 2\" />\n              </svg>\n            </button>\n          </form>\n        </div>\n        <div v-else class=\"chat-no-user\">Select a user to start chatting</div>\n      </div>\n    </div>\n\n    <!-- Add Image Preview Modal -->\n    <div v-if=\"showImageModal\" class=\"image-modal-overlay\" @click=\"closeImageModal\">\n      <div class=\"image-modal-content\" @click.stop>\n        <img :src=\"selectedImage\" alt=\"Full size image\" />\n        <button class=\"close-modal-btn\" @click=\"closeImageModal\">&times;</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { notificationWebSocket } from '../services/notificationWebSocket.js';\n\nexport default {\n  props: [\"showNotification\"],\n  name: \"ForumPage\",\n  data() {\n    return {\n      user: {\n        avatar: \"\",\n        name: \"\",\n        email: \"\",\n        username: \"guest\",\n      },\n      socket: null,\n      newPost: {\n        author: \"\",\n        title: \"\",\n        content: \"\",\n        image: \"\",\n        status: \"public\", \n      },\n      image: null,\n      imagePreview: null,\n      imageFileName: \"\", \n      posts: [],\n      message: \"\",\n      allowedUsers: [],\n      selectedAllowedUsers: [],\n      groups: [],\n      otherUsers: [],\n      followedUsers: [], \n      \n      isChatExpanded: false,\n      newMessage: \"\",\n      selectedChatUser: null,\n      chatUsers: [],\n      currentMessage: {\n        type: \"\",\n        message: \"\",\n        receiver: \"\",\n        username: \"\",\n      },\n      showCreateGroup: false,\n      newGroup: {\n        title: \"\",\n        description: \"\",\n        creator_id: null,\n      },\n      groupMembership: {},\n      postsPrvMap: {},\n      showNotifications: false,\n      notifications: [],\n      commentImages: {},\n      unreadNotificationCount: 0,\n      showImageModal: false,\n      selectedImage: null,\n    };\n  },\n  async created() {\n    this.$router.push('/home');\n    try {\n      const userRes = await fetch(\"http://20.56.138.63:8080/api/info\", {\n        method: \"GET\",\n        credentials: \"include\",\n      });\n      const userData = await userRes.json();\n      console.log(\"userData\", userData);\n\n      this.user.name = userData.Username;\n      this.user.email = userData.Email;\n      this.user.username = userData.Username.toLowerCase();\n\n      if (userData.Avatar) {\n        this.user.avatar = `http://20.56.138.63:8080/uploads/${userData.Avatar}`;\n      } else {\n        this.user.avatar = `https://api.dicebear.com/7.x/avataaars/svg?seed=${userData.Username}`;\n      }\n      \n      this.initializeWebSocket();\n      await this.fetchPostsPrv();\n      await this.fetchPosts();\n      await this.fetchAllUsers();\n      await this.fetchAllowedUsers();\n      await this.fetchGroups();\n      await this.fetchNotifications();\n    } catch (err) {\n      console.error(\"Initialization failed:\", err);\n      this.$router.push(\"/login\");\n    }\n  },\n  methods: {\n    async fetchAllowedUsers() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/postsprivacy\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n          if (!data.followers) {\n            return;\n          }\n          console.log(\"Allowed users data:\", data);\n\n          this.allowedUsers = data.followers.map((user) => ({\n            username: user,\n            avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${user}`,\n          }));\n        } else {\n          this.showNotification(\"Failed to fetch allowed users\", \"error\");\n          console.error(\"Failed to fetch allowed users\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch allowed users\", \"error\");\n        console.error(\"Error fetching allowed users:\", error);\n      }\n      console.log(\"Allowed users:\", this.allowedUsers);\n\n    },\n    async fetchAllUsers() {\n      try {\n        \n        const allUsersRes = await fetch(\"http://20.56.138.63:8080/api/allusers\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (allUsersRes.ok) {\n          const allUsersData = await allUsersRes.json();\n          if ((!allUsersData) || allUsersData.length === 0) {\n            return;\n          }\n          console.log(\"All users data:\", allUsersData);\n          this.otherUsers = allUsersData.map((user) => ({\n            name: user.fullname,\n            username: user.username,\n            avatar: user.avatar\n              ? `http://20.56.138.63:8080/uploads/${user.avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            followed: user.followed || false, \n          }));\n\n          \n          this.followedUsers = this.otherUsers.filter(\n            (user) => user.followed\n          );\n          console.log(\"Followed users:\", this.followedUsers);\n\n        }\n\n        \n        const chatUsersRes = await fetch(\"http://20.56.138.63:8080/api/openchat\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (chatUsersRes.ok) {\n          const chatUsersData = await chatUsersRes.json();\n          console.log(\"Chat users data:\", chatUsersData);\n          if (!chatUsersData || chatUsersData.length === 0) {\n            return;\n          } else {\n            this.chatUsers = chatUsersData.map((user) => ({\n              id: user.id,\n              fullname: user.full_name,\n              name: user.username,\n              messages: [],\n              avatar:   user.avatar \n                ? `http://20.56.138.63:8080/uploads/${user.avatar}`\n                : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            }));\n            \n            \n          }\n        } else {\n          this.showNotification(\"Failed to fetch chat users\", \"error\");\n          console.error(\"Failed to fetch chat users\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch chat users\", \"error\");\n        console.error(\"Error fetching users:\", error);\n      }\n    },\n    initializeWebSocket() {\n      this.socket = new WebSocket(\"ws://20.56.138.63:8080/ws\");\n\n      this.socket.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.type == \"message\" ){\n          this.showNotification(\"New message from \" + data.username, \"success\");\n        }\n        console.log(\"Received message:\", data);\n\n        \n        const user = this.chatUsers.find((u) => u.name === data.username);\n        if (user) {\n          this.showNotification(\"New message from \" + data.username, \"success\");\n          user.messages.push({\n            id: Date.now(),\n            text: data.message,\n            sender: \"other\",\n            timestamp: new Date().toISOString() \n          });\n          \n          \n          if (this.selectedChatUser && this.selectedChatUser.name === data.username) {\n            this.$nextTick(() => {\n              this.scrollToBottom();\n            });\n          }\n        }\n      };\n      this.socket.onopen = () => {\n        console.log(\"WebSocket connected\");\n      };\n\n      this.socket.onerror = (error) => {\n        console.error(\"WebSocket error:\", error);\n      };\n\n      this.socket.onclose = () => {\n        console.log(\"WebSocket disconnected\");\n      };\n    },\n    async fetchPosts() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/getposts\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n\n          console.log(\"data\", data);\n\n          \n          if (!data) {\n            return;\n          }\n          this.posts = data.map((post) => ({\n            ...post,\n            authorAvatar: post.Avatar\n              ? `http://20.56.138.63:8080/uploads/${post.Avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${post.Author}`,\n            Image: post.Image, \n            comments: [],\n            newComment: \"\",\n            showComments: false,\n            commentError: \"\",\n          }));\n        } else {\n          const errorText = await res.text();\n          this.showNotification(errorText || \"Failed to fetch posts\", \"error\");\n          console.error(\"Failed to fetch posts:\", errorText);\n        }\n      } catch (error) {\n        this.showNotification(error.message || \"Failed to fetch posts\", \"error\");\n        console.error(\"Error fetching posts:\", error);\n      }\n    },\n    async fetchComments(post) {\n      try {\n        const res = await fetch(\n          `http://20.56.138.63:8080/api/getcomments?post_id=${post.Id}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n        if (res.ok) {\n          const data = await res.json();\n          console.log(data);\n          if (!data) {\n            return;\n          }\n          post.comments = data.map((comment) => ({\n            ...comment,\n            avatar: comment.avatar\n              ? `http://20.56.138.63:8080/uploads/${comment.avatar}`\n              : `https://api.dicebear.com/7.x/avataaars/svg?seed=${comment.author}`,\n            image: comment.image ? `http://20.56.138.63:8080/uploads/${comment.image}` : null,\n          }));\n\n        } else {\n          this.showNotification(\"Failed to fetch comments\", \"error\");\n          console.error(\"Failed to fetch comments for post\", post.ID);\n          post.commentError = \"Failed to load comments.\";\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch comments\", \"error\");\n        console.error(\"Error fetching comments:\", error);\n      }\n    },\n    async addComment(post) {\n      if (!post.newComment.trim()) {\n        post.commentError = \"Comment cannot be empty.\";\n        return;\n      }\n\n      \n      if (post.newComment.trim().length < 1) {\n        post.commentError = \"Comment must be at least 1 character long.\";\n        return;\n      }\n\n      if (post.newComment.trim().length > 500) {\n        post.commentError = \"Comment must not exceed 500 characters.\";\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"post_id\", post.Id.toString());\n      formData.append(\"comment\", post.newComment.trim());\n\n      \n      if (this.commentImages[post.Id] && this.commentImages[post.Id].file) {\n        formData.append(\"image\", this.commentImages[post.Id].file);\n      }\n\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/addcomments\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData\n        });\n\n        if (res.ok) {\n          post.commentError = \"\";\n          \n          post.newComment = \"\";\n          \n          this.commentImages[post.Id] = null;\n          this.showNotification(\"Comment added successfully\", \"success\");\n          await this.fetchComments(post);\n        } else {\n          this.showNotification(\"Failed to add comment\", \"error\");\n          console.error(\"Failed to add comment\");\n          post.commentError = \"Failed to add comment.\";\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to add comment\", \"error\");\n        console.error(\"Error adding comment:\", error);\n        post.commentError = \"Error adding comment.\";\n      }\n    },\n    async submitPost() {\n      if (this.newPost.title.length < 1) {\n        this.message = \"Title must be at least 1 characters long.\";\n        this.showNotification(\"Title must be at least 1 characters long.\", \"error\");\n        return;\n      }\n\n      if (this.newPost.title.length > 50 ) {\n        this.message = \"Title must not exceed 50 characters.\";\n        this.showNotification(\"Title must not exceed 100 characters.\", \"error\");\n        return;\n      }\n\n      if (this.newPost.content.length < 1) {\n        this.message = \"Content must be at least 1 characters long.\";\n        this.showNotification(\"Content must be at least 10 characters long.\", \"error\");\n        return;\n      }\n\n      if (this.newPost.content.length > 1000) {\n        this.message = \"Content must not exceed 1000 characters.\";\n        this.showNotification(\"Content must not exceed 1000 characters.\", \"error\");\n        return;\n      }\n\n      try {\n        const formData = new FormData();\n        formData.append(\"title\", this.newPost.title);\n        formData.append(\"content\", this.newPost.content);\n        formData.append(\"status\", this.newPost.status);\n        formData.append(\"allowed_users\", this.selectedAllowedUsers.join(\",\"));\n        if (this.image) {\n          formData.append(\"image\", this.image);\n        }\n\n        const res = await fetch(\"http://20.56.138.63:8080/api/posts\", {\n          method: \"POST\",\n          credentials: \"include\",\n          body: formData\n        });\n        console.log(this.selectedAllowedUsers);\n\n        if (res.ok) {\n          this.newPost = {\n            title: \"\",\n            content: \"\",\n            status: \"public\"\n          };\n          this.selectedAllowedUsers = [];\n          this.image = null;\n          this.imagePreview = null;\n          this.imageFileName = \"\";\n          this.showNotification(\"Post created successfully!\", \"success\");\n          await this.fetchPosts();\n        } else {\n          const errorText = await res.text();\n          this.showNotification(\"Failed to create post: \"+ errorText, \"error\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to create post\", \"error\");\n        console.error(\"Post creation failed:\", error);\n        this.message = \"Error submitting post.\";\n      }\n    },\n    logout() {\n      fetch(\"http://20.56.138.63:8080/api/auth/logout\", {\n        method: \"POST\",\n        credentials: \"include\",\n      })\n        .then((res) => {\n          if (res.ok) {\n            this.showNotification(\"Logged out successfully\", \"success\");\n            this.$router.push(\"/login\");\n          } else {\n            this.showNotification(\"Failed to logout\", \"error\");\n            this.$router.push(\"/login\");\n          }\n        })\n        .catch((err) => {\n          this.showNotification(\"wax nta hbit rak mamlogich\", \"error\");\n          console.error(\"Logout error:\", err);\n          this.$router.push(\"/login\");\n        });\n    },\n    gotoxprofile(username) {\n      this.$router.push(`/profile/${username}`);\n    },\n    async toggleJoin(group) {\n      try {\n        if (!group || !group.id) {\n          console.warn(\"toggleJoin called with invalid group\");\n          return;\n        }\n\n        const userRes = await fetch(\"http://20.56.138.63:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        \n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n        \n        const userData = await userRes.json();\n\n        let endpoint;\n        let action;\n        let requestBody = {};\n\n        if (group.member_status === 'accepted') {\n          endpoint = \"http://20.56.138.63:8080/api/removememberfromgroup\";\n          action = \"leave\";\n          requestBody = {\n            group_id: group.id,\n            user_id: userData.id  \n          };\n        } else if (group.member_status === 'pending') {\n          endpoint = \"http://20.56.138.63:8080/api/cancelgrouprequest\";\n          action = \"cancel request from\";\n          requestBody = {\n            group_id: group.id\n          };\n        } else if (group.member_status === 'invited') {\n          endpoint = \"http://20.56.138.63:8080/api/acceptgroupinvite\";\n          action = \"accept invitation to\";\n          requestBody = {\n            group_id: group.id,\n            action: 'accept'\n          };\n        } else {\n          endpoint = \"http://20.56.138.63:8080/api/requesttojoingroup\";\n          action = \"join\";\n          requestBody = {\n            group_id: group.id\n          };\n        }\n\n        const response = await fetch(endpoint, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(requestBody),\n        });\n\n        if (response.ok) {\n          if (group.member_status === 'accepted') {\n            group.member_status = null;\n            this.showNotification(\"Left group successfully\", \"success\");\n          } else if (group.member_status === 'pending') {\n            group.member_status = null;\n            this.showNotification(\"Request cancelled successfully\", \"success\");\n          } else if (group.member_status === 'invited') {\n            group.member_status = 'accepted';\n            this.showNotification(\"Invitation accepted successfully\", \"success\");\n          } else {\n            group.member_status = 'pending';\n            this.showNotification(\"Join request sent successfully\", \"success\");\n          }\n\n          await this.fetchGroups();\n        } else {\n          const errorText = await response.text();\n          console.error(`Failed to ${action} group: ${errorText}`);\n          this.showNotification(`Failed to ${action} group`, \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error updating group membership:\", error);\n        this.showNotification(\"Failed to update group membership\", \"error\");\n      }\n    },\n    goToProfile() {\n      this.$router.push(`/profile/${this.user.username}`);\n    },\n    goToMyGroups() {\n      this.$router.push('/mygroups');\n    },\n    goToGroup(groupId) {\n      this.$router.push(`/group/${groupId}`);\n    },\n    toggleChat() {\n      this.isChatExpanded = !this.isChatExpanded;\n    },\n    selectChatUser(user) {\n      console.log(\"user\", user.name);\n      this.selectedChatUser = user.name;\n      console.log(\"selectedChatUser\", this.selectedChatUser);\n      this.fetchMessages(this.selectedChatUser);\n    },\n    async fetchMessages(user) {\n      console.log(\"Fetching messages for use11:\", user);\n      \n      try {\n        const res = await fetch(\n          `http://20.56.138.63:8080/api/getmessages?sender=${this.user.username}&receiver=${user}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"Fetched messages:\", data);\n\n          const chatUser = this.chatUsers.find(u => u.name === user);\n          if (!chatUser) {\n            console.error(\"Chat user not found\");\n            return;\n          }\n\n          \n          chatUser.messages = [];\n\n          \n          if (data && Array.isArray(data)) {\n            chatUser.messages = data.map(msg => ({\n              id: Date.now() + Math.random(), \n              text: msg.message,\n              sender: msg.username === this.user.username ? \"self\" : \"other\",\n              timestamp: msg.time\n            }));\n\n            \n            chatUser.messages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n          }\n\n          \n          this.selectedChatUser = chatUser;\n          \n          \n          this.$nextTick(() => {\n            this.scrollToBottom();\n          });\n        } else {\n          console.error(\"Failed to fetch messages\");\n          this.showNotification(\"Failed to load messages\", \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n        this.showNotification(\"Error loading messages\", \"error\");\n      }\n    },\n    scrollToBottom() {\n      const messagesList = document.querySelector('.chat-messages-list');\n      if (messagesList) {\n        messagesList.scrollTop = messagesList.scrollHeight;\n      }\n    },\n    sendMessage() {\n      if (this.newMessage.trim() && this.selectedChatUser) {\n        this.currentMessage.type = \"message\";\n        this.currentMessage.receiver = this.selectedChatUser.name;\n        this.currentMessage.username = this.user.username;\n        this.currentMessage.message = this.newMessage;\n\n        \n        if (this.socket) {\n          this.socket.send(JSON.stringify(this.currentMessage));\n        }\n\n        \n        this.selectedChatUser.messages.push({\n          text: this.newMessage,\n          sender: \"self\",\n          timestamp: Date.now()\n        });\n\n        this.newMessage = \"\";\n        \n        \n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      }\n    },\n    formatTimestamp(timestamp) {\n      return new Date(timestamp).toLocaleString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    },\n    toggleComments(post) {\n      post.showComments = !post.showComments;\n      if (post.showComments && post.comments.length === 0) {\n        this.fetchComments(post);\n      }\n    },\n    getMessageClass(msg) {\n      return msg.sender === \"self\" ? \"self\" : \"other\";\n    },\n    async fetchGroups() {\n      try {\n        const response = await fetch(\"http://20.56.138.63:8080/api/getgroups\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          if (!data) {\n            return;\n          }\n          console.log(\"Fetched groups data:\", data);\n          this.groups = data.map((group) => ({\n            id: group.id,\n            owner: group.creator_id,\n            is_owner: group.is_owner,\n            name: group.title,\n            description: group.description,\n            member_status: group.member_status\n          }));\n          console.log(\"Fetched groups:\", this.groups);\n\n          \n          for (const group of this.groups) {\n            await this.checkGroupMembership(group.id);\n          }\n        } else {\n          this.showNotification(\"Failed to fetch groups\", \"error\");\n          console.error(\"Failed to fetch groups\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to fetch groups\", \"error\");\n        console.error(\"Error fetching groups:\", error);\n      }\n    },\n    async checkGroupMembership(groupId) {\n      try {\n        if (!groupId) {\n          console.warn(\"checkGroupMembership called with invalid groupId\");\n          return;\n        }\n        const response = await fetch(\n          `http://20.56.138.63:8080/api/ismember?group_id=${groupId}`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n          }\n        );\n\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(`Failed to check group membership: ${errorText}`);\n          this.showNotification(\"Failed to check group membership\", \"error\");\n          return;\n        }\n\n        const data = await response.json();\n        if (data && typeof data.is_member !== 'undefined') {\n          this.groupMembership[groupId] = data.is_member;\n        } else {\n          console.warn(\"Received invalid data format from server\");\n          this.groupMembership[groupId] = false; \n        }\n      } catch (error) {\n        console.error(\"Error checking group membership:\", error);\n        this.showNotification(\"Failed to check group membership\", \"error\");\n      }\n    },\n    async createGroup() {\n      try {\n        const userRes = await fetch(\"http://20.56.138.63:8080/api/info\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        \n        if (!userRes.ok) {\n          this.showNotification(\"Failed to get user information\", \"error\");\n          return;\n        }\n        \n        const userData = await userRes.json();\n        this.newGroup.creator_id = userData.id; \n\n        const response = await fetch(\"http://20.56.138.63:8080/api/creategroups\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(this.newGroup),\n        });\n\n        if (response.ok) {\n          this.showNotification(\"Group created successfully\", \"success\");\n          const data = await response.json();\n          this.groups.push({\n            id: data.id,\n            name: data.title,\n            owner: this.user.username,\n            is_owner: true,\n            member_status: 'accepted',\n            description: data.description,\n          });\n          this.showCreateGroup = false;\n          this.newGroup = {\n            title: \"\",\n            description: \"\",\n            creator_id: null,\n          };\n        } else {\n          this.showNotification(\"Failed to create group\", \"error\");\n          console.error(\"Failed to create group\");\n        }\n      } catch (error) {\n        this.showNotification(\"Failed to create group\", \"error\");\n        console.error(\"Error creating group:\", error);\n      }\n    },\n    async fetchPostsPrv() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/postsprv\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n          if (!data || data.length === 0) {\n            console.warn(\"No posts privacy data found\");\n            return;\n          }\n          const map = {};\n          data.forEach(item => {\n            const postId = item.post_id.toString();\n            if (!map[postId]) {\n              map[postId] = [];\n            }\n            map[postId].push(item.username);\n          });\n          this.postsPrvMap = map;\n          console.log(\"postsPrvMap\", this.postsPrvMap);\n        }\n      } catch (error) {\n        console.error(\"Error fetching postsprv:\", error);\n      }\n    },\n    handleNotifClick() {\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        this.notifications.forEach(notif => {\n          if (!notif.is_read) {\n            this.markNotificationAsRead(notif.id);\n          }\n        });\n      }\n    },\n    handleNotifClose(e) {\n      if (!this.showNotifications) return;\n      const popup = this.$refs.notifPopup;\n      const btn = this.$refs.notifBtn;\n      if (\n        (!popup || !btn) ||\n        (!popup.contains(e.target) && !btn.contains(e.target))\n      ) {\n        this.showNotifications = false;\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const res = await fetch(\"http://20.56.138.63:8080/api/notifications\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (res.ok) {\n          const data = await res.json();\n          console.log(\"sassasaassa\", data);\n\n          this.notifications = Array.isArray(data)\n            ? data.map(notif => ({\n              id: notif.id,\n              sender: notif.sender_username || 'Unknown',\n              text: notif.content || '',\n              time: notif.time || new Date().toISOString(),\n              type: notif.type || 'notification',\n              is_read: notif.is_read || false\n            }))\n            : [];\n          \n          \n          this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n        } else {\n          this.notifications = [];\n          this.unreadNotificationCount = 0;\n        }\n      } catch (e) {\n        console.error('Error fetching notifications:', e);\n        this.notifications = [];\n        this.unreadNotificationCount = 0;\n      }\n    },\n    async markNotificationAsRead(notificationId) {\n      console.log(notificationId);\n      \n      try {\n        \n        const notification = this.notifications.find(n => n.id === notificationId);\n        if (!notification) return;\n\n        \n        setTimeout(async () => {\n          try {\n            const res = await fetch(`http://20.56.138.63:8080/api/markasread`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify({\n                notificationId,\n                is_read: 1\n              })\n\n            });\n            console.log(\"res\", res);\n            if (res.ok) {\n              notification.is_read = true;\n              \n              this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n            }\n          } catch (error) {\n            console.error('Error marking notification as read:', error);\n          }\n        }, 3000); \n      } catch (error) {\n        console.error('Error marking notification as read:', error);\n      }\n    },\n    handleImageUpload(event, postId = null) {\n      const file = event.target.files[0];\n      if (file) {\n      const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n      if (!allowedTypes.includes(file.type)) {\n          this.showNotification('Only JPEG, PNG, and GIF images are allowed', 'error');\n          event.target.value = ''; \n          return;\n        }\n        \n        const maxSize = 2 * 1024 * 1024; \n        if (file.size > maxSize) {\n          this.showNotification('Image file size must be less than 2MB', 'error');\n          event.target.value = ''; \n          return;\n        }\n\n        if (postId) {\n          \n          this.commentImages[postId] = {\n            file: file,\n            preview: URL.createObjectURL(file),\n            fileName: file.name\n          };\n        } else {\n          \n          this.image = file;\n          this.imageFileName = file.name;\n          this.imagePreview = URL.createObjectURL(file);\n        }\n      } else {\n        if (postId) {\n          \n          this.commentImages[postId] = null;\n        } else {\n          \n          this.image = null;\n          this.imagePreview = null;\n          this.imageFileName = \"\";\n        }\n      }\n    },\n    formatTime(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diff = now - date;\n\n      \n      if (diff < 60000) {\n        return 'just now';\n      }\n      \n      if (diff < 3600000) {\n        const minutes = Math.floor(diff / 60000);\n        return `${minutes}m ago`;\n      }\n      \n      if (diff < 86400000) {\n        const hours = Math.floor(diff / 3600000);\n        return `${hours}h ago`;\n      }\n      \n      if (diff < 604800000) {\n        const days = Math.floor(diff / 86400000);\n        return `${days}d ago`;\n      }\n      \n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    },\n    async fetchChatUsers() {\n      try {\n        const chatUsersRes = await fetch(\"http://20.56.138.63:8080/api/openchat\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (chatUsersRes.ok) {\n          const chatUsersData = await chatUsersRes.json();\n          console.log(\"Chat users data:\", chatUsersData);\n          if (!chatUsersData || chatUsersData.length === 0) {\n            return;\n          } else {\n            this.chatUsers = chatUsersData.map((user) => ({\n              id: user.id,\n              fullname: user.full_name,\n              name: user.username,\n              messages: [],\n              avatar: user.avatar \n                ? `http://20.56.138.63:8080/uploads/${user.avatar}`\n                : `https://api.dicebear.com/7.x/avataaars/svg?seed=${user.username}`,\n            }));\n          }\n        } else {\n          this.showNotification(\"Failed to fetch chat users\", \"error\");\n          console.error(\"Failed to fetch chat users\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching chat users:\", error);\n        this.showNotification(\"Error fetching chat users\", \"error\");\n      }\n    },\n\n    async handleChatClick() {\n      if (!this.isChatExpanded) {\n        await this.fetchChatUsers();\n        this.selectedChatUser = null; \n      }\n      this.isChatExpanded = !this.isChatExpanded;\n    },\n    setupNotificationWebSocket() {\n      \n      notificationWebSocket.onNotification('forum-page', (notification) => {\n        console.log('Received real-time notification:', notification);\n        \n        \n        this.fetchNotifications();\n      });\n    },\n    async fetchNotificationCount() {\n      try {\n        const res = await fetch('http://20.56.138.63:8080/api/notifications', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (res.ok) {\n          const data = await res.json();\n          \n          this.unreadNotificationCount = (data || []).filter(n => !n.is_read).length;\n        }\n      } catch (err) {\n        console.error('Failed to fetch notification count:', err);\n      }\n    },\n    showFullImage(imageUrl) {\n      this.selectedImage = imageUrl;\n      this.showImageModal = true;\n    },\n    closeImageModal() {\n      this.showImageModal = false;\n      this.selectedImage = null;\n    },\n  },\n  mounted() {\n    \n    this.setupNotificationWebSocket();\n    \n    this.fetchPosts();\n    this.fetchNotifications();\n    this.fetchPostsPrv();\n    document.addEventListener('click', this.handleNotifClose);\n  },\n  beforeUnmount() {\n    \n    notificationWebSocket.removeNotificationHandler('forum-page');\n    document.removeEventListener('click', this.handleNotifClose);\n  },\n  computed: {\n  },\n};\n</script>\n\n<style scoped>\n/* Layout */\n.forum-layout {\n  display: flex;\n  min-height: 100vh;\n  background: #eaf1fb;\n  font-family: 'Inter', sans-serif;\n}\n\n/* Sidebar */\n.sidebar {\n  width: 70px;\n  background: #23263a;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem 0 1rem 0;\n  border-radius: 1.5rem 0 0 1.5rem;\n  box-shadow: 2px 0 16px rgba(35, 38, 58, 0.08);\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 100;\n}\n\n.sidebar-icons {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n  align-items: center;\n}\n\n.sidebar-icon {\n  width: 48px;\n  height: 48px;\n  display: flex;\n  \n  align-items: center;\n  justify-content: center;\n  border-radius: 1rem;\n  \n  color: #fff;\n  font-size: 1.5rem;\n  opacity: 0.7;\n  cursor: pointer;\n}\n\n.sidebar-icon.active,\n.sidebar-icon:hover {\n  background: #35395a;\n  opacity: 1;\n}\n\n/* Main Area */\n.main-area {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 2rem 2rem 2rem 1.5rem;\n  min-width: 0;\n  margin-left: 70px;\n}\n\n/* Top Avatar Bar */\n.avatar-bar {\n  width: 100%;\n  margin-bottom: 1.5rem;\n  overflow-x: auto;\n  padding-bottom: 0.5rem;\n}\n\n.avatar-list {\n  display: flex;\n  gap: 1.5rem;\n  align-items: center;\n  padding: 0.5rem 0;\n  min-width: min-content;\n}\n\n.avatar-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  min-width: 56px;\n}\n\n.avatar-item img {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  border: 2px solid #fff;\n  box-shadow: 0 2px 8px rgba(35, 38, 58, 0.08);\n  margin-bottom: 0.25rem;\n  object-fit: cover;\n  transition: transform 0.2s;\n}\n\n.avatar-item img:hover {\n  transform: scale(1.08);\n}\n\n.avatar-name {\n  font-size: 0.8rem;\n  color: #23263a;\n  opacity: 0.7;\n  text-align: center;\n  max-width: 60px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.avatar-item.see-all .see-all-btn {\n  width: 48px;\n  height: 48px;\n  background: #f3f4f8;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #23263a;\n  font-size: 0.9rem;\n  font-weight: 600;\n  border: 1px solid #e5e7eb;\n  margin-bottom: 0.25rem;\n  cursor: pointer;\n}\n\n/* Custom scrollbar for avatar bar */\n.avatar-bar::-webkit-scrollbar {\n  height: 6px;\n}\n\n.avatar-bar::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.avatar-bar::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.avatar-bar::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n/* Create Post Card */\n.create-post-card {\n  display: flex;\n  align-items: flex-start;\n  background: #fff;\n  border-radius: 1.25rem;\n  box-shadow: 0 4px 24px rgba(35, 38, 58, 0.08);\n  padding: 1.5rem 2rem;\n  margin-bottom: 2rem;\n  gap: 1.5rem;\n}\n\n.create-post-card .profile-pic {\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-top: 0.5rem;\n}\n\n.create-post-form {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.create-post-form input,\n.create-post-form textarea {\n\n  border: none;\n  background: #f3f4f8;\n  border-radius: 0.75rem;\n  padding: 0.9rem 1.2rem;\n  font-size: 1rem;\n  margin-bottom: 0.2rem;\n  resize: none;\n}\n\n.create-post-form textarea {\n  min-height: 70px;\n  resize: vertical;\n}\n\n.create-post-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n}\n\n\n.status-select select {\n  background: #f3f4f8;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.3rem 1rem;\n  font-size: 0.95rem;\n  color: #23263a;\n}\n\n.allowed-users-select {\n  display: flex;\n  gap: 0.7rem;\n  flex-wrap: wrap;\n  margin-bottom: 0.5rem;\n}\n\n.allowed-user-pill {\n  display: flex;\n  align-items: center;\n  background: #f3f4f8;\n  border-radius: 2rem;\n  padding: 0.25rem 1rem 0.25rem 0.4rem;\n  font-size: 0.97rem;\n  color: #23263a;\n  cursor: pointer;\n  gap: 0.5rem;\n  box-shadow: 0 1px 4px rgba(35, 38, 58, 0.06);\n  border: 1.5px solid #e5e7eb;\n  transition: border 0.18s, box-shadow 0.18s, background 0.18s;\n  position: relative;\n}\n\n.allowed-user-pill:hover,\n.allowed-user-pill:focus-within {\n  border: 1.5px solid #4f46e5;\n  background: #e0e7ff;\n  box-shadow: 0 2px 8px rgba(79, 70, 229, 0.10);\n}\n\n.allowed-user-pill input[type=\"checkbox\"] {\n  display: none;\n}\n\n.custom-checkbox {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 22px;\n  height: 22px;\n  margin-right: 0.1rem;\n}\n\n.allowed-user-avatar {\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 1.5px solid #e5e7eb;\n  background: #fff;\n}\n\n.allowed-user-name {\n  font-weight: 500;\n  color: #23263a;\n  font-size: 0.97rem;\n  margin-left: 0.1rem;\n}\n\n.post-btn {\n  background: linear-gradient(90deg, #23263a 60%, #4f46e5 100%);\n  color: #fff;\n  border: none;\n  border-radius: 0.7rem;\n  padding: 0.7rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  align-self: flex-end;\n  transition: background 0.2s;\n}\n\n.post-btn:hover {\n  background: linear-gradient(90deg, #4f46e5 60%, #23263a 100%);\n}\n\n/* Posts Grid */\n.posts-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  margin-top: 1.5rem;\n  width: 100%;\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.post-card {\n  background: #fff;\n  border-radius: 1.25rem;\n  box-shadow: 0 4px 24px rgba(35, 38, 58, 0.08);\n  padding: 1.5rem 1.8rem 1.2rem 1.8rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  height: auto;\n}\n\n.post-image {\n  width: 100%;\n  max-height: 400px;\n  overflow: hidden;\n  border-radius: 0.8rem;\n  margin-bottom: 0.7rem;\n  display: flex;\n  border-radius: 0.5rem;\n  align-items: center;\n  justify-content: center;\n}\n\n.post-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  border-radius: 0.8rem;\n}\n\n.post-header {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.post-author-pic {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.post-title {\n  font-size: 1.3rem;\n  color: #23263a;\n  font-weight: 600;\n  margin: 0.2rem 0;\n}\n\n.post-content {\n  color: #4b5563;\n  font-size: 1.1rem;\n  margin-bottom: 0.2rem;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  overflow-wrap: break-word;\n  max-width: 100%;\n  line-height: 1.6;\n  height: auto;\n}\n\n.post-actions {\n  display: flex;\n  gap: 1.2rem;\n  margin-top: 0.2rem;\n}\n\n.icon-btn {\n  font-size: 1.2rem;\n  color: #b0b3c6;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.icon-btn:hover {\n  color: #4f46e5;\n}\n\n.no-posts {\n  color: #b0b3c6;\n  text-align: center;\n  font-size: 1.1rem;\n  grid-column: 1/-1;\n}\n\n/* Right Sidebar */\n.rightbar {\n  width: 400px;\n  background: #fff;\n  border-radius: 0 1.5rem 1.5rem 0;\n  box-shadow: -2px 0 16px rgba(35, 38, 58, 0.08);\n  padding: 2rem 1.5rem 2rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n\n.invite-group-btn {\n  background: #f3f4f8;\n  color: #23263a;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.3rem 0.6rem;\n  margin-right: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: background 0.2s, color 0.2s;\n  position: relative;\n}\n\n.sidebar-icon[title=\"Notifications\"] {\n  position: relative;\n}\n\n.notif-badge {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  background: #ef4444;\n  color: white;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  font-size: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  border: 2px solid #fff;\n  z-index: 1;\n}\n\n.notif-btn:hover,\n.invite-group-btn:hover {\n  background: #e0e7ff;\n  color: #4f46e5;\n}\n\n.logout-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: #f3f4f8;\n  color: #23263a;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 1rem;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.logout-btn:hover {\n  background: #e5e7eb;\n}\n\n.create-group-btn {\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.2rem 0.5rem;\n  margin-right: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: background 0.2s;\n}\n\n.create-group-btn:hover {\n  background: #23263a;\n}\n\n.groups-header {\n  display: flex;\n  align-items: center;\n  gap: 0.3rem;\n  justify-content: space-between;\n}\n\n.groups-header span {\n  flex: 1;\n}\n\n.groups-header .see-all-link {\n  flex: unset;\n}\n\n.groups-section {\n  margin-bottom: 2rem;\n  height: 300px;\n  overflow-y: auto;\n  padding-right: 10px;\n}\n\n.groups-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.group-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #f3f4f8;\n  border-radius: 0.7rem;\n  padding: 0.7rem 1rem;\n  gap: 0.7rem;\n}\n\n.group-info {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n}\n\n.group-avatar {\n  font-size: 1.5rem;\n  color: #4f46e5;\n  background: #e0e7ff;\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.group-details {\n  display: flex;\n  flex-direction: column;\n}\n\n.group-title {\n  font-size: 1rem;\n  font-weight: 600;\n  color: #23263a;\n}\n\n.group-desc {\n  font-size: 0.85rem;\n  color: #6b7280;\n  max-width: 120px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.pending-btn {\n  background: #ad8f0a;\n}\n\n.follow-btn,\n.pending-btn {\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 1.1rem;\n  font-size: 0.95rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.follow-btn {\n  background: #4f46e5;\n}\n\n.follow-btn:hover {\n  background: #23263a;\n}\n\n.followed-btn {\n  background: #e5e7eb;\n  color: #4f46e5;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 1.1rem;\n  font-size: 0.95rem;\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.users-section {\n  margin-top: 2rem;\n  height: 300px;\n  overflow-y: auto;\n  padding-right: 10px;\n}\n\n.users-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #23263a;\n}\n\n.users-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.user-list-item {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n  background: #f3f4f8;\n  border-radius: 0.7rem;\n  padding: 0.7rem 1rem;\n}\n\n.mini-profile-pic {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  object-fit: cover;\n  cursor: pointer;\n}\n\n.user-name {\n  font-size: 1rem;\n  color: #23263a;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(35, 38, 58, 0.45);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  transition: background 0.3s;\n}\n\n.create-group-modal {\n  background: #fff;\n  border-radius: 1.2rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  padding: 2.5rem 2.5rem 2rem 2.5rem;\n  min-width: 340px;\n  max-width: 95vw;\n  animation: modalPopIn 0.25s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n@keyframes modalPopIn {\n  0% {\n    transform: scale(0.95) translateY(30px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: scale(1) translateY(0);\n    opacity: 1;\n  }\n}\n\n.create-group-modal h3 {\n  color: #4f46e5;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-size: 1.3rem;\n  font-weight: 700;\n}\n\n.create-group-modal .form-group label {\n  color: #23263a;\n  font-weight: 600;\n}\n\n.create-group-modal .form-group input,\n.create-group-modal .form-group textarea {\n  background: #f3f4f8;\n  border: none;\n  border-radius: 0.7rem;\n  padding: 0.8rem 1.1rem;\n  font-size: 1rem;\n  margin-bottom: 0.7rem;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.create-group-modal .form-group textarea {\n  min-height: 80px;\n  resize: vertical;\n}\n\n.create-group-modal .modal-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 1.2rem;\n}\n\n.create-group-modal .submit-btn {\n  background: #4f46e5;\n  color: #fff;\n  padding: 0.7rem 1.5rem;\n  border: none;\n  border-radius: 0.5rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.create-group-modal .submit-btn:hover {\n  background: #23263a;\n}\n\n.create-group-modal .cancel-btn {\n  background: #e5e7eb;\n  color: #23263a;\n  padding: 0.7rem 1.5rem;\n  border: none;\n  border-radius: 0.5rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.create-group-modal .cancel-btn:hover {\n  background: #cbd5e1;\n}\n\n/* Comments Section */\n.comments-section {\n  margin-top: 1.1rem;\n  padding: 1.1rem;\n  background: #f8fafc;\n  border-radius: 0.7rem;\n  border: 1px solid #e5e7eb;\n}\n\n.no-comments {\n  text-align: center;\n  color: #6b7280;\n  font-size: 0.95rem;\n  padding: 1rem 0;\n  background: #fff;\n  border-radius: 0.5rem;\n  border: 1px dashed #e5e7eb;\n}\n\n.comment {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: #fff;\n  border-radius: 0.7rem;\n  padding: 1rem;\n  margin-bottom: 0.7rem;\n  border: 1px solid #e5e7eb;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.comment:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(35, 38, 58, 0.06);\n}\n\n.comment-header {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n  margin-bottom: 0.5rem;\n}\n\n.comment-author-pic {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #e5e7eb;\n}\n\n.comment-header h5 {\n  color: #23263a;\n  font-size: 0.95rem;\n  margin: 0;\n  font-weight: 600;\n}\n\n.comment-timestamp {\n  color: #6b7280;\n  font-size: 0.85rem;\n  margin: 0;\n}\n\n.comment-content {\n  color: #4b5563;\n  font-size: 0.95rem;\n  line-height: 1.5;\n  margin: 0.5rem 0;\n}\n\n.comment-image {\n  max-width: 100%;\n  max-height: 300px;\n  width: auto;\n  height: auto;\n  object-fit: contain;\n  border-radius: 0.5rem;\n  margin-top: 0.7rem;\n}\n\n.comment-form {\n  display: flex;\n  flex-direction: column;\n  gap: 0.7rem;\n  margin-top: 1rem;\n  background: #fff;\n  padding: 1rem;\n  border-radius: 0.7rem;\n  border: 1px solid #e5e7eb;\n}\n\n.comment-input-row {\n  display: flex;\n  align-items: flex-end;\n  gap: 0.7rem;\n}\n\n.comment-form textarea {\n  flex: 1;\n  padding: 0.8rem 1rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.7rem;\n  font-size: 0.95rem;\n  background: #f8fafc;\n  min-height: 42px;\n  resize: vertical;\n  transition: border-color 0.2s, background 0.2s;\n}\n\n.comment-form textarea:focus {\n  border-color: #4f46e5;\n  background: #fff;\n  outline: none;\n}\n\n.comment-form input[type=\"file\"] {\n  display: none;\n}\n\n.comment-form .file-upload-label {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: #f3f4f8;\n  border-radius: 0.5rem;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.9rem;\n  color: #23263a;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.comment-form .file-upload-label:hover {\n  background: #e0e7ff;\n}\n\n.comment-form .file-upload-label svg {\n  width: 18px;\n  height: 18px;\n  color: #4f46e5;\n}\n\n.comment-submit-btn {\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.5rem 0.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.comment-submit-btn:hover {\n  background: #23263a;\n}\n\n.comment-error {\n  color: #ef4444;\n  font-size: 0.9rem;\n  margin-top: 0.3rem;\n  padding: 0.5rem;\n  background: #fee2e2;\n  border-radius: 0.5rem;\n  border: 1px solid #fecaca;\n}\n\n.comment-img {\n  max-width: 100%;\n  max-height: 300px;\n  width: auto;\n  height: auto;\n  object-fit: contain;\n  border-radius: 0.5rem;\n  margin-top: 0.7rem;\n  border: 1px solid #e5e7eb;\n}\n\n.group-clickable {\n  cursor: pointer;\n  transition: background 0.18s;\n}\n\n.group-clickable:hover {\n  background: #e0e7ff;\n}\n\n/* Chat Floating Action Button */\n.chat-fab {\n  position: fixed;\n  bottom: 2.2rem;\n  right: 2.2rem;\n  z-index: 3000;\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  box-shadow: 0 4px 16px rgba(35, 38, 58, 0.18);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  cursor: pointer;\n  transition: background 0.2s, box-shadow 0.2s;\n}\n\n.chat-fab:hover {\n  background: #23263a;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.22);\n}\n\n/* Chat Modal */\n.chat-modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(35, 38, 58, 0.25);\n  z-index: 4000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.chat-modal {\n  background: #fff;\n  border-radius: 1.1rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  width: 370px;\n  max-width: 95vw;\n  padding: 1.2rem 1.2rem 1.2rem 1.2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  animation: modalPopIn 0.22s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n.chat-modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #4f46e5;\n  margin-bottom: 0.2rem;\n}\n\n.chat-modal-close {\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: #b0b3c6;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.chat-modal-close:hover {\n  color: #ef4444;\n}\n\n.chat-users-list {\n  background: #f8fafc;\n  border-radius: 0.7rem;\n  padding: 0.7rem 0.5rem;\n  margin-bottom: 0.2rem;\n}\n\n.chat-users-title {\n  font-size: 1rem;\n  color: #23263a;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n}\n\n.chat-users-list ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  max-height: 120px;\n  overflow-y: auto;\n}\n\n.chat-users-list li {\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n  padding: 0.4rem 0.2rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: background 0.18s;\n}\n\n.chat-users-list li.selected,\n.chat-users-list li:hover {\n  background: #e0e7ff;\n}\n\n.chat-user-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.chat-messages-area {\n  background: #f8fafc;\n  border-radius: 0.7rem;\n  padding: 0.7rem 0.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.chat-messages-title {\n  font-size: 1rem;\n  color: #4f46e5;\n  font-weight: 600;\n  margin-bottom: 0.3rem;\n}\n\n.chat-messages-list {\n  flex: 1;\n  max-height: 180px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.4rem;\n  scroll-behavior: smooth;\n  padding-right: 0.5rem;\n}\n\n.chat-messages-list::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chat-messages-list::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.chat-messages-list::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.chat-messages-list::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n.chat-msg {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: #fff;\n  border-radius: 0.5rem;\n  padding: 0.4rem 0.7rem;\n  font-size: 0.97rem;\n  box-shadow: 0 1px 4px rgba(35, 38, 58, 0.06);\n  max-width: 80%;\n}\n\n.chat-msg.self {\n  align-self: flex-end;\n  background: #4f46e5;\n  color: #fff;\n}\n\n.chat-msg.other {\n  align-self: flex-start;\n  background: #e5e7eb;\n  color: #23263a;\n}\n\n.chat-msg-time {\n  font-size: 0.75rem;\n  color: #b0b3c6;\n  margin-top: 0.1rem;\n  align-self: flex-end;\n}\n\n.chat-send-form {\n  display: flex;\n  gap: 0.4rem;\n  margin-top: 0.3rem;\n}\n\n.chat-send-form input {\n  flex: 1;\n  padding: 0.5rem 0.8rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.5rem;\n  font-size: 0.97rem;\n  background: #fff;\n}\n\n.chat-send-btn {\n  background: #4f46e5;\n  color: #fff;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.4rem 0.7rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.chat-send-btn:hover {\n  background: #23263a;\n}\n\n.chat-no-user {\n  color: #b0b3c6;\n  text-align: center;\n  font-size: 1rem;\n  padding: 1.2rem 0;\n}\n\n/* Custom scrollbar */\n.groups-section::-webkit-scrollbar {\n  width: 6px;\n}\n\n.groups-section::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.groups-section::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.groups-section::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n/* Custom scrollbar for users section */\n.users-section::-webkit-scrollbar {\n  width: 6px;\n}\n\n.users-section::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.users-section::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.users-section::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n.notif-popup {\n  position: absolute;\n  top: 70px;\n  left: 80px;\n  width: 350px;\n  background: #fff;\n  border-radius: 1.1rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  z-index: 5000;\n  padding: 0.5rem 0 0.5rem 0;\n  animation: modalPopIn 0.22s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n.notif-popup-header {\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #4f46e5;\n  padding: 1rem 1.5rem 0.5rem 1.5rem;\n  border-bottom: 1px solid #e5e7eb;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.notif-list {\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem 0;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.notif-item {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.7rem;\n  padding: 0.8rem 1.5rem;\n  font-size: 0.98rem;\n  color: #23263a;\n  border-bottom: 1px solid #f3f4f8;\n  transition: background 0.18s;\n  position: relative;\n  cursor: pointer;\n}\n\n.notif-item:last-child {\n  border-bottom: none;\n}\n\n.notif-item:hover {\n  background: #f8fafc;\n}\n\n.notif-avatar img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #e5e7eb;\n  flex-shrink: 0;\n}\n\n.notif-text {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.2rem;\n}\n\n.notif-text b {\n  color: #4f46e5;\n  font-weight: 600;\n}\n\n.notif-text span {\n  color: #4b5563;\n  line-height: 1.4;\n}\n\n.notif-time {\n  font-size: 0.85rem;\n  color: #6b7280;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n}\n\n.notif-item.empty {\n  color: #b0b3c6;\n  text-align: center;\n  justify-content: center;\n  font-size: 1rem;\n  padding: 2rem 1.5rem;\n}\n\n.notif-item.unread {\n  background: #f0f7ff;\n  border-left: 3px solid #4f46e5;\n}\n\n.notif-item.unread::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  width: 8px;\n  height: 8px;\n  background: #4f46e5;\n  border-radius: 50%;\n}\n\n.owner-badge {\n  font-size: 0.75rem;\n  color: #4f46e5;\n  background: #e0e7ff;\n  padding: 0.1rem 0.4rem;\n  border-radius: 0.3rem;\n  margin-top: 0.2rem;\n  display: inline-block;\n}\n\n.create-post-form input[type=\"file\"] {\n  display: none;\n}\n\n.create-post-form .file-upload-label {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: #f3f4f8;\n  border-radius: 0.75rem;\n  padding: 0.7rem 1.2rem;\n  font-size: 0.95rem;\n  color: #23263a;\n  cursor: pointer;\n  transition: background 0.2s;\n  margin-bottom: 0.5rem;\n}\n\n.create-post-form .file-upload-label:hover {\n  background: #e0e7ff;\n}\n\n.create-post-form .file-upload-label svg {\n  width: 20px;\n  height: 20px;\n  color: #4f46e5;\n}\n\n.create-post-form .image-preview {\n  max-width: 300px;\n  max-height: 300px;\n  width: auto;\n  height: auto;\n  object-fit: contain;\n  border-radius: 0.75rem;\n  margin-top: 0.5rem;\n  display: block;\n  background: #f3f4f8;\n}\n\n.file-name-display {\n  font-size: 0.9rem;\n  color: #4f46e5;\n  background: #e0e7ff;\n  padding: 0.5rem 0.8rem;\n  border-radius: 0.5rem;\n  margin-top: 0.5rem;\n  display: inline-block;\n}\n\n.post-image {\n  object-fit: cover;\n  width: fit-content;\n  height: 300px;\n}\n\n@media (max-width: 768px) {\n  .post-card {\n    width: 100%;\n  }\n  .post-image img {\n    height: 250px;\n  }\n}\n\n@media (max-width: 900px) {\n  .posts-grid {\n    max-width: 100%;\n    padding: 0 1rem;\n  }\n}\n\n/* Remove the grid layout for larger screens */\n@media (min-width: 768px) {\n  .posts-grid {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n  .forum-layout {\n    flex-direction: column;\n  }\n\n  .sidebar {\n    width: 100%;\n    flex-direction: row;\n    padding: 1rem;\n    border-radius: 0;\n    justify-content: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: auto;\n    height: auto;\n    z-index: 1000;\n  }\n\n  .sidebar-icons {\n    flex-direction: row;\n    justify-content: center;\n    gap: 1.5rem;\n    position: relative;\n  }\n\n  .main-area {\n    margin-left: 0;\n    margin-top: 80px;\n    padding: 1rem;\n  }\n\n  .rightbar {\n    width: 100%;\n    border-radius: 0;\n    margin-top: 1rem;\n  }\n\n  .posts-grid {\n    max-width: 100%;\n  }\n\n  .chat-fab {\n    bottom: 1.5rem;\n    right: 1.5rem;\n  }\n\n  .notif-popup {\n    left: 50%;\n    transform: translateX(-50%);\n    top: 80px;\n  }\n}\n\n@media (max-width: 768px) {\n  .sidebar-icons {\n    gap: 1rem;\n  }\n\n  .sidebar-icon {\n    width: 40px;\n    height: 40px;\n  }\n\n  .create-post-card {\n    padding: 1rem;\n  }\n\n  .post-card {\n    padding: 1rem;\n  }\n\n  .post-image img {\n    height: 200px;\n  }\n\n  .post-title {\n    font-size: 1.2rem;\n  }\n\n  .post-content {\n    font-size: 1rem;\n  }\n\n  .chat-modal {\n    width: 95vw;\n    height: 90vh;\n  }\n\n  .groups-section,\n  .users-section {\n    height: 250px;\n  }\n}\n\n@media (max-width: 480px) {\n  .sidebar-icons {\n    gap: 0.8rem;\n  }\n\n  .sidebar-icon {\n    width: 36px;\n    height: 36px;\n  }\n\n  .post-header {\n    gap: 0.7rem;\n  }\n\n  .post-author-pic {\n    width: 40px;\n    height: 40px;\n  }\n\n  .post-image img {\n    height: 180px;\n  }\n\n  .create-post-form input,\n  .create-post-form textarea {\n    font-size: 0.95rem;\n  }\n\n  .chat-modal {\n    padding: 1rem;\n  }\n\n  .chat-messages-list {\n    max-height: 150px;\n  }\n}\n\n/* Ensure content is properly centered on mobile */\n@media (max-width: 1024px) {\n  .main-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .avatar-bar {\n    width: 100%;\n    max-width: 900px;\n  }\n\n  .create-post-card {\n    width: 100%;\n    max-width: 900px;\n  }\n}\n\n/* Image Modal Styles */\n.image-modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.85);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 5000;\n  animation: fadeIn 0.2s ease;\n  padding: 2rem;\n}\n\n.image-modal-content {\n  position: relative;\n  max-width: 90vw;\n  max-height: 85vh;\n  animation: zoomIn 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f3f4f8;\n  border-radius: 0.5rem;\n  padding: 1rem;\n}\n\n.image-modal-content img {\n  max-width: 100%;\n  max-height: 85vh;\n  width: auto;\n  height: auto;\n  object-fit: contain;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n\n.close-modal-btn {\n  position: absolute;\n  top: -40px;\n  right: 0;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 2rem;\n  cursor: pointer;\n  padding: 0.5rem;\n  transition: opacity 0.2s;\n  z-index: 1;\n}\n\n.close-modal-btn:hover {\n  opacity: 0.8;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes zoomIn {\n  from { transform: scale(0.95); }\n  to { transform: scale(1); }\n}\n\n/* Add cursor pointer to clickable images */\n.post-image img,\n.comment-image,\n.create-post-form .image-preview {\n  cursor: pointer;\n  transition: opacity 0.2s;\n}\n\n.post-image img:hover,\n.comment-image:hover,\n.create-post-form .image-preview:hover {\n  opacity: 0.9;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}