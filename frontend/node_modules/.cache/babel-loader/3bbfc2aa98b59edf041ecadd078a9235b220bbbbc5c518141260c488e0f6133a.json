{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { getData } from '@/api/getData';\nimport { fetchInfo } from '../api/getInfo.js';\nimport { notificationWebSocket } from '../services/notificationWebSocket.js';\nexport default {\n  name: \"ProfileInfo\",\n  data() {\n    return {\n      isOwner: false,\n      isFollowing: false,\n      isPending: false,\n      showFollowersList: false,\n      showFollowingList: false,\n      posts: [],\n      Comments: [],\n      currentUserId: null,\n      visibleCommentsPostId: null,\n      showNotifications: false,\n      notifications: [],\n      unreadNotificationCount: 0,\n      user: {\n        image: \"\",\n        username: \"\",\n        nickname: \"\",\n        avatar: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        bio: \"\",\n        followers_count: 0,\n        following_count: 0,\n        follower_usernames: [],\n        following_usernames: [],\n        posts: 0,\n        privacy: \"public\",\n        date_of_birth: \"\",\n        email: \"\",\n        follow_status: \"\"\n      },\n      CurrentUsername: \"\"\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    fetch(\"http://localhost:8080/api/info\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        next();\n      } else {\n        next('/login');\n      }\n    }).catch(() => {\n      next('/login');\n    });\n  },\n  computed: {\n    canViewPosts() {\n      return this.user.privacy === 'public' || this.user.privacy === 'private' && this.isFollowing || this.isOwner;\n    },\n    canViewFollowData() {\n      return this.user.privacy === 'public' || this.user.privacy === 'private' && this.isFollowing || this.isOwner;\n    }\n  },\n  watch: {\n    '$route'(to, from) {\n      // Handle route changes (when navigating between different profiles)\n      if (to.params.id !== from.params.id) {\n        this.resetComponentState();\n        this.initializeProfile(to.params.id);\n      }\n    }\n  },\n  async created() {\n    const userId = this.$route.params.id;\n    const currentUserId = await this.getData();\n    if (!currentUserId) {\n      console.error(\"User is not logged in. Redirecting to login page.\");\n      this.$router.push(\"/login\");\n      return;\n    }\n    this.CurrentUsername = currentUserId;\n    this.initializeProfile(userId, currentUserId);\n  },\n  methods: {\n    resetComponentState() {\n      this.showFollowersList = false;\n      this.showFollowingList = false;\n      this.posts = [];\n      this.Comments = [];\n      this.visibleCommentsPostId = null;\n      this.showNotifications = false;\n      this.notifications = [];\n      this.unreadNotificationCount = 0;\n    },\n    async initializeProfile(userId, currentUserId = null) {\n      if (!currentUserId) {\n        currentUserId = await this.getData();\n        this.CurrentUsername = currentUserId;\n      }\n      this.fetchuserData(userId);\n      this.isOwner = currentUserId === userId;\n    },\n    goToProfile() {\n      this.$router.push(`/profile/${this.CurrentUsername}`);\n    },\n    goToSettings() {\n      this.$router.push('/settings');\n    },\n    async toggleComments(postId) {\n      if (this.visibleCommentsPostId === postId) {\n        // If clicking the same post, hide comments\n        this.visibleCommentsPostId = null;\n        this.Comments = [];\n      } else {\n        // If clicking a different post, show its comments\n        this.visibleCommentsPostId = postId;\n        await this.getComments(postId);\n      }\n    },\n    getComments(postId) {\n      return fetch(`http://localhost:8080/api/getcomments?post_id=${postId}`, {\n        method: 'GET',\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        return response.json();\n      }).then(comments => {\n        console.log('Comments fetched:', comments);\n        for (let i = 0; i < comments.length; i++) {\n          if (!comments[i].Avatar) {\n            comments[i].Avatar = `https://api.dicebear.com/7.x/avataaars/svg?seed=${comments[i].Author}`;\n          } else {\n            comments[i].Avatar = 'http://localhost:8080/uploads/' + comments[i].Avatar;\n          }\n        }\n        this.Comments = comments || [];\n        console.log('Comments:', this.Comments);\n      }).catch(error => {\n        console.error('Error fetching comments:', error);\n        this.showNotification(error.message || 'Error fetching comments', 'error');\n      });\n    },\n    async getData() {\n      try {\n        const response = await fetch('http://localhost:8080/api/info', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          if (response.status === 404) {\n            this.$router.push('/404');\n            return;\n          } else if (response.status === 401) {\n            this.$router.push('/');\n            return;\n          }\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        return data.Username;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        this.$router.push('/404');\n        throw error;\n      }\n    },\n    checkIfFollowing() {\n      if (!this.user.username) return;\n      fetch(`http://localhost:8080/api/followers?action=isFollowing&profileUser=${this.user.username}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      }).then(response => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            this.$router.push('/404');\n            return;\n          }\n          throw new Error(\"Failed to fetch follow status\");\n        }\n        return response.json();\n      }).then(data => {\n        this.isFollowing = data.isFollowing && data.status === \"accepted\";\n        this.isPending = data.isFollowing && data.status === \"pending\";\n      }).catch(error => {\n        console.error(\"Error checking follow status:\", error);\n        this.$router.push('/404');\n        // Reset states on error\n        this.isFollowing = false;\n        this.isPending = false;\n      });\n    },\n    goToHome() {\n      this.$router.push('/');\n    },\n    goToSettings() {\n      this.$router.push('/settings');\n    },\n    logout() {\n      fetch('http://localhost:8080/api/auth/logout', {\n        method: 'POST',\n        credentials: 'include'\n      }).then(res => {\n        if (res.ok) {\n          this.$router.push('/login');\n        } else {\n          console.error('Logout failed');\n          this.$router.push('/login');\n        }\n      }).catch(err => {\n        console.error('Logout error:', err);\n        this.$router.push('/login');\n      });\n    },\n    async fetchuserData(id) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/userinfo?user_id=${id}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          if (response.status === 404) {\n            this.$router.push('/404');\n            return;\n          } else if (response.status === 401) {\n            this.$router.push('/');\n            return;\n          }\n          throw new Error(errorText);\n        }\n        const data = await response.json();\n        console.log(\"User data fetched:\", data);\n        this.user = data;\n        if (!this.user.avatar) {\n          this.user.avatar = `https://api.dicebear.com/7.x/avataaars/svg?seed=${data.username}`;\n        } else {\n          this.user.avatar = 'http://localhost:8080/uploads/' + this.user.avatar;\n        }\n\n        // Only fetch posts if user can view them\n        if (this.canViewPosts) {\n          await this.fetchUserPosts(data.username);\n        }\n\n        // Check follow status after user data is loaded\n        await this.checkIfFollowing();\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        this.showNotification(error.message || \"Error fetching user data\", \"error\");\n        this.$router.push('/404');\n      }\n    },\n    fetchUserPosts(username) {\n      fetch(`http://localhost:8080/api/ownposts?username=${username}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      }).then(response => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            this.$router.push('/404');\n            return;\n          }\n          throw new Error(\"Failed to fetch user posts\");\n        }\n        return response.json();\n      }).then(posts => {\n        this.posts = posts || [];\n        console.log(\"User posts fetched:\", this.posts);\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n        this.$router.push('/404');\n      });\n    },\n    toggleFollowersList() {\n      if (this.canViewFollowData) {\n        this.showFollowersList = !this.showFollowersList;\n        this.showFollowingList = false;\n      }\n    },\n    toggleFollowingList() {\n      if (this.canViewFollowData) {\n        this.showFollowingList = !this.showFollowingList;\n        this.showFollowersList = false;\n      }\n    },\n    async follow(profileUser) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/followers?action=follow&profileUser=${profileUser}`, {\n          method: 'POST',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Follow failed');\n        }\n\n        // Wait for the follow action to complete\n        await response.text();\n\n        // Update local state based on privacy\n        if (this.user.privacy === 'private') {\n          this.isPending = true;\n          this.isFollowing = false;\n        } else {\n          this.isFollowing = true;\n          this.isPending = false;\n        }\n\n        // Wait for user data to be refreshed\n        await this.fetchuserData(this.user.username);\n\n        // Double check follow status after a short delay\n        setTimeout(() => {\n          this.checkIfFollowing();\n        }, 500);\n      } catch (err) {\n        console.error('Follow error:', err);\n        this.isFollowing = false;\n        this.isPending = false;\n      }\n    },\n    async unfollow(profileUser) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/followers?action=unfollow&profileUser=${profileUser}`, {\n          method: 'POST',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Unfollow failed');\n        }\n\n        // Reset states immediately\n        this.isFollowing = false;\n        this.isPending = false;\n\n        // Wait for user data refresh\n        await this.fetchuserData(this.user.username);\n\n        // Clear posts if can't view anymore\n        if (!this.canViewPosts) {\n          this.posts = [];\n        }\n\n        // Double check status after a short delay\n        setTimeout(() => {\n          this.checkIfFollowing();\n        }, 300);\n      } catch (err) {\n        console.error('Unfollow error:', err);\n        // Keep current state on error\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    },\n    async handleNotifClick() {\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        await this.fetchNotifications();\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const res = await fetch('http://localhost:8080/api/notifications', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (res.ok) {\n          const data = await res.json();\n          this.notifications = data;\n          this.unreadNotificationCount = data.filter(n => !n.is_read).length;\n        } else {\n          this.notifications = [];\n          this.unreadNotificationCount = 0;\n        }\n      } catch (err) {\n        console.error('Failed to fetch notifications:', err);\n        this.notifications = [];\n        this.unreadNotificationCount = 0;\n      }\n    },\n    async markNotificationAsRead(notificationId) {\n      console.log(notificationId);\n      try {\n        // Find the notification first\n        const notification = this.notifications.find(n => n.id === notificationId);\n        if (!notification) return;\n\n        // Set a timeout to mark as read after 3 seconds\n        setTimeout(async () => {\n          try {\n            const res = await fetch(`http://localhost:8080/api/markasread`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify({\n                notificationId,\n                is_read: 1\n              })\n            });\n            console.log(\"res\", res);\n            if (res.ok) {\n              notification.is_read = true;\n              // Update unread count\n              this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n            }\n          } catch (error) {\n            console.error('Error marking notification as read:', error);\n          }\n        }, 3000); // 3 seconds delay\n      } catch (error) {\n        console.error('Error marking notification as read:', error);\n      }\n    },\n    formatTimestamp(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diff = now - date;\n      if (diff < 60000) return 'just now';\n      if (diff < 3600000) return `${Math.floor(diff / 60000)}m ago`;\n      if (diff < 86400000) return `${Math.floor(diff / 3600000)}h ago`;\n      if (diff < 604800000) return `${Math.floor(diff / 86400000)}d ago`;\n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    },\n    handleNotifClose(event) {\n      if (this.showNotifications && !this.$refs.notifBtn.contains(event.target) && !this.$refs.notifPopup.contains(event.target)) {\n        this.showNotifications = false;\n      }\n    },\n    setupNotificationWebSocket() {\n      // Register handler for real-time notifications\n      notificationWebSocket.onNotification('profile-info', notification => {\n        console.log('Received real-time notification:', notification);\n\n        // Refresh notifications and count from server to ensure accuracy\n        this.fetchNotifications();\n      });\n    }\n  },\n  mounted() {\n    // Set up notification WebSocket\n    this.setupNotificationWebSocket();\n    this.fetchNotifications();\n    document.addEventListener('click', this.handleNotifClose);\n  },\n  beforeUnmount() {\n    // Clean up notification WebSocket\n    notificationWebSocket.removeNotificationHandler('profile-info');\n    document.removeEventListener('click', this.handleNotifClose);\n  }\n};","map":{"version":3,"names":["getData","fetchInfo","notificationWebSocket","name","data","isOwner","isFollowing","isPending","showFollowersList","showFollowingList","posts","Comments","currentUserId","visibleCommentsPostId","showNotifications","notifications","unreadNotificationCount","user","image","username","nickname","avatar","first_name","last_name","bio","followers_count","following_count","follower_usernames","following_usernames","privacy","date_of_birth","email","follow_status","CurrentUsername","beforeRouteEnter","to","from","next","fetch","method","credentials","then","res","ok","catch","computed","canViewPosts","canViewFollowData","watch","$route","params","id","resetComponentState","initializeProfile","created","userId","console","error","$router","push","methods","fetchuserData","goToProfile","goToSettings","toggleComments","postId","getComments","response","Error","json","comments","log","i","length","Avatar","Author","showNotification","message","status","Username","checkIfFollowing","goToHome","logout","err","errorText","text","fetchUserPosts","toggleFollowersList","toggleFollowingList","follow","profileUser","setTimeout","unfollow","formatDate","dateString","date","Date","toLocaleDateString","handleNotifClick","fetchNotifications","filter","n","is_read","markNotificationAsRead","notificationId","notification","find","headers","body","JSON","stringify","formatTimestamp","timestamp","now","diff","Math","floor","month","day","year","handleNotifClose","event","$refs","notifBtn","contains","target","notifPopup","setupNotificationWebSocket","onNotification","mounted","document","addEventListener","beforeUnmount","removeNotificationHandler","removeEventListener"],"sources":["/Users/apple/Desktop/social-1/social-network/frontend/src/components/ProfileInfo.vue"],"sourcesContent":["<template>\n  <div class=\"profile-layout\">\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\">\n      <div class=\"sidebar-icons\">\n        <!-- Home Icon -->\n        <div class=\"sidebar-icon\" title=\"Home\" @click=\"goToHome\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 12L12 3l9 9\" />\n            <path d=\"M9 21V9h6v12\" />\n          </svg>\n        </div>\n        <!-- Profile Icon -->\n        <div class=\"sidebar-icon active\" title=\"Profile\" @click=\"goToProfile\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"8\" r=\"4\" />\n            <path d=\"M4 21v-2a4 4 0 014-4h8a4 4 0 014 4v2\" />\n          </svg>\n        </div>\n        <!-- Groups Icon -->\n        <div class=\"sidebar-icon\" title=\"Groups\" @click=\"$router.push('/mygroups')\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 21v-2a4 4 0 00-4-4H7a4 4 0 00-4 4v2\" />\n            <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            <path d=\"M23 21v-2a4 4 0 00-3-3.87\" />\n            <path d=\"M16 3.13a4 4 0 010 7.75\" />\n          </svg>\n        </div>\n        <!-- Notification Icon -->\n        <div class=\"sidebar-icon\" ref=\"notifBtn\" title=\"Notifications\" @click=\"handleNotifClick\">\n          <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M18 8a6 6 0 10-12 0c0 7-3 9-3 9h18s-3-2-3-9\" />\n            <path d=\"M13.73 21a2 2 0 01-3.46 0\" />\n          </svg>\n          <span v-if=\"unreadNotificationCount > 0\" class=\"notif-badge\">{{ unreadNotificationCount }}</span>\n        </div>\n        <!-- Notification Popup -->\n        <div v-if=\"showNotifications\" ref=\"notifPopup\" class=\"notif-popup\">\n          <div class=\"notif-popup-header\">Notifications</div>\n          <ul class=\"notif-list\">\n            <li v-if=\"!notifications || notifications.length === 0\" class=\"notif-item empty\">\n              No notifications yet.\n            </li>\n            <li v-for=\"notif in notifications || []\" :key=\"notif.id\" class=\"notif-item\"\n              :class=\"{ unread: !notif.is_read }\" @click=\"markNotificationAsRead(notif.id)\">\n              <span class=\"notif-text\">\n                <b>{{ notif.sender_username }}</b>\n                <span>{{ notif.content }}</span>\n              </span>\n              <span class=\"notif-time\">{{ formatTimestamp(notif.created_at) }}</span>\n            </li>\n          </ul>\n        </div>\n        <!-- Settings Icon (only if isOwner) -->\n        <div v-if=\"isOwner\" class=\"sidebar-icon\" title=\"Settings\" @click=\"goToSettings\">\n          <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\n            <path\n              d=\"M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 01-2.83 2.83l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-4 0v-.09a1.65 1.65 0 00-1-1.51 1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 010-4h.09a1.65 1.65 0 001.51-1 1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 012.83-2.83l.06.06a1.65 1.65 0 001.82.33h.09A1.65 1.65 0 0011 3.09V3a2 2 0 014 0v.09a1.65 1.65 0 001 1.51h.09a1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 2.83l-.06.06a1.65 1.65 0 00-.33 1.82v.09A1.65 1.65 0 0020.91 11H21a2 2 0 010 4h-.09a1.65 1.65 0 00-1.51 1z\" />\n          </svg>\n        </div>\n        <!-- Logout Icon Button -->\n        <div class=\"sidebar-icon\" title=\"Logout\" @click=\"logout\">\n          <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n            <path d=\"M17 16l4-4m0 0l-4-4m4 4H7\" />\n            <path d=\"M9 21H5a2 2 0 01-2-2V5a2 2 0 012-2h4\" />\n          </svg>\n        </div>\n      </div>\n    </aside>\n\n    <!-- Main Content Area -->\n    <div class=\"profile-main-content\">\n      <!-- Profile Card -->\n      <div class=\"profile-card-wrapper\">\n        <div class=\"profile-card\">\n          <!-- Profile Image -->\n          <button v-if=\"isOwner\" class=\"settings-icon-btn\" @click=\"goToSettings\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n              stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path\n                d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\">\n              </path>\n              <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n            </svg>\n          </button>\n          <div class=\"profile-image\">\n            <img :src=\"user.avatar\" alt=\"Profile Picture\" />\n            <p class=\"username\">@{{ user.username }}</p>\n            <!-- Follow/Unfollow/Pending buttons -->\n            <button v-if=\"!isOwner && user.follow_status === 'accepted'\" @click=\"unfollow(user.username)\"\n              class=\"follow-btn following\">\n              Unfollow\n            </button>\n            <button v-else-if=\"!isOwner && user.follow_status === 'pending'\" class=\"follow-btn pending\" disabled>\n              Pending\n            </button>\n            <button v-else-if=\"!isOwner && user.follow_status === 'not_following'\" @click=\"follow(user.username)\"\n              class=\"follow-btn\">\n              Follow\n            </button>\n          </div>\n          <div class=\"profile-details\">\n            <h2>{{ user.first_name }} {{ user.last_name }}</h2>\n            <p v-if=\"user.date_of_birth\" class=\"dob\">\n              {{ formatDate(user.date_of_birth) }}\n            </p>\n            <p v-if=\"\n              user.email &&\n              (isOwner || isFollowing || user.privacy === 'public')\n            \">\n              {{ user.email }}\n            </p>\n            <p v-if=\"user.nickname\" class=\"nickname\"><strong>Nickname: </strong>{{ user.nickname }}</p>\n            <p v-if=\"user.bio\" class=\"bio\">{{ user.bio }}</p>\n          </div>\n          <div class=\"profile-stats\">\n            <div class=\"stat\">\n              <strong class=\"clickable\" @click=\"toggleFollowersList\">{{\n                user.followers_count\n              }}</strong>\n              <span>Followers</span>\n            </div>\n            <div class=\"stat\">\n              <strong class=\"clickable\" @click=\"toggleFollowingList\">{{\n                user.following_count\n              }}</strong>\n              <span>Following</span>\n            </div>\n            <div class=\"stat\">\n              <strong>{{ user.posts }}</strong>\n              <span>Posts</span>\n            </div>\n          </div>\n          <div class=\"followers-list\" v-if=\"showFollowersList && canViewFollowData\">\n            <h3>Followers</h3>\n            <ul>\n              <li v-for=\"name in user.follower_usernames\" :key=\"name\">\n                {{ name }}\n              </li>\n            </ul>\n          </div>\n          <div class=\"following-list\" v-if=\"showFollowingList && canViewFollowData\">\n            <h3>Following</h3>\n            <ul>\n              <li v-for=\"name in user.following_usernames\" :key=\"name\">\n                {{ name }}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <!-- Posts Section -->\n      <div v-if=\"canViewPosts\" class=\"user-posts\">\n        <h3>Posts</h3>\n        <div v-if=\"Array.isArray(posts) && posts.length > 0\">\n          <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\n            <div class=\"post-header\">\n              <div class=\"post-author\">\n                <img :src=\"user.avatar\" alt=\"Author Avatar\" class=\"post-avatar\" />\n                <div class=\"post-author-info\">\n                  <h4>{{ post.title }}</h4>\n                  <span class=\"post-author-name\">{{ user.first_name }} {{ user.last_name }}</span>\n                </div>\n              </div>\n              <small class=\"post-date\">{{ formatDate(post.creation_date) }}</small>\n            </div>\n            <div class=\"post-content\">\n              <p>{{ post.content }}</p>\n              <img v-if=\"post.image\" :src=\"'http://localhost:8080/uploads/' + post.image\" alt=\"Post Image\"\n                class=\"post-image\" />\n            </div>\n            <div v-if=\"post.comments_count > 0\" class=\"post-actions\">\n              <button @click=\"toggleComments(post.id)\">\n                {{ visibleCommentsPostId === post.id ? 'Hide Comments' : 'View Comments' }}\n              </button>\n              <span class=\"comments-count\">{{ post.comments_count }} comments</span>\n            </div>\n            <div v-if=\"visibleCommentsPostId === post.id\" class=\"comments-section\">\n              <ul>\n                <li v-for=\"comment in Comments\" :key=\"comment.id\" class=\"comment-item\">\n                  <div class=\"comment-header\">\n                    <img v-if=\"comment.Avatar\" :src=\"comment.Avatar\" alt=\"Comment Avatar\" class=\"comment-avatar\" />\n                    <div class=\"comment-info\">\n                      <strong class=\"comment-author\">{{ comment.author }}</strong>\n                      <small class=\"comment-date\">{{ formatDate(comment.creation_date) }}</small>\n                    </div>\n                  </div>\n                  <p class=\"comment-text\">{{ comment.comment }}</p>\n                  <img v-if=\"comment.image\" :src=\"'http://localhost:8080/uploads/' + comment.image\" alt=\"Comment Image\"\n                    class=\"comment-image\" />\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div v-else>\n          <p>No posts available.</p>\n        </div>\n      </div>\n      <div v-else-if=\"user.privacy === 'private' && !isOwner\" class=\"private-message\">\n        <div class=\"lock-icon\">🔒</div>\n        <h3>This account is private</h3>\n        <p v-if=\"isPending\">Your follow request is pending approval.</p>\n        <p v-else>Follow this account to see their posts.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getData } from '@/api/getData';\nimport { fetchInfo } from '../api/getInfo.js';\nimport { notificationWebSocket } from '../services/notificationWebSocket.js';\n\nexport default {\n  name: \"ProfileInfo\",\n  data() {\n    return {\n      isOwner: false,\n      isFollowing: false,\n      isPending: false,\n      showFollowersList: false,\n      showFollowingList: false,\n      posts: [],\n      Comments: [],\n      currentUserId: null,\n      visibleCommentsPostId: null,\n      showNotifications: false,\n      notifications: [],\n      unreadNotificationCount: 0,\n      user: {\n        image: \"\",\n        username: \"\",\n        nickname: \"\",\n        avatar: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        bio: \"\",\n        followers_count: 0,\n        following_count: 0,\n        follower_usernames: [],\n        following_usernames: [],\n        posts: 0,\n        privacy: \"public\",\n        date_of_birth: \"\",\n        email: \"\",\n        follow_status: \"\"\n      },\n      CurrentUsername: \"\",\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    fetch(\"http://localhost:8080/api/info\", {\n      method: \"GET\",\n      credentials: \"include\",\n    })\n      .then(res => {\n        if (res.ok) {\n          next();\n        } else {\n          next('/login');\n        }\n      })\n      .catch(() => {\n        next('/login');\n      });\n  },\n  computed: {\n    canViewPosts() {\n      return this.user.privacy === 'public' ||\n        (this.user.privacy === 'private' && this.isFollowing) ||\n        this.isOwner;\n    },\n    canViewFollowData() {\n      return this.user.privacy === 'public' ||\n        (this.user.privacy === 'private' && this.isFollowing) ||\n        this.isOwner;\n    }\n  },\n  watch: {\n    '$route'(to, from) {\n      // Handle route changes (when navigating between different profiles)\n      if (to.params.id !== from.params.id) {\n        this.resetComponentState();\n        this.initializeProfile(to.params.id);\n      }\n    }\n  },\n  async created() {\n    const userId = this.$route.params.id;\n    const currentUserId = await this.getData();\n    \n    if (!currentUserId) {\n      console.error(\"User is not logged in. Redirecting to login page.\");\n      this.$router.push(\"/login\");\n      return;\n    }\n\n    this.CurrentUsername = currentUserId;\n    this.initializeProfile(userId, currentUserId);\n  },\n  methods: {\n    resetComponentState() {\n      this.showFollowersList = false;\n      this.showFollowingList = false;\n      this.posts = [];\n      this.Comments = [];\n      this.visibleCommentsPostId = null;\n      this.showNotifications = false;\n      this.notifications = [];\n      this.unreadNotificationCount = 0;\n    },\n    async initializeProfile(userId, currentUserId = null) {\n      if (!currentUserId) {\n        currentUserId = await this.getData();\n        this.CurrentUsername = currentUserId;\n      }\n      \n      this.fetchuserData(userId);\n      this.isOwner = currentUserId === userId;\n    },\n    goToProfile() {\n      this.$router.push(`/profile/${this.CurrentUsername}`);\n    },\n    goToSettings() {\n      this.$router.push('/settings');\n    },\n    async toggleComments(postId) {\n      if (this.visibleCommentsPostId === postId) {\n        // If clicking the same post, hide comments\n        this.visibleCommentsPostId = null;\n        this.Comments = [];\n      } else {\n        // If clicking a different post, show its comments\n        this.visibleCommentsPostId = postId;\n        await this.getComments(postId);\n      }\n    },\n    getComments(postId) {\n      return fetch(`http://localhost:8080/api/getcomments?post_id=${postId}`, {\n        method: 'GET',\n        credentials: 'include'\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Failed to fetch comments');\n          }\n          return response.json();\n        })\n        .then(comments => {\n          console.log('Comments fetched:', comments);\n          for (let i = 0; i < comments.length; i++) {\n            if (!comments[i].Avatar) {\n              comments[i].Avatar = `https://api.dicebear.com/7.x/avataaars/svg?seed=${comments[i].Author}`;\n            } else {\n              comments[i].Avatar = 'http://localhost:8080/uploads/' + comments[i].Avatar;\n            }\n          }\n          this.Comments = comments || [];\n          console.log('Comments:', this.Comments);\n        })\n        .catch(error => {\n          console.error('Error fetching comments:', error);\n          this.showNotification(error.message || 'Error fetching comments', 'error');\n        });\n    },\n    async getData() {\n      try {\n        const response = await fetch('http://localhost:8080/api/info', {\n          method: 'GET',\n          credentials: 'include',\n        });\n\n        if (!response.ok) {\n          if (response.status === 404) {\n            this.$router.push('/404');\n            return;\n          } else if (response.status === 401) {\n            this.$router.push('/');\n            return;\n          }\n          throw new Error('Failed to fetch data');\n        }\n\n        const data = await response.json();\n        return data.Username;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        this.$router.push('/404');\n        throw error;\n      }\n    },\n    checkIfFollowing() {\n      if (!this.user.username) return;\n\n      fetch(`http://localhost:8080/api/followers?action=isFollowing&profileUser=${this.user.username}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      })\n        .then(response => {\n          if (!response.ok) {\n            if (response.status === 404) {\n              this.$router.push('/404');\n              return;\n            }\n            throw new Error(\"Failed to fetch follow status\");\n          }\n          return response.json();\n        })\n        .then(data => {\n          this.isFollowing = data.isFollowing && data.status === \"accepted\";\n          this.isPending = data.isFollowing && data.status === \"pending\";\n        })\n        .catch(error => {\n          console.error(\"Error checking follow status:\", error);\n          this.$router.push('/404');\n          // Reset states on error\n          this.isFollowing = false;\n          this.isPending = false;\n        });\n    },\n\n    goToHome() {\n      this.$router.push('/');\n    },\n\n    goToSettings() {\n      this.$router.push('/settings');\n    },\n\n    logout() {\n      fetch('http://localhost:8080/api/auth/logout', {\n        method: 'POST',\n        credentials: 'include'\n      })\n        .then(res => {\n          if (res.ok) {\n            this.$router.push('/login');\n          } else {\n            console.error('Logout failed');\n            this.$router.push('/login');\n          }\n        })\n        .catch(err => {\n          console.error('Logout error:', err);\n          this.$router.push('/login');\n        });\n    },\n\n    async fetchuserData(id) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/userinfo?user_id=${id}`, {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          if (response.status === 404) {\n            this.$router.push('/404');\n            return;\n          } else if (response.status === 401) {\n            this.$router.push('/');\n            return;\n          }\n          throw new Error(errorText);\n        }\n\n        const data = await response.json();\n        console.log(\"User data fetched:\", data);\n        this.user = data;\n        if (!this.user.avatar) {\n          this.user.avatar = `https://api.dicebear.com/7.x/avataaars/svg?seed=${data.username}`;\n        } else {\n          this.user.avatar = 'http://localhost:8080/uploads/' + this.user.avatar;\n        }\n\n        // Only fetch posts if user can view them\n        if (this.canViewPosts) {\n          await this.fetchUserPosts(data.username);\n        }\n\n        // Check follow status after user data is loaded\n        await this.checkIfFollowing();\n\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        this.showNotification(error.message || \"Error fetching user data\", \"error\");\n        this.$router.push('/404');\n      }\n    },\n\n    fetchUserPosts(username) {\n      fetch(`http://localhost:8080/api/ownposts?username=${username}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      })\n        .then(response => {\n          if (!response.ok) {\n            if (response.status === 404) {\n              this.$router.push('/404');\n              return;\n            }\n            throw new Error(\"Failed to fetch user posts\");\n          }\n          return response.json()\n        })\n        .then(posts => {\n          this.posts = posts || [];\n          console.log(\"User posts fetched:\", this.posts);\n        })\n        .catch(error => {\n          console.error(\"Error fetching user posts:\", error);\n          this.$router.push('/404');\n        });\n    },\n\n    toggleFollowersList() {\n      if (this.canViewFollowData) {\n        this.showFollowersList = !this.showFollowersList;\n        this.showFollowingList = false;\n      }\n    },\n\n    toggleFollowingList() {\n      if (this.canViewFollowData) {\n        this.showFollowingList = !this.showFollowingList;\n        this.showFollowersList = false;\n      }\n    },\n\n    async follow(profileUser) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/followers?action=follow&profileUser=${profileUser}`, {\n          method: 'POST',\n          credentials: 'include'\n        });\n\n        if (!response.ok) {\n          throw new Error('Follow failed');\n        }\n\n        // Wait for the follow action to complete\n        await response.text();\n\n        // Update local state based on privacy\n        if (this.user.privacy === 'private') {\n          this.isPending = true;\n          this.isFollowing = false;\n        } else {\n          this.isFollowing = true;\n          this.isPending = false;\n        }\n\n        // Wait for user data to be refreshed\n        await this.fetchuserData(this.user.username);\n\n        // Double check follow status after a short delay\n        setTimeout(() => {\n          this.checkIfFollowing();\n        }, 500);\n\n      } catch (err) {\n        console.error('Follow error:', err);\n        this.isFollowing = false;\n        this.isPending = false;\n      }\n    },\n\n    async unfollow(profileUser) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/followers?action=unfollow&profileUser=${profileUser}`, {\n          method: 'POST',\n          credentials: 'include'\n        });\n\n        if (!response.ok) {\n          throw new Error('Unfollow failed');\n        }\n\n        // Reset states immediately\n        this.isFollowing = false;\n        this.isPending = false;\n\n        // Wait for user data refresh\n        await this.fetchuserData(this.user.username);\n\n        // Clear posts if can't view anymore\n        if (!this.canViewPosts) {\n          this.posts = [];\n        }\n\n        // Double check status after a short delay\n        setTimeout(() => {\n          this.checkIfFollowing();\n        }, 300);\n\n      } catch (err) {\n        console.error('Unfollow error:', err);\n        // Keep current state on error\n      }\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    },\n    async handleNotifClick() {\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        await this.fetchNotifications();\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const res = await fetch('http://localhost:8080/api/notifications', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (res.ok) {\n          const data = await res.json();\n          this.notifications = data;\n          this.unreadNotificationCount = data.filter(n => !n.is_read).length;\n        } else {\n          this.notifications = [];\n          this.unreadNotificationCount = 0;\n        }\n      } catch (err) {\n        console.error('Failed to fetch notifications:', err);\n        this.notifications = [];\n        this.unreadNotificationCount = 0;\n      }\n    },\n    async markNotificationAsRead(notificationId) {\n      console.log(notificationId);\n\n      try {\n        // Find the notification first\n        const notification = this.notifications.find(n => n.id === notificationId);\n        if (!notification) return;\n\n        // Set a timeout to mark as read after 3 seconds\n        setTimeout(async () => {\n          try {\n            const res = await fetch(`http://localhost:8080/api/markasread`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify({\n                notificationId,\n                is_read: 1\n              })\n            });\n            console.log(\"res\", res);\n            if (res.ok) {\n              notification.is_read = true;\n              // Update unread count\n              this.unreadNotificationCount = this.notifications.filter(n => !n.is_read).length;\n            }\n          } catch (error) {\n            console.error('Error marking notification as read:', error);\n          }\n        }, 3000); // 3 seconds delay\n      } catch (error) {\n        console.error('Error marking notification as read:', error);\n      }\n    },\n    formatTimestamp(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diff = now - date;\n\n      if (diff < 60000) return 'just now';\n      if (diff < 3600000) return `${Math.floor(diff / 60000)}m ago`;\n      if (diff < 86400000) return `${Math.floor(diff / 3600000)}h ago`;\n      if (diff < 604800000) return `${Math.floor(diff / 86400000)}d ago`;\n\n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    },\n    handleNotifClose(event) {\n      if (this.showNotifications &&\n        !this.$refs.notifBtn.contains(event.target) &&\n        !this.$refs.notifPopup.contains(event.target)) {\n        this.showNotifications = false;\n      }\n    },\n    setupNotificationWebSocket() {\n      // Register handler for real-time notifications\n      notificationWebSocket.onNotification('profile-info', (notification) => {\n        console.log('Received real-time notification:', notification);\n        \n        // Refresh notifications and count from server to ensure accuracy\n        this.fetchNotifications();\n      });\n    },\n  },\n  mounted() {\n    // Set up notification WebSocket\n    this.setupNotificationWebSocket();\n    \n    this.fetchNotifications();\n    document.addEventListener('click', this.handleNotifClose);\n  },\n  beforeUnmount() {\n    // Clean up notification WebSocket\n    notificationWebSocket.removeNotificationHandler('profile-info');\n    document.removeEventListener('click', this.handleNotifClose);\n  }\n};\n</script>\n\n<style scoped>\n/* Layout */\n.profile-layout {\n  display: flex;\n  min-height: 100vh;\n  background: #eaf1fb;\n  font-family: 'Inter', sans-serif;\n}\n\n/* Sidebar */\n.sidebar {\n  width: 70px;\n  background: #23263a;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem 0 1rem 0;\n  border-radius: 1.5rem 0 0 1.5rem;\n  box-shadow: 2px 0 16px rgba(35, 38, 58, 0.08);\n  min-height: 100vh;\n  z-index: 100;\n  justify-content: flex-start;\n  position: fixed;\n  left: 0;\n  top: 0;\n}\n\n.sidebar-icons {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n  align-items: center;\n  position: relative;\n  margin-bottom: 2.5rem;\n}\n\n.sidebar-icon {\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 1rem;\n  color: #fff;\n  font-size: 1.5rem;\n  opacity: 0.7;\n  cursor: pointer;\n  transition: background 0.2s, opacity 0.2s;\n}\n\n.sidebar-icon.active,\n.sidebar-icon:hover {\n  background: #35395a;\n  opacity: 1;\n}\n\n/* Main Area */\n.profile-main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem 2rem 2rem 1.5rem;\n  min-width: 0;\n  margin-left: 70px;\n}\n\n.profile-container {\n  font-family: \"Inter\", sans-serif;\n  min-height: 100vh;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: linear-gradient(145deg, #e9ecef 0%, #dee2e6 100%);\n  position: relative;\n  overflow: hidden;\n}\n\n.profile-container::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle at 20% 30%,\n      rgba(99, 102, 241, 0.15) 0%,\n      transparent 25%),\n    radial-gradient(circle at 80% 70%,\n      rgba(99, 102, 241, 0.15) 0%,\n      transparent 25%);\n  z-index: 0;\n  opacity: 0.6;\n}\n\n.profile-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(90deg, #6366f1, #4f46e5);\n  color: #ffffff;\n  padding: 1.25rem 2.5rem;\n  border-radius: 1.25rem;\n  box-shadow: 0 8px 24px rgba(79, 70, 229, 0.3);\n  margin-bottom: 2.5rem;\n  width: 100%;\n  max-width: 1200px;\n  z-index: 1;\n  transition: transform 0.3s ease;\n}\n\n.app-name {\n  font-size: 1.75rem;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n}\n\n.user-actions {\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n}\n\n.user-actions span {\n  font-size: 1.1rem;\n  font-weight: 600;\n  background: rgba(255, 255, 255, 0.1);\n  padding: 0.5rem 1rem;\n  border-radius: 0.75rem;\n}\n\n.home-btn,\n.logout-btn {\n  background: #ffffff;\n  color: #4f46e5;\n  font-weight: 600;\n  padding: 0.6rem 1.5rem;\n  border-radius: 50px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(79, 70, 229, 0.2);\n  transition: all 0.3s ease;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n}\n\n.home-btn:hover,\n.logout-btn:hover {\n  background: linear-gradient(90deg, #e0e7ff, #c7d2fe);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(79, 70, 229, 0.3);\n}\n\n.profile-card-wrapper {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.profile-card {\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(16px);\n  border-radius: 1.5rem;\n  padding: 2.5rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  position: relative;\n  animation: fadeIn 0.5s ease;\n}\n\n.profile-image img {\n  width: 7rem;\n  height: 7rem;\n  border-radius: 50%;\n  border: 5px solid #ffffff;\n  object-fit: cover;\n  margin-top: -4rem;\n  margin-bottom: -1.5rem;\n  background: #ffffff;\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\n  transition: transform 0.3s ease;\n  position: relative;\n  z-index: 1;\n}\n\n.profile-image img:hover {\n  transform: scale(1.05);\n}\n\n.username {\n  font-size: 1.1rem;\n  color: #6b7280;\n  margin: 1rem 0 0.5rem 0;\n  font-weight: 500;\n  position: relative;\n  z-index: 2;\n}\n\n/* Follow button styles */\n.follow-btn {\n  background: #6366f1;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 2rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: 0.5rem;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.follow-btn:hover:not(:disabled) {\n  background: #4f46e5;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\n}\n\n.follow-btn.following {\n  background: #ef4444;\n}\n\n.follow-btn.following:hover {\n  background: #dc2626;\n}\n\n.follow-btn.pending {\n  background: #f59e0b;\n  cursor: not-allowed;\n  opacity: 0.8;\n}\n\n.follow-btn:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.profile-details h2 {\n  margin: 1.25rem 0 0.75rem;\n  font-size: 2rem;\n  font-weight: 700;\n  color: #1f2937;\n  letter-spacing: -0.5px;\n}\n\n.dob {\n  color: #6b7280;\n  font-size: 0.9rem;\n  margin-bottom: 0.5rem;\n}\n\n.bio {\n  font-size: 0.95rem;\n  color: #4b5563;\n  white-space: pre-line;\n  margin-bottom: 2rem;\n  background: rgba(243, 244, 246, 0.8);\n  padding: 0.75rem;\n  border-radius: 0.75rem;\n  line-height: 1.6;\n}\n\n.profile-stats {\n  display: flex;\n  justify-content: space-around;\n  margin: 2rem 0;\n  gap: 1.5rem;\n}\n\n.stat {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  gap: 0.5rem;\n  text-align: center;\n  transition: transform 0.3s ease;\n}\n\n.stat strong {\n  display: block;\n  font-size: 1.75rem;\n  font-weight: 700;\n  color: #1f2937;\n}\n\n.stat span {\n  font-size: 0.9rem;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.stat strong.clickable {\n  cursor: pointer;\n  color: #6366f1;\n  transition: color 0.3s ease;\n}\n\n.stat strong.clickable:hover {\n  color: #4f46e5;\n}\n\n.followers-list,\n.following-list {\n  flex: 1 1 100%;\n  margin-top: 25px;\n  background: #ffffff;\n  padding: 20px;\n  border-radius: 15px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n  animation: fadeIn 0.5s ease;\n}\n\n.followers-list h3,\n.following-list h3 {\n  font-size: 20px;\n  font-weight: 600;\n  color: #222;\n  margin-bottom: 15px;\n}\n\n.followers-list ul,\n.following-list ul {\n  list-style: none;\n  padding: 0;\n}\n\n.followers-list li,\n.following-list li {\n  padding: 12px 0;\n  font-size: 15px;\n  color: #444;\n  border-bottom: 1px solid #f1f1f1;\n  transition: background 0.3s ease;\n}\n\n.followers-list li:last-child,\n.following-list li:last-child {\n  border-bottom: none;\n}\n\n.settings-icon-btn {\n  position: absolute;\n  top: 1.25rem;\n  background: rgba(255, 255, 255, 0.95);\n  border: none;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 0 3px 12px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  z-index: 2;\n}\n\n.settings-icon-btn:hover {\n  background: #ffffff;\n  transform: rotate(45deg);\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n}\n\n.settings-icon-btn svg {\n  color: #4f46e5;\n  width: 24px;\n  height: 24px;\n  transition: transform 0.3s ease;\n}\n\n.settings-icon-btn:hover svg {\n  transform: scale(1.1);\n}\n\n.user-posts {\n  width: 100%;\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(16px);\n  border-radius: 1.5rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  text-align: left;\n  z-index: 1;\n  transition: transform 0.3s ease;\n}\n\n.user-posts h3 {\n  font-size: 1.75rem;\n  font-weight: 700;\n  color: #1f2937;\n  margin-bottom: 2rem;\n  position: relative;\n  padding-bottom: 0.75rem;\n}\n\n.user-posts h3::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 60px;\n  height: 4px;\n  background: linear-gradient(90deg, #4f46e5, #6366f1);\n  border-radius: 2px;\n}\n\n.user-posts .post {\n  padding: 1.75rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 1.25rem;\n  margin-bottom: 1.5rem;\n  background: #ffffff;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03);\n}\n\n.user-posts .post:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.08), 0 4px 6px -2px rgba(0, 0, 0, 0.04);\n  border-color: #d1d5db;\n}\n\n.user-posts .post-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 1.25rem;\n}\n\n.user-posts .post-author {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.user-posts .post-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 2px solid #e5e7eb;\n  transition: transform 0.3s ease;\n}\n\n.user-posts .post-avatar:hover {\n  transform: scale(1.05);\n}\n\n.user-posts .post-author-info {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.user-posts .post-author-info h4 {\n  font-size: 1.35rem;\n  font-weight: 700;\n  color: #1f2937;\n  margin: 0;\n  line-height: 1.4;\n}\n\n.user-posts .post-author-name {\n  font-size: 0.95rem;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.user-posts .post-date {\n  font-size: 0.875rem;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.user-posts .post-content {\n  margin-bottom: 1.5rem;\n}\n\n.user-posts .post-content p {\n  font-size: 1.05rem;\n  color: #374151;\n  line-height: 1.7;\n  white-space: pre-wrap;\n  word-break: break-word;\n  margin-bottom: 1.25rem;\n}\n\n.user-posts .post-image {\n  width: 100%;\n  height: auto;\n  border-radius: 1rem;\n  margin: 1rem 0;\n  border: 1px solid #e5e7eb;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.user-posts .post-image:hover {\n  transform: scale(1.01);\n}\n\n.user-posts .post-actions {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 1rem;\n  border-top: 1px solid #e5e7eb;\n}\n\n.user-posts .post-actions button {\n  background: linear-gradient(90deg, #4f46e5, #6366f1);\n  color: #fff;\n  border: none;\n  border-radius: 0.75rem;\n  padding: 0.6rem 1.25rem;\n  font-size: 0.95rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  box-shadow: 0 4px 6px -1px rgba(79, 70, 229, 0.2);\n}\n\n.user-posts .post-actions button:hover {\n  background: linear-gradient(90deg, #4338ca, #4f46e5);\n  transform: translateY(-1px);\n  box-shadow: 0 6px 8px -1px rgba(79, 70, 229, 0.25);\n}\n\n.user-posts .post-actions button:active {\n  transform: translateY(0);\n}\n\n.user-posts .post-actions button:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n.comment-date {\n  font-size: 0.85rem;\n  color: #6b7280;\n}\n\n.comment-text {\n  font-size: 0.98rem;\n  color: #374151;\n  margin: 0.25rem 0 0.5rem 0;\n  white-space: pre-line;\n}\n\n.comment-image {\n  max-width: 100%;\n  border-radius: 0.5rem;\n  margin-top: 0.5rem;\n  border: 1px solid #e5e7eb;\n  object-fit: cover;\n}\n\n.private-message {\n  width: 100%;\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 3rem 2rem;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(16px);\n  border-radius: 1.5rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  z-index: 1;\n}\n\n.lock-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n.private-message h3 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n}\n\n.private-message p {\n  font-size: 1rem;\n  color: #6b7280;\n  line-height: 1.6;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(15px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Responsive */\n@media (max-width: 1200px) {\n  .profile-main-content {\n    padding: 1rem 0.5rem;\n  }\n}\n\n@media (max-width: 900px) {\n  .profile-layout {\n    flex-direction: column;\n  }\n\n  .sidebar {\n    flex-direction: row;\n    width: 100vw;\n    height: 60px;\n    border-radius: 0 0 1.5rem 1.5rem;\n    padding: 0 1rem;\n    box-shadow: 0 2px 16px rgba(35, 38, 58, 0.08);\n  }\n\n  .sidebar-icons {\n    flex-direction: row;\n    gap: 2rem;\n\n    width: 100%;\n    justify-content: center;\n  }\n\n  .profile-main-content {\n    padding: 1rem 0.5rem;\n    align-items: center;\n  }\n\n  .profile-card-wrapper,\n  .profile-card,\n  .user-posts,\n  .private-message {\n    max-width: 100%;\n    margin: 1rem auto;\n  }\n\n  .profile-card {\n    padding: 1.5rem;\n  }\n\n  .profile-image img {\n    width: 6rem;\n    height: 6rem;\n    margin-top: -3rem;\n  }\n\n  .profile-details h2 {\n    font-size: 1.5rem;\n  }\n\n  .user-posts {\n    padding: 1rem;\n  }\n\n  .user-posts .post {\n    padding: 1.25rem;\n  }\n\n  .user-posts .post-author-info h4 {\n    font-size: 1.2rem;\n  }\n\n  .user-posts .post-content p {\n    font-size: 0.95rem;\n  }\n\n  .private-message {\n    margin-left: 0;\n    padding: 2rem 1rem;\n  }\n}\n\n@media (max-width: 600px) {\n  .profile-main-content {\n    padding: 0.5rem 0.2rem;\n    align-items: center;\n  }\n\n  .profile-card-wrapper,\n  .profile-card,\n  .user-posts,\n  .private-message {\n    width: 100%;\n    margin: 0.5rem auto;\n    padding: 1rem;\n  }\n\n  .profile-card {\n    padding: 1.25rem;\n  }\n\n  .profile-stats {\n    gap: 1rem;\n  }\n\n  .stat strong {\n    font-size: 1.5rem;\n  }\n\n  .stat span {\n    font-size: 0.85rem;\n  }\n\n  .user-posts .post-header {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .user-posts .post-author {\n    width: 100%;\n  }\n\n  .user-posts .post-date {\n    align-self: flex-start;\n  }\n\n  .user-posts .post-actions {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n\n  .user-posts .post-actions button {\n    width: 100%;\n  }\n\n  .comments-section {\n    margin-top: 1rem;\n    padding-top: 1rem;\n  }\n\n  .comment-item {\n    padding: 0.875rem;\n  }\n\n  .comment-input-row {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 0.5rem;\n  }\n\n  .comment-form .file-upload-label {\n    width: 100%;\n    justify-content: center;\n  }\n\n  .comment-submit-btn {\n    width: 100%;\n    padding: 0.7rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .profile-main-content {\n    padding: 0.5rem;\n  }\n\n  .profile-card {\n    padding: 1rem;\n    border-radius: 1rem;\n  }\n\n  .profile-image img {\n    width: 5rem;\n    height: 5rem;\n    margin-top: -2.5rem;\n  }\n\n  .profile-details h2 {\n    font-size: 1.25rem;\n  }\n\n  .bio {\n    font-size: 0.9rem;\n    padding: 0.5rem;\n  }\n\n  .profile-stats {\n    gap: 0.75rem;\n  }\n\n  .stat strong {\n    font-size: 1.25rem;\n  }\n\n  .stat span {\n    font-size: 0.8rem;\n  }\n\n  .user-posts {\n    padding: 0.75rem;\n  }\n\n  .user-posts .post {\n    padding: 1rem;\n    border-radius: 1rem;\n  }\n\n  .user-posts .post-author-info h4 {\n    font-size: 1.1rem;\n  }\n\n  .user-posts .post-content p {\n    font-size: 0.9rem;\n  }\n\n  .user-posts .post-avatar {\n    width: 40px;\n    height: 40px;\n  }\n\n  .comment-item {\n    padding: 0.75rem;\n  }\n\n  .comment-avatar {\n    width: 28px;\n    height: 28px;\n  }\n\n  .comment-text {\n    font-size: 0.85rem;\n  }\n\n  .private-message {\n    padding: 1.5rem 1rem;\n  }\n\n  .private-message h3 {\n    font-size: 1.25rem;\n  }\n\n  .private-message p {\n    font-size: 0.9rem;\n  }\n}\n\n@media (max-width: 360px) {\n  .profile-card {\n    padding: 0.875rem;\n  }\n\n  .profile-image img {\n    width: 4.5rem;\n    height: 4.5rem;\n    margin-top: -2.25rem;\n  }\n\n  .profile-details h2 {\n    font-size: 1.1rem;\n  }\n\n  .bio {\n    font-size: 0.85rem;\n  }\n\n  .profile-stats {\n    gap: 0.5rem;\n  }\n\n  .stat strong {\n    font-size: 1.1rem;\n  }\n\n  .stat span {\n    font-size: 0.75rem;\n  }\n\n  .user-posts .post {\n    padding: 0.875rem;\n  }\n\n  .user-posts .post-author-info h4 {\n    font-size: 1rem;\n  }\n\n  .user-posts .post-content p {\n    font-size: 0.85rem;\n  }\n\n  .sidebar-icons {\n    gap: 0.5rem;\n    \n  }\n\n  .sidebar-icon {\n    width: 32px;\n    height: 32px;\n    \n  }\n}\n\n.sidebar-icon[title=\"Notifications\"] {\n  position: relative;\n}\n\n.notif-badge {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  background: #ef4444;\n  color: white;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  font-size: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  border: 2px solid #fff;\n  z-index: 1;\n}\n\n.notif-popup {\n  position: absolute;\n  top: 70px;\n  left: 80px;\n  width: 350px;\n  background: #fff;\n  border-radius: 1.1rem;\n  box-shadow: 0 8px 32px rgba(35, 38, 58, 0.18);\n  z-index: 5000;\n  padding: 0.5rem 0 0.5rem 0;\n  animation: modalPopIn 0.22s cubic-bezier(.4, 2, .6, 1) both;\n}\n\n.notif-popup-header {\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #4f46e5;\n  padding: 1rem 1.5rem 0.5rem 1.5rem;\n  border-bottom: 1px solid #e5e7eb;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.notif-list {\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem 0;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.notif-item {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.7rem;\n  padding: 0.8rem 1.5rem;\n  font-size: 0.98rem;\n  color: #23263a;\n  border-bottom: 1px solid #f3f4f8;\n  transition: background 0.18s;\n  position: relative;\n  cursor: pointer;\n}\n\n.notif-item:last-child {\n  border-bottom: none;\n}\n\n.notif-item:hover {\n  background: #f8fafc;\n}\n\n.notif-text {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.2rem;\n}\n\n.notif-text b {\n  color: #4f46e5;\n  font-weight: 600;\n}\n\n.notif-text span {\n  color: #4b5563;\n  line-height: 1.4;\n}\n\n.notif-time {\n  font-size: 0.85rem;\n  color: #6b7280;\n  margin-left: 0.5rem;\n  white-space: nowrap;\n}\n\n.notif-item.empty {\n  color: #b0b3c6;\n  text-align: center;\n  justify-content: center;\n  font-size: 1rem;\n  padding: 2rem 1.5rem;\n}\n\n.notif-item.unread {\n  background: #f0f7ff;\n  border-left: 3px solid #4f46e5;\n}\n\n.notif-item.unread::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  width: 8px;\n  height: 8px;\n  background: #4f46e5;\n  border-radius: 50%;\n}\n\n@keyframes modalPopIn {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}