{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { fetchInfo } from '../api/getInfo.js';\nexport default {\n  data() {\n    return {\n      socket: null,\n      message: '',\n      receiver: '',\n      messages: [],\n      currentMessage: {\n        type: '',\n        message: '',\n        receiver: '',\n        username: ''\n      }\n    };\n  },\n  async mounted() {\n    // Get current user info\n    try {\n      const userInfo = await fetchInfo();\n      this.currentMessage.username = userInfo.Username;\n    } catch (error) {\n      console.error(\"Error fetching user info:\", error);\n    }\n\n    // Use native WebSocket API\n    this.socket = new WebSocket(\"ws://localhost:8080/ws\");\n    this.socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log(\"Received message:\", data);\n      if (data.error) {\n        this.messages.push(`Error: ${data.error}`);\n      } else {\n        this.messages.push(`${data.username}: ${data.message}`);\n      }\n    };\n    this.socket.onopen = () => {\n      console.log(\"WebSocket connected\");\n    };\n    this.socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n      this.messages.push(\"Error: WebSocket connection failed\");\n    };\n    this.socket.onclose = () => {\n      console.log(\"WebSocket disconnected\");\n      this.messages.push(\"Disconnected from server\");\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.socket && this.message.trim() !== \"\" && this.receiver) {\n        this.currentMessage.type = \"message\";\n        this.currentMessage.receiver = this.receiver;\n        this.currentMessage.message = this.message;\n        console.log(\"Sending message:\", this.currentMessage);\n        this.socket.send(JSON.stringify(this.currentMessage));\n        this.messages.push(`Sent to ${this.receiver}: ${this.message}`);\n        this.message = \"\";\n      } else if (!this.receiver) {\n        this.messages.push(\"Error: Please select a receiver first\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["fetchInfo","data","socket","message","receiver","messages","currentMessage","type","username","mounted","userInfo","Username","error","console","WebSocket","onmessage","event","JSON","parse","log","push","onopen","onerror","onclose","methods","sendMessage","trim","send","stringify"],"sources":["/Users/apple/Desktop/social-1/social-network/frontend/src/components/WebSocket.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>WebSocket</h1>\n        <div>\n            <div>Receiver: {{ receiver }}</div>\n        </div>\n        <div>\n            <input v-model=\"message\" @keyup.enter=\"sendMessage\" placeholder=\"Type a message...\" />\n            <button @click=\"sendMessage\">Send</button>\n        </div>\n        <div v-for=\"(msg, index) in messages\" :key=\"index\">{{ msg }}</div>\n    </div>\n</template>\n\n<script>\nimport { fetchInfo } from '../api/getInfo.js';\n\nexport default {\n    data() {\n        return {\n            socket: null,\n            message: '',\n            receiver: '',\n            messages: [],\n            currentMessage: {\n                type: '',\n                message: '',\n                receiver: '',\n                username: ''\n            }\n        };\n    },\n    \n    async mounted() {\n        // Get current user info\n        try {\n            const userInfo = await fetchInfo();\n            this.currentMessage.username = userInfo.Username;\n        } catch (error) {\n            console.error(\"Error fetching user info:\", error);\n        }\n\n        // Use native WebSocket API\n        this.socket = new WebSocket(\"ws://localhost:8080/ws\");\n\n        this.socket.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            console.log(\"Received message:\", data);\n            \n            if (data.error) {\n                this.messages.push(`Error: ${data.error}`);\n            } else {\n                this.messages.push(`${data.username}: ${data.message}`);\n            }\n        };\n\n        this.socket.onopen = () => {\n            console.log(\"WebSocket connected\");\n        };\n\n        this.socket.onerror = (error) => {\n            console.error(\"WebSocket error:\", error);\n            this.messages.push(\"Error: WebSocket connection failed\");\n        };\n\n        this.socket.onclose = () => {\n            console.log(\"WebSocket disconnected\");\n            this.messages.push(\"Disconnected from server\");\n        };\n    },\n    methods: {\n        sendMessage() {\n            if (this.socket && this.message.trim() !== \"\" && this.receiver) {\n                this.currentMessage.type = \"message\";\n                this.currentMessage.receiver = this.receiver;\n                this.currentMessage.message = this.message;\n                \n                console.log(\"Sending message:\", this.currentMessage);\n                this.socket.send(JSON.stringify(this.currentMessage));\n                \n                this.messages.push(`Sent to ${this.receiver}: ${this.message}`);\n                this.message = \"\";\n            } else if (!this.receiver) {\n                this.messages.push(\"Error: Please select a receiver first\");\n            }\n        },\n    },\n};\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}