{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\");\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["/Users/apple/Desktop/front/frontend-social/frontend/src/components/AuthMiddleware.vue"],"sourcesContent":["<template>\n    <div class=\"loading\">Loading...</div>\n  </template>\n  \n  <script>\n  \n  export default {\n    name: 'AuthMiddleware',  \n    data() {\n      return {\n        isLoggedIn: false,  \n      };\n    },\n    methods: {\n      async checkLogin() {\n        try {\n          const response = await fetch('http://20.56.138.63:8080/middle', {\n            method: 'GET',\n            credentials: 'include',\n          });\n  \n          const data = await response.json();\n  \n          if (data.message === 'Login successful') {\n            this.isLoggedIn = true;\n            this.$router.push('/home'); \n          } else {\n            this.isLoggedIn = false;\n            this.$router.push('/login');\n          }\n        } catch (error) {\n          console.error('Error during login check:', error);\n          this.$router.push('/login'); \n        }\n      }\n    },\n    mounted() {\n      this.checkLogin();\n    }\n  };\n  </script>\n\n<style scoped>\n.loading {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 24px;\n  color: #333;\n  font-weight: bold;\n  text-align: center;\n  background-color: #f9f9f9;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.loading::after {\n  content: \"\";\n  width: 48px;\n  height: 48px;\n  border: 6px solid #ccc;\n  border-top: 6px solid #333;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  display: block;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n</style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAS;;uBAApBC,mBAAA,CAAqC,OAArCC,UAAqC,EAAhB,YAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}